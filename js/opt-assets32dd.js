/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js-3.2.2/ontraport/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./www/js-3.2.2/ontraport/opt_assets/opt-assets.webpack.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./legacy/include/formEditor/jquery.jb.formconditions.js":
/*!***************************************************************!*\
  !*** ./legacy/include/formEditor/jquery.jb.formconditions.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n    Jquery form conditions\n    allows you to show / hide elements on a form based on element values\n\n    Copyright (c) 2010 Jesse Baird <jebaird@gmail.com>\n   \thttp://jebaird.com/blog/formconditons-jquery-ui-widget-assists-you-create-dynamic-forms\n    3/17/2011\n\n    Dual licensed under the MIT (MIT-LICENSE.txt)\n    and GPL (GPL-LICENSE.txt) licenses.\n\n\n    happy saint pats!\n\n*/\n\n/*\n\nTODO: add support in outcome and rule for callback,\n\n*/\n(function ($) {\n  // Helpers\n  var toLower = function (string) {\n    return string && string.toLowerCase ? string.toLowerCase() : string;\n  },\n      // Stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex/6969486#6969486\n  escapeRegExp = function (str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  };\n\n  $.widget('jb.formConditions', {\n    options: {\n      // Applied when the outcomes are processed, return null to skip processing\n      outcomeActionMutator: function (outcome, rulesResult) {\n        return outcome.action;\n      },\n\n      /*\n       * Called after the rules are checked, this, an instance\n       * can be used to change how the outcomes are processed\n       * like if you wanted to invert every rule with out supplying the inverse\n       */\n      processorMutator: function (condition, rulesResult) {\n        if (rulesResult == true && condition.tru != undefined) {\n          this._processOutcomes(condition.tru, rulesResult);\n        } else if (rulesResult == false && condition.fal != undefined) {\n          this._processOutcomes(condition.fal, rulesResult);\n        }\n      },\n      // Run the processor on these events\n      inputEvent: 'blur',\n      // This conditions array is shared across multiple instances of this plugin.\n      // When conditions are added, the uuid of the plugin instance will be attached to the condition object.\n      // When the conditions are processed, the uuid of the form conditions processor is checked against\n      // the uuid of the condition to make sure we only processing conditions for the correct form\n      conditions: []\n    },\n    ruleDefaults: {\n      selector: '',\n      // Relative to element that widget is run on\n      operator: '',\n      // String equal to value or function\n      value: ''\n    },\n    outcomeDefaults: {\n      action: 'hide',\n      // String or function\n      selector: ''\n    },\n\n    /*\n     * Build in outcome actions\n     * to add your own use this code\n     * $.extend($.jb.formConditions.prototype.outcomeActions,{\n     * \t'youractionname': function(){}\n     * })\n     */\n    outcomeActions: {\n      show: function (element) {\n        element.parent().show();\n      },\n      hide: function (element) {\n        element.parent().hide();\n      }\n    },\n    operators: {\n      // This is this widget instance\n      equal: function (val, rule, element) {\n        return toLower(val) == toLower(rule.value) ? true : false;\n      },\n      'not-equal': function (val, rule, element) {\n        return !$.jb.formConditions.prototype.operators.equal.apply(this, arguments);\n      },\n      checked: function (val, rule, element) {\n        return element.is(':checked');\n      },\n      'not-checked': function (val, rule, element) {\n        return !$.jb.formConditions.prototype.operators.checked.apply(this, arguments);\n      },\n      // TODO: add support for arrays and objects\n      contains: function (val, rule, element) {\n        var regEx = new RegExp('(' + rule.value + ')', 'gi');\n        return regEx.test(val);\n      },\n      'doesnt-contain': function (val, rule, element) {\n        return !$.jb.formConditions.prototype.operators.contains.apply(this, arguments);\n      },\n      // Starts with\n      'starts-with': function (val, rule, element) {\n        var regEx = new RegExp('^(' + escapeRegExp(rule.value) + ')', 'gi');\n        return regEx.test(val);\n      },\n      'doesnt-start-with': function (val, rule, element) {\n        var regEx = new RegExp('^(' + escapeRegExp(rule.value) + ')', 'gi');\n        return !regEx.test(val);\n      },\n      'ends-with': function (val, rule, element) {\n        var regEx = new RegExp('(' + escapeRegExp(rule.value) + ')$', 'gi');\n        return regEx.test(val);\n      },\n      'doesnt-end-with': function (val, rule, element) {\n        var regEx = new RegExp('(' + escapeRegExp(rule.value) + ')$', 'gi');\n        return !regEx.test(val);\n      }\n    },\n    _create: function () {\n      var self = this,\n          element = self.element,\n          options = self.options,\n          // #\n      conditions = options.conditions,\n          cLen = conditions.length; // Cache the last result of a rule\n\n      self.rulesLastResult = {}; // #### bind on change\n      // like keyup\n\n      element.delegate(':input', (this.options.inputEvent + ' ').split(' ').join('.formConditions '), function () {\n        self._processor();\n      });\n\n      self._processor();\n    },\n\n    /*\n     * This is where the magic happens\n     */\n    _processor: function () {\n      var conditions = this.options.conditions,\n          lastResults = this.rulesLastResult;\n\n      for (var i = 0; i < conditions.length; i++) {\n        var condition = conditions[i]; // If the condition's uuid does not match the uuid of this plugin instance, don't process the condition\n\n        if (condition.hasOwnProperty('uuid') && this.hasOwnProperty('uuid') && condition.uuid !== this.uuid) {\n          continue;\n        }\n\n        var rulesResult = this._checkRules(condition.rules);\n\n        this.options.processorMutator.apply(this, [condition, rulesResult]);\n        lastResults[condition.name] = rulesResult;\n      }\n    },\n    _processOutcomes: function (outcomes, rulesResult) {\n      var element = this.element;\n\n      for (var i = 0; i < outcomes.length; i++) {\n        var outcome = outcomes[i],\n            target = outcome.selector ? element.find(outcome.selector) : undefined,\n            // Use the mutator\n        action = this.options.outcomeActionMutator.apply(this, [outcome, rulesResult]); // If we return null skip the processing\n\n        if (action === null) {\n          continue;\n        }\n\n        var type = typeof action;\n\n        if (type == 'string') {\n          this.outcomeActions[action].apply(this, [target]);\n        } else if (type == 'function') {\n          action.apply(this, [target]);\n        }\n      }\n    },\n    _checkRules: function (rules) {\n      for (var i = 0, $elem = this.element, ruleIsTrue = true; i < rules.length; i++) {\n        var rule = rules[i],\n            target = $elem.find(rule.selector),\n            operator = $.jb.formConditions.prototype.operators[rule.operator]; // Target isn't in the form\n\n        if (target.length == 0) {\n          ruleIsTrue = false;\n          break;\n        }\n\n        if (operator == undefined) {\n          console.error(' rule.operator is undefined ');\n        }\n\n        var val = target.val(),\n            ret = operator.apply(this, [val, rule, target]);\n\n        if (ret == false) {\n          ruleIsTrue = false;\n          break;\n        }\n      }\n\n      return ruleIsTrue;\n    },\n    addCondition: function (c) {\n      // Run condition before we push it on to the stack\n      this._processOutcomes(this._checkRules(c.rules) ? c.tru : c.fal); // Add uuid of the formconditions plugin instance to the condition.\n      // This is necessary to process conditions of a specific form (when multiple are present)\n      // because the condition array is shared across plugin instances\n\n\n      if (this.hasOwnProperty('uuid')) {\n        c.uuid = this.uuid;\n      }\n\n      this.options.conditions.push(c);\n    },\n    removeCondition: function (name) {\n      this.options.conditions = $.map(this.options.conditions, function (condition) {\n        return condition.name == name && typeof condition.name != undefined ? null : condition;\n      });\n    },\n    destroy: function () {\n      this.element.undelegate('.formConditions');\n    }\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./legacy/include/formEditor/jquery.jb.formconditions.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./www/js-3.2.2/globalize/globalize.js":
/*!*********************************************!*\
  !*** ./www/js-3.2.2/globalize/globalize.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\n(function () {\n  /*\n   Globalize\n  \n   http://github.com/jquery/globalize\n  \n   Copyright Software Freedom Conservancy, Inc.\n   Dual licensed under the MIT or GPL Version 2 licenses.\n   http://jquery.org/license\n  */\n  (function (T, U) {\n    var L, G;\n\n    var k = function (a) {\n      return new k.prototype.init(a);\n    };\n\n     true ? module.exports = k : undefined;\n    k.cultures = {};\n    k.prototype = {\n      constructor: k,\n      init: function (a) {\n        this.cultures = k.cultures;\n        this.cultureSelector = a;\n        return this;\n      }\n    };\n    k.prototype.init.prototype = k.prototype;\n    k.cultures[\"default\"] = {\n      name: \"en\",\n      englishName: \"English\",\n      nativeName: \"English\",\n      isRTL: !1,\n      language: \"en\",\n      numberFormat: {\n        pattern: [\"-n\"],\n        decimals: 2,\n        \",\": \",\",\n        \".\": \".\",\n        groupSizes: [3],\n        \"+\": \"+\",\n        \"-\": \"-\",\n        NaN: \"NaN\",\n        negativeInfinity: \"-Infinity\",\n        positiveInfinity: \"Infinity\",\n        percent: {\n          pattern: [\"-n %\", \"n %\"],\n          decimals: 2,\n          groupSizes: [3],\n          \",\": \",\",\n          \".\": \".\",\n          symbol: \"%\"\n        },\n        currency: {\n          pattern: [\"($n)\", \"$n\"],\n          decimals: 2,\n          groupSizes: [3],\n          \",\": \",\",\n          \".\": \".\",\n          symbol: \"$\"\n        }\n      },\n      calendars: {\n        standard: {\n          name: \"Gregorian_USEnglish\",\n          \"/\": \"/\",\n          \":\": \":\",\n          firstDay: 0,\n          days: {\n            names: \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\n            namesAbbr: \"Sun Mon Tue Wed Thu Fri Sat\".split(\" \"),\n            namesShort: \"Su Mo Tu We Th Fr Sa\".split(\" \")\n          },\n          months: {\n            names: \"January February March April May June July August September October November December \".split(\" \"),\n            namesAbbr: \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec \".split(\" \")\n          },\n          AM: [\"AM\", \"am\", \"AM\"],\n          PM: [\"PM\", \"pm\", \"PM\"],\n          eras: [{\n            name: \"A.D.\",\n            start: null,\n            offset: 0\n          }],\n          twoDigitYearMax: 2029,\n          patterns: {\n            d: \"M/d/yyyy\",\n            D: \"dddd, MMMM dd, yyyy\",\n            t: \"h:mm tt\",\n            T: \"h:mm:ss tt\",\n            f: \"dddd, MMMM dd, yyyy h:mm tt\",\n            F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n            M: \"MMMM dd\",\n            Y: \"yyyy MMMM\",\n            S: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\"\n          }\n        }\n      },\n      messages: {}\n    };\n    k.cultures[\"default\"].calendar = k.cultures[\"default\"].calendars.standard;\n    k.cultures.en = k.cultures[\"default\"];\n    k.cultureSelector = \"en\";\n    var V = /^0x[a-f0-9]+$/i;\n    var W = /^[+-]?infinity$/i;\n    var X = /^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/;\n    var Y = /^\\s+|\\s+$/g;\n\n    var w = function (a, b) {\n      if (a.indexOf) return a.indexOf(b);\n\n      for (var c = 0, e = a.length; c < e; c++) if (a[c] === b) return c;\n\n      return -1;\n    };\n\n    var H = function (a, b) {\n      return a.substr(a.length - b.length) === b;\n    };\n\n    var N = function (a) {\n      var b,\n          c,\n          e,\n          f = arguments[0] || {},\n          h = 1,\n          g = arguments.length;\n      a = !1;\n      \"boolean\" === typeof f && (a = f, f = arguments[1] || {}, h = 2);\n\n      for (\"object\" === typeof f || Z(f) || (f = {}); h < g; h++) if (null != (b = arguments[h])) for (c in b) {\n        var d = f[c];\n        var l = b[c];\n        f !== l && (a && l && (M(l) || (e = I(l))) ? (e ? (e = !1, d = d && I(d) ? d : []) : d = d && M(d) ? d : {}, f[c] = N(a, d, l)) : l !== U && (f[c] = l));\n      }\n\n      return f;\n    };\n\n    var I = Array.isArray || function (a) {\n      return \"[object Array]\" === Object.prototype.toString.call(a);\n    };\n\n    var Z = function (a) {\n      return \"[object Function]\" === Object.prototype.toString.call(a);\n    };\n\n    var M = function (a) {\n      return \"[object Object]\" === Object.prototype.toString.call(a);\n    };\n\n    var E = function (a, b) {\n      return 0 === a.indexOf(b);\n    };\n\n    var y = function (a) {\n      return (a + \"\").replace(Y, \"\");\n    };\n\n    var O = function (a) {\n      return isNaN(a) ? NaN : a | 0;\n    };\n\n    var z = function (a, b, c) {\n      var e;\n\n      for (e = a.length; e < b; e += 1) a = c ? \"0\" + a : a + \"0\";\n\n      return a;\n    };\n\n    var J = function (a, b) {\n      for (var c = 0, e = !1, f = 0, h = a.length; f < h; f++) {\n        var g = a.charAt(f);\n\n        switch (g) {\n          case \"'\":\n            e ? b.push(\"'\") : c++;\n            e = !1;\n            break;\n\n          case \"\\\\\":\n            e && b.push(\"\\\\\");\n            e = !e;\n            break;\n\n          default:\n            b.push(g), e = !1;\n        }\n      }\n\n      return c;\n    };\n\n    var P = function (a, b) {\n      b = b || \"F\";\n      a = a.patterns;\n      var c = b.length;\n\n      if (1 === c) {\n        a = a[b];\n        if (!a) throw \"Invalid date format string '\" + b + \"'.\";\n        b = a;\n      } else 2 === c && \"%\" === b.charAt(0) && (b = b.charAt(1));\n\n      return b;\n    };\n\n    var Q = function (a, b, c) {\n      function e(a, d) {\n        a += \"\";\n        return 1 < d && a.length < d ? (a = aa[d - 2] + a, a.substr(a.length - d, d)) : a;\n      }\n\n      function f() {\n        if (n || k) return n;\n        n = t.test(b);\n        k = !0;\n        return n;\n      }\n\n      function h(a, d) {\n        if (q) return q[d];\n\n        switch (d) {\n          case 0:\n            return a.getFullYear();\n\n          case 1:\n            return a.getMonth();\n\n          case 2:\n            return a.getDate();\n        }\n      }\n\n      var g = c.calendar,\n          d = g.convert;\n\n      if (!b || !b.length || \"i\" === b) {\n        if (c && c.name.length) {\n          if (d) c = Q(a, g.patterns.F, c);else {\n            c = new Date(a.getTime());\n            var l = C(a, g.eras);\n            c.setFullYear(K(a, g, l));\n            c = c.toLocaleString();\n          }\n        } else c = a.toString();\n        return c;\n      }\n\n      l = g.eras;\n      var R = \"s\" === b;\n      b = P(g, b);\n      c = [];\n      var aa = [\"0\", \"00\", \"000\"],\n          k,\n          t = /([^d]|^)(d|dd)([^d]|$)/g,\n          u = 0,\n          B = S(),\n          q;\n\n      for (!R && d && (q = d.fromGregorian(a));;) {\n        var m = B.lastIndex;\n        d = B.exec(b);\n        m = b.slice(m, d ? d.index : b.length);\n        u += J(m, c);\n        if (!d) break;\n        if (u % 2) c.push(d[0]);else switch (m = d[0], d = m.length, m) {\n          case \"ddd\":\n          case \"dddd\":\n            c.push((3 === d ? g.days.namesAbbr : g.days.names)[a.getDay()]);\n            break;\n\n          case \"d\":\n          case \"dd\":\n            var n = !0;\n            c.push(e(h(a, 2), d));\n            break;\n\n          case \"MMM\":\n          case \"MMMM\":\n            m = h(a, 1);\n            c.push(g.monthsGenitive && f() ? g.monthsGenitive[3 === d ? \"namesAbbr\" : \"names\"][m] : g.months[3 === d ? \"namesAbbr\" : \"names\"][m]);\n            break;\n\n          case \"M\":\n          case \"MM\":\n            c.push(e(h(a, 1) + 1, d));\n            break;\n\n          case \"y\":\n          case \"yy\":\n          case \"yyyy\":\n            m = q ? q[0] : K(a, g, C(a, l), R);\n            4 > d && (m %= 100);\n            c.push(e(m, d));\n            break;\n\n          case \"h\":\n          case \"hh\":\n            m = a.getHours() % 12;\n            0 === m && (m = 12);\n            c.push(e(m, d));\n            break;\n\n          case \"H\":\n          case \"HH\":\n            c.push(e(a.getHours(), d));\n            break;\n\n          case \"m\":\n          case \"mm\":\n            c.push(e(a.getMinutes(), d));\n            break;\n\n          case \"s\":\n          case \"ss\":\n            c.push(e(a.getSeconds(), d));\n            break;\n\n          case \"t\":\n          case \"tt\":\n            m = 12 > a.getHours() ? g.AM ? g.AM[0] : \" \" : g.PM ? g.PM[0] : \" \";\n            c.push(1 === d ? m.charAt(0) : m);\n            break;\n\n          case \"f\":\n          case \"ff\":\n          case \"fff\":\n            c.push(e(a.getMilliseconds(), 3).substr(0, d));\n            break;\n\n          case \"z\":\n          case \"zz\":\n            m = a.getTimezoneOffset() / 60;\n            c.push((0 >= m ? \"+\" : \"-\") + e(Math.floor(Math.abs(m)), d));\n            break;\n\n          case \"zzz\":\n            m = a.getTimezoneOffset() / 60;\n            c.push((0 >= m ? \"+\" : \"-\") + e(Math.floor(Math.abs(m)), 2) + \":\" + e(Math.abs(a.getTimezoneOffset() % 60), 2));\n            break;\n\n          case \"g\":\n          case \"gg\":\n            g.eras && c.push(g.eras[C(a, l)].name);\n            break;\n\n          case \"/\":\n            c.push(g[\"/\"]);\n            break;\n\n          default:\n            throw \"Invalid date format pattern '\" + m + \"'.\";\n        }\n      }\n\n      return c.join(\"\");\n    };\n\n    (function () {\n      var a = function (a, c, e) {\n        var b = e.groupSizes,\n            h = b[0],\n            g = 1,\n            d = Math.pow(10, c);\n        d = Math.round(a * d) / d;\n        isFinite(d) || (d = a);\n        d = (d + \"\").split(/e/i);\n        var l = 1 < d.length ? parseInt(d[1], 10) : 0;\n        a = d[0];\n        d = a.split(\".\");\n        a = d[0];\n        d = 1 < d.length ? d[1] : \"\";\n        0 < l ? (d = z(d, l, !1), a += d.slice(0, l), d = d.substr(l)) : 0 > l && (l = -l, a = z(a, l + 1), d = a.slice(-l, a.length) + d, a = a.slice(0, -l));\n        d = 0 < c ? e[\".\"] + (d.length > c ? d.slice(0, c) : z(d, c)) : \"\";\n        c = a.length - 1;\n        e = e[\",\"];\n\n        for (l = \"\"; 0 <= c;) {\n          if (0 === h || h > c) return a.slice(0, c + 1) + (l.length ? e + l + d : d);\n          l = a.slice(c - h + 1, c + 1) + (l.length ? e + l : \"\");\n          c -= h;\n          g < b.length && (h = b[g], g++);\n        }\n\n        return a.slice(0, c + 1) + e + l + d;\n      };\n\n      L = function (b, c, e) {\n        if (!isFinite(b)) return Infinity === b ? e.numberFormat.positiveInfinity : -Infinity === b ? e.numberFormat.negativeInfinity : e.numberFormat.NaN;\n        if (!c || \"i\" === c) return e.name.length ? b.toLocaleString() : b.toString();\n        c = c || \"D\";\n        e = e.numberFormat;\n        var f = Math.abs(b),\n            h = -1;\n        1 < c.length && (h = parseInt(c.slice(1), 10));\n        var g = c.charAt(0).toUpperCase();\n\n        switch (g) {\n          case \"D\":\n            c = \"n\";\n            f = O(f);\n            -1 !== h && (f = z(\"\" + f, h, !0));\n            0 > b && (f = \"-\" + f);\n            break;\n\n          case \"N\":\n            var d = e;\n\n          case \"C\":\n            d = d || e.currency;\n\n          case \"P\":\n            d = d || e.percent;\n            c = 0 > b ? d.pattern[0] : d.pattern[1] || \"n\";\n            -1 === h && (h = d.decimals);\n            f = a(f * (\"P\" === g ? 100 : 1), h, d);\n            break;\n\n          default:\n            throw \"Bad number format specifier: \" + g;\n        }\n\n        b = /n|\\$|-|%/g;\n\n        for (d = \"\";;) {\n          h = b.lastIndex;\n          g = b.exec(c);\n          d += c.slice(h, g ? g.index : c.length);\n          if (!g) break;\n\n          switch (g[0]) {\n            case \"n\":\n              d += f;\n              break;\n\n            case \"$\":\n              d += e.currency.symbol;\n              break;\n\n            case \"-\":\n              /[1-9]/.test(f) && (d += e[\"-\"]);\n              break;\n\n            case \"%\":\n              d += e.percent.symbol;\n          }\n        }\n\n        return d;\n      };\n    })();\n\n    var S = function () {\n      return /\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;\n    };\n\n    var C = function (a, b) {\n      if (!b) return 0;\n\n      for (var c = a.getTime(), e = 0, f = b.length; e < f; e++) if (a = b[e].start, null === a || c >= a) return e;\n\n      return 0;\n    };\n\n    var K = function (a, b, c, e) {\n      a = a.getFullYear();\n      !e && b.eras && (a -= b.eras[c].offset);\n      return a;\n    };\n\n    (function () {\n      var a = function (a, b) {\n        if (100 > b) {\n          var d = new Date(),\n              c = C(d);\n          d = K(d, a, c);\n          a = a.twoDigitYearMax;\n          a = \"string\" === typeof a ? new Date().getFullYear() % 100 + parseInt(a, 10) : a;\n          b += d - d % 100;\n          b > a && (b -= 100);\n        }\n\n        return b;\n      };\n\n      var b = function (a, b, c) {\n        var d = a.days,\n            e = a._upperDays;\n        e || (a._upperDays = e = [g(d.names), g(d.namesAbbr), g(d.namesShort)]);\n        b = h(b);\n        c ? (a = w(e[1], b), -1 === a && (a = w(e[2], b))) : a = w(e[0], b);\n        return a;\n      };\n\n      var c = function (a, b, c) {\n        var d = a.months,\n            e = a.monthsGenitive || a.months,\n            f = a._upperMonths,\n            l = a._upperMonthsGen;\n        f || (a._upperMonths = f = [g(d.names), g(d.namesAbbr)], a._upperMonthsGen = l = [g(e.names), g(e.namesAbbr)]);\n        b = h(b);\n        a = w(c ? f[1] : f[0], b);\n        0 > a && (a = w(c ? l[1] : l[0], b));\n        return a;\n      };\n\n      var e = function (a, b) {\n        var d = a._parseRegExp;\n\n        if (d) {\n          var c = d[b];\n          if (c) return c;\n        } else a._parseRegExp = d = {};\n\n        c = P(a, b).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g, \"\\\\\\\\$1\");\n\n        for (var e = [\"^\"], f = [], g = 0, l = 0, h = S(), k; null !== (k = h.exec(c));) {\n          var n = c.slice(g, k.index);\n          g = h.lastIndex;\n          l += J(n, e);\n          if (l % 2) e.push(k[0]);else {\n            n = k[0];\n            var y = n.length;\n\n            switch (n) {\n              case \"dddd\":\n              case \"ddd\":\n              case \"MMMM\":\n              case \"MMM\":\n              case \"gg\":\n              case \"g\":\n                n = \"(\\\\D+)\";\n                break;\n\n              case \"tt\":\n              case \"t\":\n                n = \"(\\\\D*)\";\n                break;\n\n              case \"yyyy\":\n              case \"fff\":\n              case \"ff\":\n              case \"f\":\n                n = \"(\\\\d{\" + y + \"})\";\n                break;\n\n              case \"dd\":\n              case \"d\":\n              case \"MM\":\n              case \"M\":\n              case \"yy\":\n              case \"y\":\n              case \"HH\":\n              case \"H\":\n              case \"hh\":\n              case \"h\":\n              case \"mm\":\n              case \"m\":\n              case \"ss\":\n              case \"s\":\n                n = \"(\\\\d\\\\d?)\";\n                break;\n\n              case \"zzz\":\n                n = \"([+-]?\\\\d\\\\d?:\\\\d{2})\";\n                break;\n\n              case \"zz\":\n              case \"z\":\n                n = \"([+-]?\\\\d\\\\d?)\";\n                break;\n\n              case \"/\":\n                n = \"(\\\\\" + a[\"/\"] + \")\";\n                break;\n\n              default:\n                throw \"Invalid date format pattern '\" + n + \"'.\";\n            }\n\n            n && e.push(n);\n            f.push(k[0]);\n          }\n        }\n\n        J(c.slice(g), e);\n        e.push(\"$\");\n        a = {\n          regExp: e.join(\"\").replace(/\\s+/g, \"\\\\s+\"),\n          groups: f\n        };\n        return d[b] = a;\n      };\n\n      var f = function (a, b, c) {\n        return a < b || a > c;\n      };\n\n      var h = function (a) {\n        return a.split(\"\\u00a0\").join(\" \").toUpperCase();\n      };\n\n      var g = function (a) {\n        for (var b = [], c = 0, d = a.length; c < d; c++) b[c] = h(a[c]);\n\n        return b;\n      };\n\n      G = function (d, g, h) {\n        d = y(d);\n        h = h.calendar;\n        g = e(h, g);\n        var k = new RegExp(g.regExp).exec(d);\n        if (null === k) return null;\n        var l = g.groups,\n            t = g = d = null,\n            u = null,\n            B = null,\n            q = 0,\n            m = 0,\n            n = 0,\n            w = 0;\n        var x = null;\n\n        for (var z = !1, A = 0, C = l.length; A < C; A++) {\n          var p = k[A + 1];\n\n          if (p) {\n            var r = l[A],\n                D = r.length,\n                v = parseInt(p, 10);\n\n            switch (r) {\n              case \"dd\":\n              case \"d\":\n                u = v;\n                if (f(u, 1, 31)) return null;\n                break;\n\n              case \"MMM\":\n              case \"MMMM\":\n                t = c(h, p, 3 === D);\n                if (f(t, 0, 11)) return null;\n                break;\n\n              case \"M\":\n              case \"MM\":\n                t = v - 1;\n                if (f(t, 0, 11)) return null;\n                break;\n\n              case \"y\":\n              case \"yy\":\n              case \"yyyy\":\n                g = 4 > D ? a(h, v) : v;\n                if (f(g, 0, 9999)) return null;\n                break;\n\n              case \"h\":\n              case \"hh\":\n                q = v;\n                12 === q && (q = 0);\n                if (f(q, 0, 11)) return null;\n                break;\n\n              case \"H\":\n              case \"HH\":\n                q = v;\n                if (f(q, 0, 23)) return null;\n                break;\n\n              case \"m\":\n              case \"mm\":\n                m = v;\n                if (f(m, 0, 59)) return null;\n                break;\n\n              case \"s\":\n              case \"ss\":\n                n = v;\n                if (f(n, 0, 59)) return null;\n                break;\n\n              case \"tt\":\n              case \"t\":\n                z = h.PM && (p === h.PM[0] || p === h.PM[1] || p === h.PM[2]);\n                if (!z && (!h.AM || p !== h.AM[0] && p !== h.AM[1] && p !== h.AM[2])) return null;\n                break;\n\n              case \"f\":\n              case \"ff\":\n              case \"fff\":\n                w = v * Math.pow(10, 3 - D);\n                if (f(w, 0, 999)) return null;\n                break;\n\n              case \"ddd\":\n              case \"dddd\":\n                B = b(h, p, 3 === D);\n                if (f(B, 0, 6)) return null;\n                break;\n\n              case \"zzz\":\n                r = p.split(/:/);\n                if (2 !== r.length) return null;\n                x = parseInt(r[0], 10);\n                if (f(x, -12, 13)) return null;\n                r = parseInt(r[1], 10);\n                if (f(r, 0, 59)) return null;\n                x = 60 * x + (E(p, \"-\") ? -r : r);\n                break;\n\n              case \"z\":\n              case \"zz\":\n                x = v;\n                if (f(x, -12, 13)) return null;\n                x *= 60;\n                break;\n\n              case \"g\":\n              case \"gg\":\n                if (!p || !h.eras) return null;\n                p = y(p.toLowerCase());\n                r = 0;\n\n                for (D = h.eras.length; r < D; r++) if (p === h.eras[r].name.toLowerCase()) {\n                  d = r;\n                  break;\n                }\n\n                if (null === d) return null;\n            }\n          }\n        }\n\n        k = new Date();\n        l = (A = h.convert) ? A.fromGregorian(k)[0] : k.getFullYear();\n        null === g ? g = l : h.eras && (g += h.eras[d || 0].offset);\n        null === t && (t = 0);\n        null === u && (u = 1);\n\n        if (A) {\n          if (k = A.toGregorian(g, t, u), null === k) return null;\n        } else if (k.setFullYear(g, t, u), k.getDate() !== u || null !== B && k.getDay() !== B) return null;\n\n        z && 12 > q && (q += 12);\n        k.setHours(q, m, n, w);\n        null !== x && (h = k.getMinutes() - (x + k.getTimezoneOffset()), k.setHours(k.getHours() + parseInt(h / 60, 10), h % 60));\n        return k;\n      };\n    })();\n\n    var F = function (a, b, c) {\n      var e = b[\"-\"];\n      b = b[\"+\"];\n      var f;\n\n      switch (c) {\n        case \"n -\":\n          e = \" \" + e, b = \" \" + b;\n\n        case \"n-\":\n          H(a, e) ? f = [\"-\", a.substr(0, a.length - e.length)] : H(a, b) && (f = [\"+\", a.substr(0, a.length - b.length)]);\n          break;\n\n        case \"- n\":\n          e += \" \", b += \" \";\n\n        case \"-n\":\n          E(a, e) ? f = [\"-\", a.substr(e.length)] : E(a, b) && (f = [\"+\", a.substr(b.length)]);\n          break;\n\n        case \"(n)\":\n          E(a, \"(\") && H(a, \")\") && (f = [\"-\", a.substr(1, a.length - 2)]);\n      }\n\n      return f || [\"\", a];\n    };\n\n    k.prototype.findClosestCulture = function (a) {\n      return k.findClosestCulture.call(this, a);\n    };\n\n    k.prototype.format = function (a, b, c) {\n      return k.format.call(this, a, b, c);\n    };\n\n    k.prototype.localize = function (a, b) {\n      return k.localize.call(this, a, b);\n    };\n\n    k.prototype.parseInt = function (a, b, c) {\n      return k.parseInt.call(this, a, b, c);\n    };\n\n    k.prototype.parseFloat = function (a, b, c) {\n      return k.parseFloat.call(this, a, b, c);\n    };\n\n    k.prototype.culture = function (a) {\n      return k.culture.call(this, a);\n    };\n\n    k.addCultureInfo = function (a, b, c) {\n      var e = !1;\n      \"string\" !== typeof a ? (c = a, a = this.culture().name, b = this.cultures[a]) : \"string\" !== typeof b ? (c = b, e = null == this.cultures[a], b = this.cultures[a] || this.cultures[\"default\"]) : (e = !0, b = this.cultures[b]);\n      this.cultures[a] = N(!0, {}, b, c);\n      e && (this.cultures[a].calendar = this.cultures[a].calendars.standard);\n    };\n\n    k.findClosestCulture = function (a) {\n      var b;\n      if (!a) return this.cultures[this.cultureSelector] || this.cultures[\"default\"];\n      \"string\" === typeof a && (a = a.split(\",\"));\n\n      if (I(a)) {\n        var c = this.cultures,\n            e = a,\n            f,\n            h = e.length,\n            g = [];\n\n        for (f = 0; f < h; f++) {\n          a = y(e[f]);\n          a = a.split(\";\");\n          var d = y(a[0]);\n          1 === a.length ? a = 1 : (a = y(a[1]), 0 === a.indexOf(\"q=\") ? (a = a.substr(2), a = parseFloat(a), a = isNaN(a) ? 0 : a) : a = 1);\n          g.push({\n            lang: d,\n            pri: a\n          });\n        }\n\n        g.sort(function (a, b) {\n          return a.pri < b.pri ? 1 : -1;\n        });\n\n        for (f = 0; f < h; f++) if (d = g[f].lang, b = c[d]) return b;\n\n        for (f = 0; f < h; f++) {\n          d = g[f].lang;\n\n          do {\n            e = d.lastIndexOf(\"-\");\n            if (-1 === e) break;\n            d = d.substr(0, e);\n            if (b = c[d]) return b;\n          } while (1);\n        }\n\n        for (f = 0; f < h; f++) {\n          d = g[f].lang;\n\n          for (var k in c) if (e = c[k], e.language == d) return e;\n        }\n      } else if (\"object\" === typeof a) return a;\n\n      return b || null;\n    };\n\n    k.format = function (a, b, c) {\n      culture = this.findClosestCulture(c);\n      a instanceof Date ? a = Q(a, b, culture) : \"number\" === typeof a && (a = L(a, b, culture));\n      return a;\n    };\n\n    k.localize = function (a, b) {\n      return this.findClosestCulture(b).messages[a] || this.cultures[\"default\"].messages[a];\n    };\n\n    k.parseDate = function (a, b, c) {\n      c = this.findClosestCulture(c);\n      var e;\n\n      if (b) {\n        if (\"string\" === typeof b && (b = [b]), b.length) {\n          var f = 0;\n\n          for (var h = b.length; f < h; f++) {\n            var g = b[f];\n            if (g && (e = G(a, g, c))) break;\n          }\n        }\n      } else for (f in b = c.calendar.patterns, b) if (e = G(a, b[f], c)) break;\n\n      return e || null;\n    };\n\n    k.parseInt = function (a, b, c) {\n      return O(k.parseFloat(a, b, c));\n    };\n\n    k.parseFloat = function (a, b, c) {\n      \"number\" !== typeof b && (c = b, b = 10);\n      var e = this.findClosestCulture(c);\n      c = NaN;\n      var f = e.numberFormat;\n      -1 < a.indexOf(e.numberFormat.currency.symbol) && (a = a.replace(e.numberFormat.currency.symbol, \"\"), a = a.replace(e.numberFormat.currency[\".\"], e.numberFormat[\".\"]));\n      a = y(a);\n      if (W.test(a)) c = parseFloat(a);else if (!b && V.test(a)) c = parseInt(a, 16);else {\n        e = F(a, f, f.pattern[0]);\n        b = e[0];\n        e = e[1];\n        \"\" === b && \"(n)\" !== f.pattern[0] && (e = F(a, f, \"(n)\"), b = e[0], e = e[1]);\n        \"\" === b && \"-n\" !== f.pattern[0] && (e = F(a, f, \"-n\"), b = e[0], e = e[1]);\n        b = b || \"+\";\n        a = e.indexOf(\"e\");\n        0 > a && (a = e.indexOf(\"E\"));\n\n        if (0 > a) {\n          var h = e;\n          a = null;\n        } else h = e.substr(0, a), a = e.substr(a + 1);\n\n        var g = f[\".\"],\n            d = h.indexOf(g);\n        0 > d ? (e = h, h = null) : (e = h.substr(0, d), h = h.substr(d + g.length));\n        g = f[\",\"];\n        e = e.split(g).join(\"\");\n        d = g.replace(/\\u00A0/g, \" \");\n        g !== d && (e = e.split(d).join(\"\"));\n        b += e;\n        null !== h && (b += \".\" + h);\n        null !== a && (f = F(a, f, \"-n\"), b += \"e\" + (f[0] || \"+\") + f[1]);\n        X.test(b) && (c = parseFloat(b));\n      }\n      return c;\n    };\n\n    k.culture = function (a) {\n      \"undefined\" !== typeof a && (this.cultureSelector = a);\n      return this.findClosestCulture(a) || this.culture[\"default\"];\n    };\n  })(this);\n\n  window.Globalize = module.exports;\n}).call(window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/globalize/globalize.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/blocks/common/jQueryCloneVal/jquery-cloneVal.js":
/*!*******************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/blocks/common/jQueryCloneVal/jquery-cloneVal.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {if (window.$jscomp === undefined) {\n  var $jscomp = $jscomp || {};\n  $jscomp.scope = {};\n\n  $jscomp.findInternal = function (a, c, b) {\n    a instanceof String && (a = String(a));\n\n    for (var d = a.length, e = 0; e < d; e++) {\n      var f = a[e];\n      if (c.call(b, f, e, a)) return {\n        i: e,\n        v: f\n      };\n    }\n\n    return {\n      i: -1,\n      v: void 0\n    };\n  };\n\n  $jscomp.ASSUME_ES5 = !1;\n  $jscomp.ASSUME_NO_NATIVE_MAP = !1;\n  $jscomp.ASSUME_NO_NATIVE_SET = !1;\n  $jscomp.defineProperty = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.defineProperties ? Object.defineProperty : function (a, c, b) {\n    a != Array.prototype && a != Object.prototype && (a[c] = b.value);\n  };\n\n  $jscomp.getGlobal = function (a) {\n    return \"undefined\" != typeof window && window === a ? a : \"undefined\" != typeof global && null != global ? global : a;\n  };\n\n  $jscomp.global = $jscomp.getGlobal(this);\n\n  $jscomp.polyfill = function (a, c, b, d) {\n    if (c) {\n      b = $jscomp.global;\n      a = a.split(\".\");\n\n      for (d = 0; d < a.length - 1; d++) {\n        var e = a[d];\n        e in b || (b[e] = {});\n        b = b[e];\n      }\n\n      a = a[a.length - 1];\n      d = b[a];\n      c = c(d);\n      c != d && null != c && $jscomp.defineProperty(b, a, {\n        configurable: !0,\n        writable: !0,\n        value: c\n      });\n    }\n  };\n\n  $jscomp.polyfill(\"Array.prototype.find\", function (a) {\n    return a ? a : function (a, b) {\n      return $jscomp.findInternal(this, a, b).v;\n    };\n  }, \"es6\", \"es3\");\n\n  (function (a) {\n    a.fn.cloneVal = function (c) {\n      var b = a.extend({}, {\n        cloneOnInit: !1,\n        eventNS: \"cloneVal\",\n        events: [\"change\", \"blur\", \"keyup\"],\n        targets: []\n      }, c),\n          d = b.events.join(\".\" + b.eventNS + \" \") + \".\" + b.eventNS;\n      return this.each(function () {\n        for (var c = b.targets, f = c.length, h = a(this); f--;) {\n          var g = c[f],\n              k = g[0];\n          g = g.slice(1).join(\",\");\n          h.on(d, k, g, function (b) {\n            h.find(b.data).val(a(this).val()).trigger(b.type);\n          });\n          b.cloneOnInit && h.find(k).trigger(b.events[0]);\n        }\n      });\n    };\n  })(jQuery);\n\n  window.$jscomp = $jscomp;\n  module.exports.$jscomp = $jscomp;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvYmxvY2tzL2NvbW1vbi9qUXVlcnlDbG9uZVZhbC9qcXVlcnktY2xvbmVWYWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvYmxvY2tzL2NvbW1vbi9qUXVlcnlDbG9uZVZhbC9qcXVlcnktY2xvbmVWYWwuanM/ZDZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGpzY29tcD0kanNjb21wfHx7fTskanNjb21wLnNjb3BlPXt9OyRqc2NvbXAuZmluZEludGVybmFsPWZ1bmN0aW9uKGEsYyxiKXthIGluc3RhbmNlb2YgU3RyaW5nJiYoYT1TdHJpbmcoYSkpO2Zvcih2YXIgZD1hLmxlbmd0aCxlPTA7ZTxkO2UrKyl7dmFyIGY9YVtlXTtpZihjLmNhbGwoYixmLGUsYSkpcmV0dXJue2k6ZSx2OmZ9fXJldHVybntpOi0xLHY6dm9pZCAwfX07JGpzY29tcC5BU1NVTUVfRVM1PSExOyRqc2NvbXAuQVNTVU1FX05PX05BVElWRV9NQVA9ITE7JGpzY29tcC5BU1NVTUVfTk9fTkFUSVZFX1NFVD0hMTskanNjb21wLmRlZmluZVByb3BlcnR5PSRqc2NvbXAuQVNTVU1FX0VTNXx8XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmRlZmluZVByb3BlcnRpZXM/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGEsYyxiKXthIT1BcnJheS5wcm90b3R5cGUmJmEhPU9iamVjdC5wcm90b3R5cGUmJihhW2NdPWIudmFsdWUpfTtcbiRqc2NvbXAuZ2V0R2xvYmFsPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdz09PWE/YTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsJiZudWxsIT1nbG9iYWw/Z2xvYmFsOmF9OyRqc2NvbXAuZ2xvYmFsPSRqc2NvbXAuZ2V0R2xvYmFsKHRoaXMpOyRqc2NvbXAucG9seWZpbGw9ZnVuY3Rpb24oYSxjLGIsZCl7aWYoYyl7Yj0kanNjb21wLmdsb2JhbDthPWEuc3BsaXQoXCIuXCIpO2ZvcihkPTA7ZDxhLmxlbmd0aC0xO2QrKyl7dmFyIGU9YVtkXTtlIGluIGJ8fChiW2VdPXt9KTtiPWJbZV19YT1hW2EubGVuZ3RoLTFdO2Q9YlthXTtjPWMoZCk7YyE9ZCYmbnVsbCE9YyYmJGpzY29tcC5kZWZpbmVQcm9wZXJ0eShiLGEse2NvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpjfSl9fTtcbiRqc2NvbXAucG9seWZpbGwoXCJBcnJheS5wcm90b3R5cGUuZmluZFwiLGZ1bmN0aW9uKGEpe3JldHVybiBhP2E6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gJGpzY29tcC5maW5kSW50ZXJuYWwodGhpcyxhLGIpLnZ9fSxcImVzNlwiLFwiZXMzXCIpO1xuKGZ1bmN0aW9uKGEpe2EuZm4uY2xvbmVWYWw9ZnVuY3Rpb24oYyl7dmFyIGI9YS5leHRlbmQoe30se2Nsb25lT25Jbml0OiExLGV2ZW50TlM6XCJjbG9uZVZhbFwiLGV2ZW50czpbXCJjaGFuZ2VcIixcImJsdXJcIixcImtleXVwXCJdLHRhcmdldHM6W119LGMpLGQ9Yi5ldmVudHMuam9pbihcIi5cIitiLmV2ZW50TlMrXCIgXCIpK1wiLlwiK2IuZXZlbnROUztyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Zm9yKHZhciBjPWIudGFyZ2V0cyxmPWMubGVuZ3RoLGg9YSh0aGlzKTtmLS07KXt2YXIgZz1jW2ZdLGs9Z1swXTtnPWcuc2xpY2UoMSkuam9pbihcIixcIik7aC5vbihkLGssZyxmdW5jdGlvbihiKXtoLmZpbmQoYi5kYXRhKS52YWwoYSh0aGlzKS52YWwoKSkudHJpZ2dlcihiLnR5cGUpfSk7Yi5jbG9uZU9uSW5pdCYmaC5maW5kKGspLnRyaWdnZXIoYi5ldmVudHNbMF0pfX0pfX0pKGpRdWVyeSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7Ozs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/blocks/common/jQueryCloneVal/jquery-cloneVal.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/elements_v3/common/materialize-1-dev/dist/js/materialize.js":
/*!*******************************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/elements_v3/common/materialize-1-dev/dist/js/materialize.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//If window.anime doesn't exist we are in an old page / bad  that defines materialize.js after optassets.\n//Or something went terribly wrong and materialize won't work because it's missing dependancies.\nif (window.anime) {\n  /*!\n   * Materialize vundefined (http://materializecss.com)\n   * Copyright 2014-2017 Materialize\n   * MIT License (https://raw.githubusercontent.com/Dogfalo/materialize/master/LICENSE)\n   */\n  var _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  /*! cash-dom 1.3.5, https://github.com/kenwheeler/cash @license MIT */\n\n\n  (function (factory) {\n    window.cash = factory();\n  })(function () {\n    var doc = document,\n        win = window,\n        ArrayProto = Array.prototype,\n        slice = ArrayProto.slice,\n        filter = ArrayProto.filter,\n        push = ArrayProto.push;\n\n    var noop = function () {},\n        isFunction = function (item) {\n      // @see https://crbug.com/568448\n      return typeof item === typeof noop && item.call;\n    },\n        isString = function (item) {\n      return typeof item === typeof \"\";\n    };\n\n    var idMatch = /^#[\\w-]*$/,\n        classMatch = /^\\.[\\w-]*$/,\n        htmlMatch = /<.+>/,\n        singlet = /^\\w+$/;\n\n    function find(selector, context) {\n      context = context || doc;\n      var elems = classMatch.test(selector) ? context.getElementsByClassName(selector.slice(1)) : singlet.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector);\n      return elems;\n    }\n\n    var frag;\n\n    function parseHTML(str) {\n      if (!frag) {\n        frag = doc.implementation.createHTMLDocument(null);\n        var base = frag.createElement(\"base\");\n        base.href = doc.location.href;\n        frag.head.appendChild(base);\n      }\n\n      frag.body.innerHTML = str;\n      return frag.body.childNodes;\n    }\n\n    function onReady(fn) {\n      if (doc.readyState !== \"loading\") {\n        fn();\n      } else {\n        doc.addEventListener(\"DOMContentLoaded\", fn);\n      }\n    }\n\n    function Init(selector, context) {\n      if (!selector) {\n        return this;\n      } // If already a cash collection, don't do any further processing\n\n\n      if (selector.cash && selector !== win) {\n        return selector;\n      }\n\n      var elems = selector,\n          i = 0,\n          length;\n\n      if (isString(selector)) {\n        elems = idMatch.test(selector) ? // If an ID use the faster getElementById check\n        doc.getElementById(selector.slice(1)) : htmlMatch.test(selector) ? // If HTML, parse it into real elements\n        parseHTML(selector) : // else use `find`\n        find(selector, context); // If function, use as shortcut for DOM ready\n      } else if (isFunction(selector)) {\n        onReady(selector);\n        return this;\n      }\n\n      if (!elems) {\n        return this;\n      } // If a single DOM element is passed in or received via ID, return the single element\n\n\n      if (elems.nodeType || elems === win) {\n        this[0] = elems;\n        this.length = 1;\n      } else {\n        // Treat like an array and loop through each item.\n        length = this.length = elems.length;\n\n        for (; i < length; i++) {\n          this[i] = elems[i];\n        }\n      }\n\n      return this;\n    }\n\n    function cash(selector, context) {\n      return new Init(selector, context);\n    }\n\n    var fn = cash.fn = cash.prototype = Init.prototype = {\n      // jshint ignore:line\n      cash: true,\n      length: 0,\n      push: push,\n      splice: ArrayProto.splice,\n      map: ArrayProto.map,\n      init: Init\n    };\n    Object.defineProperty(fn, \"constructor\", {\n      value: cash\n    });\n    cash.parseHTML = parseHTML;\n    cash.noop = noop;\n    cash.isFunction = isFunction;\n    cash.isString = isString;\n\n    cash.extend = fn.extend = function (target) {\n      target = target || {};\n      var args = slice.call(arguments),\n          length = args.length,\n          i = 1;\n\n      if (args.length === 1) {\n        target = this;\n        i = 0;\n      }\n\n      for (; i < length; i++) {\n        if (!args[i]) {\n          continue;\n        }\n\n        for (var key in args[i]) {\n          if (args[i].hasOwnProperty(key)) {\n            target[key] = args[i][key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    function each(collection, callback) {\n      var l = collection.length,\n          i = 0;\n\n      for (; i < l; i++) {\n        if (callback.call(collection[i], collection[i], i, collection) === false) {\n          break;\n        }\n      }\n    }\n\n    function matches(el, selector) {\n      var m = el && (el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector);\n      return !!m && m.call(el, selector);\n    }\n\n    function getCompareFunction(selector) {\n      return (\n        /* Use browser's `matches` function if string */\n        isString(selector) ? matches :\n        /* Match a cash element */\n        selector.cash ? function (el) {\n          return selector.is(el);\n        } :\n        /* Direct comparison */\n        function (el, selector) {\n          return el === selector;\n        }\n      );\n    }\n\n    function unique(collection) {\n      return cash(slice.call(collection).filter(function (item, index, self) {\n        return self.indexOf(item) === index;\n      }));\n    }\n\n    cash.extend({\n      merge: function (first, second) {\n        var len = +second.length,\n            i = first.length,\n            j = 0;\n\n        for (; j < len; i++, j++) {\n          first[i] = second[j];\n        }\n\n        first.length = i;\n        return first;\n      },\n      each: each,\n      matches: matches,\n      unique: unique,\n      isArray: Array.isArray,\n      isNumeric: function (n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n      }\n    });\n    var uid = cash.uid = \"_cash\" + Date.now();\n\n    function getDataCache(node) {\n      return node[uid] = node[uid] || {};\n    }\n\n    function setData(node, key, value) {\n      return getDataCache(node)[key] = value;\n    }\n\n    function getData(node, key) {\n      var c = getDataCache(node);\n\n      if (c[key] === undefined) {\n        c[key] = node.dataset ? node.dataset[key] : cash(node).attr(\"data-\" + key);\n      }\n\n      return c[key];\n    }\n\n    function removeData(node, key) {\n      var c = getDataCache(node);\n\n      if (c) {\n        delete c[key];\n      } else if (node.dataset) {\n        delete node.dataset[key];\n      } else {\n        cash(node).removeAttr(\"data-\" + name);\n      }\n    }\n\n    fn.extend({\n      data: function (name, value) {\n        if (isString(name)) {\n          return value === undefined ? getData(this[0], name) : this.each(function (v) {\n            return setData(v, name, value);\n          });\n        }\n\n        for (var key in name) {\n          this.data(key, name[key]);\n        }\n\n        return this;\n      },\n      removeData: function (key) {\n        return this.each(function (v) {\n          return removeData(v, key);\n        });\n      }\n    });\n    var notWhiteMatch = /\\S+/g;\n\n    function getClasses(c) {\n      return isString(c) && c.match(notWhiteMatch);\n    }\n\n    function hasClass(v, c) {\n      return v.classList ? v.classList.contains(c) : new RegExp(\"(^| )\" + c + \"( |$)\", \"gi\").test(v.className);\n    }\n\n    function addClass(v, c, spacedName) {\n      if (v.classList) {\n        v.classList.add(c);\n      } else if (spacedName.indexOf(\" \" + c + \" \")) {\n        v.className += \" \" + c;\n      }\n    }\n\n    function removeClass(v, c) {\n      if (v.classList) {\n        v.classList.remove(c);\n      } else {\n        v.className = v.className.replace(c, \"\");\n      }\n    }\n\n    fn.extend({\n      addClass: function (c) {\n        var classes = getClasses(c);\n        return classes ? this.each(function (v) {\n          var spacedName = \" \" + v.className + \" \";\n          each(classes, function (c) {\n            addClass(v, c, spacedName);\n          });\n        }) : this;\n      },\n      attr: function (name, value) {\n        if (!name) {\n          return undefined;\n        }\n\n        if (isString(name)) {\n          if (value === undefined) {\n            return this[0] ? this[0].getAttribute ? this[0].getAttribute(name) : this[0][name] : undefined;\n          }\n\n          return this.each(function (v) {\n            if (v.setAttribute) {\n              v.setAttribute(name, value);\n            } else {\n              v[name] = value;\n            }\n          });\n        }\n\n        for (var key in name) {\n          this.attr(key, name[key]);\n        }\n\n        return this;\n      },\n      hasClass: function (c) {\n        var check = false,\n            classes = getClasses(c);\n\n        if (classes && classes.length) {\n          this.each(function (v) {\n            check = hasClass(v, classes[0]);\n            return !check;\n          });\n        }\n\n        return check;\n      },\n      prop: function (name, value) {\n        if (isString(name)) {\n          return value === undefined ? this[0][name] : this.each(function (v) {\n            v[name] = value;\n          });\n        }\n\n        for (var key in name) {\n          this.prop(key, name[key]);\n        }\n\n        return this;\n      },\n      removeAttr: function (name) {\n        return this.each(function (v) {\n          if (v.removeAttribute) {\n            v.removeAttribute(name);\n          } else {\n            delete v[name];\n          }\n        });\n      },\n      removeClass: function (c) {\n        if (!arguments.length) {\n          return this.attr(\"class\", \"\");\n        }\n\n        var classes = getClasses(c);\n        return classes ? this.each(function (v) {\n          each(classes, function (c) {\n            removeClass(v, c);\n          });\n        }) : this;\n      },\n      removeProp: function (name) {\n        return this.each(function (v) {\n          delete v[name];\n        });\n      },\n      toggleClass: function (c, state) {\n        if (state !== undefined) {\n          return this[state ? \"addClass\" : \"removeClass\"](c);\n        }\n\n        var classes = getClasses(c);\n        return classes ? this.each(function (v) {\n          var spacedName = \" \" + v.className + \" \";\n          each(classes, function (c) {\n            if (hasClass(v, c)) {\n              removeClass(v, c);\n            } else {\n              addClass(v, c, spacedName);\n            }\n          });\n        }) : this;\n      }\n    });\n    fn.extend({\n      add: function (selector, context) {\n        return unique(cash.merge(this, cash(selector, context)));\n      },\n      each: function (callback) {\n        each(this, callback);\n        return this;\n      },\n      eq: function (index) {\n        return cash(this.get(index));\n      },\n      filter: function (selector) {\n        if (!selector) {\n          return this;\n        }\n\n        var comparator = isFunction(selector) ? selector : getCompareFunction(selector);\n        return cash(filter.call(this, function (e) {\n          return comparator(e, selector);\n        }));\n      },\n      first: function () {\n        return this.eq(0);\n      },\n      get: function (index) {\n        if (index === undefined) {\n          return slice.call(this);\n        }\n\n        return index < 0 ? this[index + this.length] : this[index];\n      },\n      index: function (elem) {\n        var child = elem ? cash(elem)[0] : this[0],\n            collection = elem ? this : cash(child).parent().children();\n        return slice.call(collection).indexOf(child);\n      },\n      last: function () {\n        return this.eq(-1);\n      }\n    });\n\n    var camelCase = function () {\n      var camelRegex = /(?:^\\w|[A-Z]|\\b\\w)/g,\n          whiteSpace = /[\\s-_]+/g;\n      return function (str) {\n        return str.replace(camelRegex, function (letter, index) {\n          return letter[index === 0 ? \"toLowerCase\" : \"toUpperCase\"]();\n        }).replace(whiteSpace, \"\");\n      };\n    }();\n\n    var getPrefixedProp = function () {\n      var cache = {},\n          doc = document,\n          div = doc.createElement(\"div\"),\n          style = div.style;\n      return function (prop) {\n        prop = camelCase(prop);\n\n        if (cache[prop]) {\n          return cache[prop];\n        }\n\n        var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n            prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"],\n            props = (prop + \" \" + prefixes.join(ucProp + \" \") + ucProp).split(\" \");\n        each(props, function (p) {\n          if (p in style) {\n            cache[p] = prop = cache[prop] = p;\n            return false;\n          }\n        });\n        return cache[prop];\n      };\n    }();\n\n    cash.prefixedProp = getPrefixedProp;\n    cash.camelCase = camelCase;\n    fn.extend({\n      css: function (prop, value) {\n        if (isString(prop)) {\n          prop = getPrefixedProp(prop);\n          return arguments.length > 1 ? this.each(function (v) {\n            return v.style[prop] = value;\n          }) : win.getComputedStyle(this[0])[prop];\n        }\n\n        for (var key in prop) {\n          this.css(key, prop[key]);\n        }\n\n        return this;\n      }\n    });\n\n    function compute(el, prop) {\n      return parseInt(win.getComputedStyle(el[0], null)[prop], 10) || 0;\n    }\n\n    each([\"Width\", \"Height\"], function (v) {\n      var lower = v.toLowerCase();\n\n      fn[lower] = function () {\n        return this[0].getBoundingClientRect()[lower];\n      };\n\n      fn[\"inner\" + v] = function () {\n        return this[0][\"client\" + v];\n      };\n\n      fn[\"outer\" + v] = function (margins) {\n        return this[0][\"offset\" + v] + (margins ? compute(this, \"margin\" + (v === \"Width\" ? \"Left\" : \"Top\")) + compute(this, \"margin\" + (v === \"Width\" ? \"Right\" : \"Bottom\")) : 0);\n      };\n    });\n\n    function registerEvent(node, eventName, callback) {\n      var eventCache = getData(node, \"_cashEvents\") || setData(node, \"_cashEvents\", {});\n      eventCache[eventName] = eventCache[eventName] || [];\n      eventCache[eventName].push(callback);\n      node.addEventListener(eventName, callback);\n    }\n\n    function removeEvent(node, eventName, callback) {\n      var events = getData(node, \"_cashEvents\"),\n          eventCache = events && events[eventName],\n          index;\n\n      if (!eventCache) {\n        return;\n      }\n\n      if (callback) {\n        node.removeEventListener(eventName, callback);\n        index = eventCache.indexOf(callback);\n\n        if (index >= 0) {\n          eventCache.splice(index, 1);\n        }\n      } else {\n        each(eventCache, function (event) {\n          node.removeEventListener(eventName, event);\n        });\n        eventCache = [];\n      }\n    }\n\n    fn.extend({\n      off: function (eventName, callback) {\n        return this.each(function (v) {\n          return removeEvent(v, eventName, callback);\n        });\n      },\n      on: function (eventName, delegate, callback, runOnce) {\n        // jshint ignore:line\n        var originalCallback;\n\n        if (!isString(eventName)) {\n          for (var key in eventName) {\n            this.on(key, delegate, eventName[key]);\n          }\n\n          return this;\n        }\n\n        if (isFunction(delegate)) {\n          callback = delegate;\n          delegate = null;\n        }\n\n        if (eventName === \"ready\") {\n          onReady(callback);\n          return this;\n        }\n\n        if (delegate) {\n          originalCallback = callback;\n\n          callback = function (e) {\n            var t = e.target;\n\n            while (!matches(t, delegate)) {\n              if (t === this || t === null) {\n                return t = false;\n              }\n\n              t = t.parentNode;\n            }\n\n            if (t) {\n              originalCallback.call(t, e);\n            }\n          };\n        }\n\n        return this.each(function (v) {\n          var finalCallback = callback;\n\n          if (runOnce) {\n            finalCallback = function () {\n              callback.apply(this, arguments);\n              removeEvent(v, eventName, finalCallback);\n            };\n          }\n\n          registerEvent(v, eventName, finalCallback);\n        });\n      },\n      one: function (eventName, delegate, callback) {\n        return this.on(eventName, delegate, callback, true);\n      },\n      ready: onReady,\n\n      /**\n       * Modified\n       * Triggers browser event\n       * @param String eventName\n       * @param Object data - Add properties to event object\n       */\n      trigger: function (eventName, data) {\n        if (document.createEvent) {\n          var evt = document.createEvent('HTMLEvents');\n          evt.initEvent(eventName, true, false);\n          evt = this.extend(evt, data);\n          return this.each(function (v) {\n            return v.dispatchEvent(evt);\n          });\n        }\n      }\n    });\n\n    function encode(name, value) {\n      return \"&\" + encodeURIComponent(name) + \"=\" + encodeURIComponent(value).replace(/%20/g, \"+\");\n    }\n\n    function getSelectMultiple_(el) {\n      var values = [];\n      each(el.options, function (o) {\n        if (o.selected) {\n          values.push(o.value);\n        }\n      });\n      return values.length ? values : null;\n    }\n\n    function getSelectSingle_(el) {\n      var selectedIndex = el.selectedIndex;\n      return selectedIndex >= 0 ? el.options[selectedIndex].value : null;\n    }\n\n    function getValue(el) {\n      var type = el.type;\n\n      if (!type) {\n        return null;\n      }\n\n      switch (type.toLowerCase()) {\n        case \"select-one\":\n          return getSelectSingle_(el);\n\n        case \"select-multiple\":\n          return getSelectMultiple_(el);\n\n        case \"radio\":\n          return el.checked ? el.value : null;\n\n        case \"checkbox\":\n          return el.checked ? el.value : null;\n\n        default:\n          return el.value ? el.value : null;\n      }\n    }\n\n    fn.extend({\n      serialize: function () {\n        var query = \"\";\n        each(this[0].elements || this, function (el) {\n          if (el.disabled || el.tagName === \"FIELDSET\") {\n            return;\n          }\n\n          var name = el.name;\n\n          switch (el.type.toLowerCase()) {\n            case \"file\":\n            case \"reset\":\n            case \"submit\":\n            case \"button\":\n              break;\n\n            case \"select-multiple\":\n              var values = getValue(el);\n\n              if (values !== null) {\n                each(values, function (value) {\n                  query += encode(name, value);\n                });\n              }\n\n              break;\n\n            default:\n              var value = getValue(el);\n\n              if (value !== null) {\n                query += encode(name, value);\n              }\n\n          }\n        });\n        return query.substr(1);\n      },\n      val: function (value) {\n        if (value === undefined) {\n          return getValue(this[0]);\n        }\n\n        return this.each(function (v) {\n          return v.value = value;\n        });\n      }\n    });\n\n    function insertElement(el, child, prepend) {\n      if (prepend) {\n        var first = el.childNodes[0];\n        el.insertBefore(child, first);\n      } else {\n        el.appendChild(child);\n      }\n    }\n\n    function insertContent(parent, child, prepend) {\n      var str = isString(child);\n\n      if (!str && child.length) {\n        each(child, function (v) {\n          return insertContent(parent, v, prepend);\n        });\n        return;\n      }\n\n      each(parent, str ? function (v) {\n        return v.insertAdjacentHTML(prepend ? \"afterbegin\" : \"beforeend\", child);\n      } : function (v, i) {\n        return insertElement(v, i === 0 ? child : child.cloneNode(true), prepend);\n      });\n    }\n\n    fn.extend({\n      after: function (selector) {\n        cash(selector).insertAfter(this);\n        return this;\n      },\n      append: function (content) {\n        insertContent(this, content);\n        return this;\n      },\n      appendTo: function (parent) {\n        insertContent(cash(parent), this);\n        return this;\n      },\n      before: function (selector) {\n        cash(selector).insertBefore(this);\n        return this;\n      },\n      clone: function () {\n        return cash(this.map(function (v) {\n          return v.cloneNode(true);\n        }));\n      },\n      empty: function () {\n        this.html(\"\");\n        return this;\n      },\n      html: function (content) {\n        if (content === undefined) {\n          return this[0].innerHTML;\n        }\n\n        var source = content.nodeType ? content[0].outerHTML : content;\n        return this.each(function (v) {\n          return v.innerHTML = source;\n        });\n      },\n      insertAfter: function (selector) {\n        var _this = this;\n\n        cash(selector).each(function (el, i) {\n          var parent = el.parentNode,\n              sibling = el.nextSibling;\n\n          _this.each(function (v) {\n            parent.insertBefore(i === 0 ? v : v.cloneNode(true), sibling);\n          });\n        });\n        return this;\n      },\n      insertBefore: function (selector) {\n        var _this2 = this;\n\n        cash(selector).each(function (el, i) {\n          var parent = el.parentNode;\n\n          _this2.each(function (v) {\n            parent.insertBefore(i === 0 ? v : v.cloneNode(true), el);\n          });\n        });\n        return this;\n      },\n      prepend: function (content) {\n        insertContent(this, content, true);\n        return this;\n      },\n      prependTo: function (parent) {\n        insertContent(cash(parent), this, true);\n        return this;\n      },\n      remove: function () {\n        return this.each(function (v) {\n          if (!!v.parentNode) {\n            return v.parentNode.removeChild(v);\n          }\n        });\n      },\n      text: function (content) {\n        if (content === undefined) {\n          return this[0].textContent;\n        }\n\n        return this.each(function (v) {\n          return v.textContent = content;\n        });\n      }\n    });\n    var docEl = doc.documentElement;\n    fn.extend({\n      position: function () {\n        var el = this[0];\n        return {\n          left: el.offsetLeft,\n          top: el.offsetTop\n        };\n      },\n      offset: function () {\n        var rect = this[0].getBoundingClientRect();\n        return {\n          top: rect.top + win.pageYOffset - docEl.clientTop,\n          left: rect.left + win.pageXOffset - docEl.clientLeft\n        };\n      },\n      offsetParent: function () {\n        return cash(this[0].offsetParent);\n      }\n    });\n    fn.extend({\n      children: function (selector) {\n        var elems = [];\n        this.each(function (el) {\n          push.apply(elems, el.children);\n        });\n        elems = unique(elems);\n        return !selector ? elems : elems.filter(function (v) {\n          return matches(v, selector);\n        });\n      },\n      closest: function (selector) {\n        if (!selector || this.length < 1) {\n          return cash();\n        }\n\n        if (this.is(selector)) {\n          return this.filter(selector);\n        }\n\n        return this.parent().closest(selector);\n      },\n      is: function (selector) {\n        if (!selector) {\n          return false;\n        }\n\n        var match = false,\n            comparator = getCompareFunction(selector);\n        this.each(function (el) {\n          match = comparator(el, selector);\n          return !match;\n        });\n        return match;\n      },\n      find: function (selector) {\n        if (!selector || selector.nodeType) {\n          return cash(selector && this.has(selector).length ? selector : null);\n        }\n\n        var elems = [];\n        this.each(function (el) {\n          push.apply(elems, find(selector, el));\n        });\n        return unique(elems);\n      },\n      has: function (selector) {\n        var comparator = isString(selector) ? function (el) {\n          return find(selector, el).length !== 0;\n        } : function (el) {\n          return el.contains(selector);\n        };\n        return this.filter(comparator);\n      },\n      next: function () {\n        return cash(this[0].nextElementSibling);\n      },\n      not: function (selector) {\n        if (!selector) {\n          return this;\n        }\n\n        var comparator = getCompareFunction(selector);\n        return this.filter(function (el) {\n          return !comparator(el, selector);\n        });\n      },\n      parent: function () {\n        var result = [];\n        this.each(function (item) {\n          if (item && item.parentNode) {\n            result.push(item.parentNode);\n          }\n        });\n        return unique(result);\n      },\n      parents: function (selector) {\n        var last,\n            result = [];\n        this.each(function (item) {\n          last = item;\n\n          while (last && last.parentNode && last !== doc.body.parentNode) {\n            last = last.parentNode;\n\n            if (!selector || selector && matches(last, selector)) {\n              result.push(last);\n            }\n          }\n        });\n        return unique(result);\n      },\n      prev: function () {\n        return cash(this[0].previousElementSibling);\n      },\n      siblings: function (selector) {\n        var collection = this.parent().children(selector),\n            el = this[0];\n        return collection.filter(function (i) {\n          return i !== el;\n        });\n      }\n    });\n    return cash;\n  });\n\n  ;\n\n  var Component = function () {\n    /**\n     * Generic constructor for all components\n     * @constructor\n     * @param {Element} el\n     * @param {Object} options\n     */\n    function Component(classDef, el, options) {\n      _classCallCheck(this, Component); // Display error if el is valid HTML Element\n\n\n      if (!(el instanceof Element)) {\n        console.error(Error(el + ' is not an HTML Element'));\n      } // If exists, destroy and reinitialize in child\n\n\n      var ins = classDef.getInstance(el);\n\n      if (!!ins) {\n        ins.destroy();\n      }\n\n      this.el = el;\n      this.$el = cash(el);\n    }\n    /**\n     * Initializes components\n     * @param {class} classDef\n     * @param {Element | NodeList | jQuery} els\n     * @param {Object} options\n     */\n\n\n    _createClass(Component, null, [{\n      key: \"init\",\n      value: function init(classDef, els, options) {\n        var instances = null;\n\n        if (els instanceof Element) {\n          instances = new classDef(els, options);\n        } else if (!!els && (els.jquery || els.cash || els instanceof NodeList)) {\n          var instancesArr = [];\n\n          for (var i = 0; i < els.length; i++) {\n            instancesArr.push(new classDef(els[i], options));\n          }\n\n          instances = instancesArr;\n        }\n\n        return instances;\n      }\n    }]);\n\n    return Component;\n  }();\n\n  ; // Required for Meteor package, the use of window prevents export by Meteor\n\n  (function (window) {\n    if (window.Package) {\n      M = {};\n    } else {\n      window.M = {};\n    } // Check for jQuery\n\n\n    M.jQueryLoaded = !!window.jQuery;\n  })(window); // AMD\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return M;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // Common JS\n  } else {}\n\n  M.anime = window.anime;\n  M.version = '1.0.0';\n  M.keys = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    ARROW_UP: 38,\n    ARROW_DOWN: 40\n  };\n  /**\n   * TabPress Keydown handler\n   */\n\n  M.tabPressed = false;\n  M.keyDown = false;\n\n  var docHandleKeydown = function (e) {\n    M.keyDown = true;\n\n    if (e.which === M.keys.TAB || e.which === M.keys.ARROW_DOWN || e.which === M.keys.ARROW_UP) {\n      M.tabPressed = true;\n    }\n  };\n\n  var docHandleKeyup = function (e) {\n    M.keyDown = false;\n\n    if (e.which === M.keys.TAB || e.which === M.keys.ARROW_DOWN || e.which === M.keys.ARROW_UP) {\n      M.tabPressed = false;\n    }\n  };\n\n  var docHandleFocus = function (e) {\n    if (M.keyDown) {\n      document.body.classList.add('keyboard-focused');\n    }\n  };\n\n  var docHandleBlur = function (e) {\n    document.body.classList.remove('keyboard-focused');\n  };\n\n  document.addEventListener('keydown', docHandleKeydown, true);\n  document.addEventListener('keyup', docHandleKeyup, true);\n  document.addEventListener('focus', docHandleFocus, true);\n  document.addEventListener('blur', docHandleBlur, true);\n  /**\n   * Initialize jQuery wrapper for plugin\n   * @param {Class} plugin  javascript class\n   * @param {string} pluginName  jQuery plugin name\n   * @param {string} classRef  Class reference name\n   */\n\n  M.initializeJqueryWrapper = function (plugin, pluginName, classRef) {\n    jQuery.fn[pluginName] = function (methodOrOptions) {\n      // Call plugin method if valid method name is passed in\n      if (plugin.prototype[methodOrOptions]) {\n        var params = Array.prototype.slice.call(arguments, 1); // Getter methods\n\n        if (methodOrOptions.slice(0, 3) === 'get') {\n          var instance = this.first()[0][classRef];\n          return instance[methodOrOptions].apply(instance, params);\n        } // Void methods\n\n\n        return this.each(function () {\n          var instance = this[classRef];\n          instance[methodOrOptions].apply(instance, params);\n        }); // Initialize plugin if options or no argument is passed in\n      } else if (typeof methodOrOptions === 'object' || !methodOrOptions) {\n        plugin.init(this, arguments[0]);\n        return this;\n      } // Return error if an unrecognized  method name is passed in\n\n\n      jQuery.error(\"Method \" + methodOrOptions + \" does not exist on jQuery.\" + pluginName);\n    };\n  };\n  /**\n   * Automatically initialize components\n   * @param {Element} context  DOM Element to search within for components\n   */\n\n\n  M.AutoInit = function (context) {\n    // Use document.body if no context is given\n    var root = !!context ? context : document.body;\n    var registry = {\n      Autocomplete: root.querySelectorAll('.autocomplete:not(.no-autoinit)'),\n      Carousel: root.querySelectorAll('.carousel:not(.no-autoinit)'),\n      Chips: root.querySelectorAll('.chips:not(.no-autoinit)'),\n      Collapsible: root.querySelectorAll('.collapsible:not(.no-autoinit)'),\n      Datepicker: root.querySelectorAll('.datepicker:not(.no-autoinit)'),\n      Dropdown: root.querySelectorAll('.dropdown-trigger:not(.no-autoinit)'),\n      Materialbox: root.querySelectorAll('.materialboxed:not(.no-autoinit)'),\n      Modal: root.querySelectorAll('.modal:not(.no-autoinit)'),\n      Parallax: root.querySelectorAll('.parallax:not(.no-autoinit)'),\n      Pushpin: root.querySelectorAll('.pushpin:not(.no-autoinit)'),\n      ScrollSpy: root.querySelectorAll('.scrollspy:not(.no-autoinit)'),\n      FormSelect: root.querySelectorAll('select:not(.no-autoinit)'),\n      Sidenav: root.querySelectorAll('.sidenav:not(.no-autoinit)'),\n      Tabs: root.querySelectorAll('.tabs:not(.no-autoinit)'),\n      TapTarget: root.querySelectorAll('.tap-target:not(.no-autoinit)'),\n      Timepicker: root.querySelectorAll('.timepicker:not(.no-autoinit)'),\n      Tooltip: root.querySelectorAll('.tooltipped:not(.no-autoinit)'),\n      FloatingActionButton: root.querySelectorAll('.fixed-action-btn:not(.no-autoinit)')\n    };\n\n    for (var pluginName in registry) {\n      var plugin = M[pluginName];\n      plugin.init(registry[pluginName]);\n    }\n  };\n  /**\n   * Generate approximated selector string for a jQuery object\n   * @param {jQuery} obj  jQuery object to be parsed\n   * @returns {string}\n   */\n\n\n  M.objectSelectorString = function (obj) {\n    var tagStr = obj.prop('tagName') || '';\n    var idStr = obj.attr('id') || '';\n    var classStr = obj.attr('class') || '';\n    return (tagStr + idStr + classStr).replace(/\\s/g, '');\n  }; // Unique Random ID\n\n\n  M.guid = function () {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return function () {\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n  }();\n  /**\n   * Escapes hash from special characters\n   * @param {string} hash  String returned from this.hash\n   * @returns {string}\n   */\n\n\n  M.escapeHash = function (hash) {\n    return hash.replace(/(:|\\.|\\[|\\]|,|=|\\/)/g, '\\\\$1');\n  };\n\n  M.elementOrParentIsFixed = function (element) {\n    var $element = $(element);\n    var $checkElements = $element.add($element.parents());\n    var isFixed = false;\n    $checkElements.each(function () {\n      if ($(this).css('position') === 'fixed') {\n        isFixed = true;\n        return false;\n      }\n    });\n    return isFixed;\n  };\n  /**\n   * @typedef {Object} Edges\n   * @property {Boolean} top  If the top edge was exceeded\n   * @property {Boolean} right  If the right edge was exceeded\n   * @property {Boolean} bottom  If the bottom edge was exceeded\n   * @property {Boolean} left  If the left edge was exceeded\n   */\n\n  /**\n   * @typedef {Object} Bounding\n   * @property {Number} left  left offset coordinate\n   * @property {Number} top  top offset coordinate\n   * @property {Number} width\n   * @property {Number} height\n   */\n\n  /**\n   * Escapes hash from special characters\n   * @param {Element} container  Container element that acts as the boundary\n   * @param {Bounding} bounding  element bounding that is being checked\n   * @param {Number} offset  offset from edge that counts as exceeding\n   * @returns {Edges}\n   */\n\n\n  M.checkWithinContainer = function (container, bounding, offset) {\n    var edges = {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false\n    };\n    var containerRect = container.getBoundingClientRect(); // If body element is smaller than viewport, use viewport height instead.\n\n    var containerBottom = container === document.body ? Math.max(containerRect.bottom, window.innerHeight) : containerRect.bottom;\n    var scrollLeft = container.scrollLeft;\n    var scrollTop = container.scrollTop;\n    var scrolledX = bounding.left - scrollLeft;\n    var scrolledY = bounding.top - scrollTop; // Check for container and viewport for each edge\n\n    if (scrolledX < containerRect.left + offset || scrolledX < offset) {\n      edges.left = true;\n    }\n\n    if (scrolledX + bounding.width > containerRect.right - offset || scrolledX + bounding.width > window.innerWidth - offset) {\n      edges.right = true;\n    }\n\n    if (scrolledY < containerRect.top + offset || scrolledY < offset) {\n      edges.top = true;\n    }\n\n    if (scrolledY + bounding.height > containerBottom - offset || scrolledY + bounding.height > window.innerHeight - offset) {\n      edges.bottom = true;\n    }\n\n    return edges;\n  };\n\n  M.checkPossibleAlignments = function (el, container, bounding, offset) {\n    var canAlign = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true,\n      spaceOnTop: null,\n      spaceOnRight: null,\n      spaceOnBottom: null,\n      spaceOnLeft: null\n    };\n    var containerAllowsOverflow = getComputedStyle(container).overflow === 'visible';\n    var containerRect = container.getBoundingClientRect();\n    var containerHeight = Math.min(containerRect.height, window.innerHeight);\n    var containerWidth = Math.min(containerRect.width, window.innerWidth);\n    var elOffsetRect = el.getBoundingClientRect();\n    var scrollLeft = container.scrollLeft;\n    var scrollTop = container.scrollTop;\n    var scrolledX = bounding.left - scrollLeft;\n    var scrolledYTopEdge = bounding.top - scrollTop;\n    var scrolledYBottomEdge = bounding.top + elOffsetRect.height - scrollTop; // Check for container and viewport for left\n\n    canAlign.spaceOnRight = !containerAllowsOverflow ? containerWidth - (scrolledX + bounding.width) : window.innerWidth - (elOffsetRect.left + bounding.width);\n\n    if (canAlign.spaceOnRight < 0) {\n      canAlign.left = false;\n    } // Check for container and viewport for Right\n\n\n    canAlign.spaceOnLeft = !containerAllowsOverflow ? scrolledX - bounding.width + elOffsetRect.width : elOffsetRect.right - bounding.width;\n\n    if (canAlign.spaceOnLeft < 0) {\n      canAlign.right = false;\n    } // Check for container and viewport for Top\n\n\n    canAlign.spaceOnBottom = !containerAllowsOverflow ? containerHeight - (scrolledYTopEdge + bounding.height + offset) : window.innerHeight - (elOffsetRect.top + bounding.height + offset);\n\n    if (canAlign.spaceOnBottom < 0) {\n      canAlign.top = false;\n    } // Check for container and viewport for Bottom\n\n\n    canAlign.spaceOnTop = !containerAllowsOverflow ? scrolledYBottomEdge - (bounding.height - offset) : elOffsetRect.bottom - (bounding.height + offset);\n\n    if (canAlign.spaceOnTop < 0) {\n      canAlign.bottom = false;\n    }\n\n    return canAlign;\n  };\n\n  M.getOverflowParent = function (element) {\n    if (element == null) {\n      return null;\n    }\n\n    if (element === document.body || getComputedStyle(element).overflow !== 'visible') {\n      return element;\n    }\n\n    return M.getOverflowParent(element.parentElement);\n  };\n  /**\n   * Gets id of component from a trigger\n   * @param {Element} trigger  trigger\n   * @returns {string}\n   */\n\n\n  M.getIdFromTrigger = function (trigger) {\n    var id = trigger.getAttribute('data-target');\n\n    if (!id) {\n      id = trigger.getAttribute('href');\n\n      if (id) {\n        id = id.slice(1);\n      } else {\n        id = '';\n      }\n    }\n\n    return id;\n  };\n  /**\n   * Multi browser support for document scroll top\n   * @returns {Number}\n   */\n\n\n  M.getDocumentScrollTop = function () {\n    return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n  };\n  /**\n   * Multi browser support for document scroll left\n   * @returns {Number}\n   */\n\n\n  M.getDocumentScrollLeft = function () {\n    return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\n  };\n  /**\n   * @typedef {Object} Edges\n   * @property {Boolean} top  If the top edge was exceeded\n   * @property {Boolean} right  If the right edge was exceeded\n   * @property {Boolean} bottom  If the bottom edge was exceeded\n   * @property {Boolean} left  If the left edge was exceeded\n   */\n\n  /**\n   * @typedef {Object} Bounding\n   * @property {Number} left  left offset coordinate\n   * @property {Number} top  top offset coordinate\n   * @property {Number} width\n   * @property {Number} height\n   */\n\n  /**\n   * Get time in ms\n   * @license https://raw.github.com/jashkenas/underscore/master/LICENSE\n   * @type {function}\n   * @return {number}\n   */\n\n\n  var getTime = Date.now || function () {\n    return new Date().getTime();\n  };\n  /**\n   * Returns a function, that, when invoked, will only be triggered at most once\n   * during a given window of time. Normally, the throttled function will run\n   * as much as it can, without ever going more than once per `wait` duration;\n   * but if you'd like to disable the execution on the leading edge, pass\n   * `{leading: false}`. To disable execution on the trailing edge, ditto.\n   * @license https://raw.github.com/jashkenas/underscore/master/LICENSE\n   * @param {function} func\n   * @param {number} wait\n   * @param {Object=} options\n   * @returns {Function}\n   */\n\n\n  M.throttle = function (func, wait, options) {\n    var context = void 0,\n        args = void 0,\n        result = void 0;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n\n    var later = function () {\n      previous = options.leading === false ? 0 : getTime();\n      timeout = null;\n      result = func.apply(context, args);\n      context = args = null;\n    };\n\n    return function () {\n      var now = getTime();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  };\n\n  ;\n\n  (function ($, anim) {\n    'use strict';\n\n    var _defaults = {\n      alignment: 'left',\n      autoFocus: true,\n      constrainWidth: true,\n      container: null,\n      coverTrigger: true,\n      closeOnClick: true,\n      hover: false,\n      inDuration: 150,\n      outDuration: 250,\n      onOpenStart: null,\n      onOpenEnd: null,\n      onCloseStart: null,\n      onCloseEnd: null,\n      onItemClick: null\n    };\n    /**\n     * @class\n     */\n\n    var Dropdown = function (_Component) {\n      _inherits(Dropdown, _Component);\n\n      function Dropdown(el, options) {\n        _classCallCheck(this, Dropdown);\n\n        var _this3 = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, Dropdown, el, options));\n\n        _this3.el.M_Dropdown = _this3;\n\n        Dropdown._dropdowns.push(_this3);\n\n        _this3.id = M.getIdFromTrigger(el);\n        _this3.dropdownEl = document.getElementById(_this3.id);\n        _this3.$dropdownEl = $(_this3.dropdownEl);\n        /**\n         * Options for the dropdown\n         * @member Dropdown#options\n         * @prop {String} [alignment='left'] - Edge which the dropdown is aligned to\n         * @prop {Boolean} [autoFocus=true] - Automatically focus dropdown el for keyboard\n         * @prop {Boolean} [constrainWidth=true] - Constrain width to width of the button\n         * @prop {Element} container - Container element to attach dropdown to (optional)\n         * @prop {Boolean} [coverTrigger=true] - Place dropdown over trigger\n         * @prop {Boolean} [closeOnClick=true] - Close on click of dropdown item\n         * @prop {Boolean} [hover=false] - Open dropdown on hover\n         * @prop {Number} [inDuration=150] - Duration of open animation in ms\n         * @prop {Number} [outDuration=250] - Duration of close animation in ms\n         * @prop {Function} onOpenStart - Function called when dropdown starts opening\n         * @prop {Function} onOpenEnd - Function called when dropdown finishes opening\n         * @prop {Function} onCloseStart - Function called when dropdown starts closing\n         * @prop {Function} onCloseEnd - Function called when dropdown finishes closing\n         */\n\n        _this3.options = $.extend({}, Dropdown.defaults, options);\n        /**\n         * Describes open/close state of dropdown\n         * @type {Boolean}\n         */\n\n        _this3.isOpen = false;\n        /**\n         * Describes if dropdown content is scrollable\n         * @type {Boolean}\n         */\n\n        _this3.isScrollable = false;\n        /**\n         * Describes if touch moving on dropdown content\n         * @type {Boolean}\n         */\n\n        _this3.isTouchMoving = false;\n        _this3.focusedIndex = -1;\n        _this3.filterQuery = []; // Move dropdown-content after dropdown-trigger\n\n        if (!!_this3.options.container) {\n          $(_this3.options.container).append(_this3.dropdownEl);\n        } else {\n          _this3.$el.after(_this3.dropdownEl);\n        }\n\n        _this3._makeDropdownFocusable();\n\n        _this3._resetFilterQueryBound = _this3._resetFilterQuery.bind(_this3);\n        _this3._handleDocumentClickBound = _this3._handleDocumentClick.bind(_this3);\n        _this3._handleDocumentTouchmoveBound = _this3._handleDocumentTouchmove.bind(_this3);\n        _this3._handleDropdownClickBound = _this3._handleDropdownClick.bind(_this3);\n        _this3._handleDropdownKeydownBound = _this3._handleDropdownKeydown.bind(_this3);\n        _this3._handleTriggerKeydownBound = _this3._handleTriggerKeydown.bind(_this3);\n\n        _this3._setupEventHandlers();\n\n        return _this3;\n      }\n\n      _createClass(Dropdown, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._resetDropdownStyles();\n\n          this._removeEventHandlers();\n\n          Dropdown._dropdowns.splice(Dropdown._dropdowns.indexOf(this), 1);\n\n          this.el.M_Dropdown = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          // Trigger keydown handler\n          this.el.addEventListener('keydown', this._handleTriggerKeydownBound); // Item click handler\n\n          this.dropdownEl.addEventListener('click', this._handleDropdownClickBound); // Hover event handlers\n\n          if (this.options.hover) {\n            this._handleMouseEnterBound = this._handleMouseEnter.bind(this);\n            this.el.addEventListener('mouseenter', this._handleMouseEnterBound);\n            this._handleMouseLeaveBound = this._handleMouseLeave.bind(this);\n            this.el.addEventListener('mouseleave', this._handleMouseLeaveBound);\n            this.dropdownEl.addEventListener('mouseleave', this._handleMouseLeaveBound); // Click event handlers\n          } else {\n            this._handleClickBound = this._handleClick.bind(this);\n            this.el.addEventListener('click', this._handleClickBound);\n          }\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          this.el.removeEventListener('keydown', this._handleTriggerKeydownBound);\n          this.dropdownEl.removeEventListener('click', this._handleDropdownClickBound);\n\n          if (this.options.hover) {\n            this.el.removeEventListener('mouseenter', this._handleMouseEnterBound);\n            this.el.removeEventListener('mouseleave', this._handleMouseLeaveBound);\n            this.dropdownEl.removeEventListener('mouseleave', this._handleMouseLeaveBound);\n          } else {\n            this.el.removeEventListener('click', this._handleClickBound);\n          }\n        }\n      }, {\n        key: \"_setupTemporaryEventHandlers\",\n        value: function _setupTemporaryEventHandlers() {\n          // Use capture phase event handler to prevent click\n          document.body.addEventListener('click', this._handleDocumentClickBound, true);\n          document.body.addEventListener('touchend', this._handleDocumentClickBound);\n          document.body.addEventListener('touchmove', this._handleDocumentTouchmoveBound);\n          this.dropdownEl.addEventListener('keydown', this._handleDropdownKeydownBound);\n        }\n      }, {\n        key: \"_removeTemporaryEventHandlers\",\n        value: function _removeTemporaryEventHandlers() {\n          // Use capture phase event handler to prevent click\n          document.body.removeEventListener('click', this._handleDocumentClickBound, true);\n          document.body.removeEventListener('touchend', this._handleDocumentClickBound);\n          document.body.removeEventListener('touchmove', this._handleDocumentTouchmoveBound);\n          this.dropdownEl.removeEventListener('keydown', this._handleDropdownKeydownBound);\n        }\n      }, {\n        key: \"_handleClick\",\n        value: function _handleClick(e) {\n          e.preventDefault();\n          this.open();\n        }\n      }, {\n        key: \"_handleMouseEnter\",\n        value: function _handleMouseEnter() {\n          this.open();\n        }\n      }, {\n        key: \"_handleMouseLeave\",\n        value: function _handleMouseLeave(e) {\n          var toEl = e.toElement || e.relatedTarget;\n          var leaveToDropdownContent = !!$(toEl).closest('.dropdown-content').length;\n          var leaveToActiveDropdownTrigger = false;\n          var $closestTrigger = $(toEl).closest('.dropdown-trigger');\n\n          if ($closestTrigger.length && !!$closestTrigger[0].M_Dropdown && $closestTrigger[0].M_Dropdown.isOpen) {\n            leaveToActiveDropdownTrigger = true;\n          } // Close hover dropdown if mouse did not leave to either active dropdown-trigger or dropdown-content\n\n\n          if (!leaveToActiveDropdownTrigger && !leaveToDropdownContent) {\n            this.close();\n          }\n        }\n      }, {\n        key: \"_handleDocumentClick\",\n        value: function _handleDocumentClick(e) {\n          var _this4 = this;\n\n          var $target = $(e.target);\n\n          if (this.options.closeOnClick && $target.closest('.dropdown-content').length && !this.isTouchMoving) {\n            // isTouchMoving to check if scrolling on mobile.\n            setTimeout(function () {\n              _this4.close();\n            }, 0);\n          } else if ($target.closest('.dropdown-trigger').length || !$target.closest('.dropdown-content').length) {\n            setTimeout(function () {\n              _this4.close();\n            }, 0);\n          }\n\n          this.isTouchMoving = false;\n        }\n      }, {\n        key: \"_handleTriggerKeydown\",\n        value: function _handleTriggerKeydown(e) {\n          // ARROW DOWN OR ENTER WHEN SELECT IS CLOSED - open Dropdown\n          if ((e.which === M.keys.ARROW_DOWN || e.which === M.keys.ENTER) && !this.isOpen) {\n            e.preventDefault();\n            this.open();\n          }\n        }\n        /**\n         * Handle Document Touchmove\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleDocumentTouchmove\",\n        value: function _handleDocumentTouchmove(e) {\n          var $target = $(e.target);\n\n          if ($target.closest('.dropdown-content').length) {\n            this.isTouchMoving = true;\n          }\n        }\n        /**\n         * Handle Dropdown Click\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleDropdownClick\",\n        value: function _handleDropdownClick(e) {\n          // onItemClick callback\n          if (typeof this.options.onItemClick === 'function') {\n            var itemEl = $(e.target).closest('li')[0];\n            this.options.onItemClick.call(this, itemEl);\n          }\n        }\n        /**\n         * Handle Dropdown Keydown\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleDropdownKeydown\",\n        value: function _handleDropdownKeydown(e) {\n          if (e.which === M.keys.TAB) {\n            e.preventDefault();\n            this.close(); // Navigate down dropdown list\n          } else if ((e.which === M.keys.ARROW_DOWN || e.which === M.keys.ARROW_UP) && this.isOpen) {\n            e.preventDefault();\n            var direction = e.which === M.keys.ARROW_DOWN ? 1 : -1;\n            var newFocusedIndex = this.focusedIndex;\n            var foundNewIndex = false;\n\n            do {\n              newFocusedIndex = newFocusedIndex + direction;\n\n              if (!!this.dropdownEl.children[newFocusedIndex] && this.dropdownEl.children[newFocusedIndex].tabIndex !== -1) {\n                foundNewIndex = true;\n                break;\n              }\n            } while (newFocusedIndex < this.dropdownEl.children.length && newFocusedIndex >= 0);\n\n            if (foundNewIndex) {\n              this.focusedIndex = newFocusedIndex;\n\n              this._focusFocusedItem();\n            } // ENTER selects choice on focused item\n\n          } else if (e.which === M.keys.ENTER && this.isOpen) {\n            // Search for <a> and <button>\n            var focusedElement = this.dropdownEl.children[this.focusedIndex];\n            var $activatableElement = $(focusedElement).find('a, button').first(); // Click a or button tag if exists, otherwise click li tag\n\n            if (!!$activatableElement.length) {\n              $activatableElement[0].click();\n            } else if (!!focusedElement) {\n              focusedElement.click();\n            } // Close dropdown on ESC\n\n          } else if (e.which === M.keys.ESC && this.isOpen) {\n            e.preventDefault();\n            this.close();\n          } // CASE WHEN USER TYPE LETTERS\n\n\n          var letter = String.fromCharCode(e.which).toLowerCase(),\n              nonLetters = [9, 13, 27, 38, 40];\n\n          if (letter && nonLetters.indexOf(e.which) === -1) {\n            this.filterQuery.push(letter);\n            var string = this.filterQuery.join(''),\n                newOptionEl = $(this.dropdownEl).find('li').filter(function (el) {\n              return $(el).text().toLowerCase().indexOf(string) === 0;\n            })[0];\n\n            if (newOptionEl) {\n              this.focusedIndex = $(newOptionEl).index();\n\n              this._focusFocusedItem();\n            }\n          }\n\n          this.filterTimeout = setTimeout(this._resetFilterQueryBound, 1000);\n        }\n        /**\n         * Setup dropdown\n         */\n\n      }, {\n        key: \"_resetFilterQuery\",\n        value: function _resetFilterQuery() {\n          this.filterQuery = [];\n        }\n      }, {\n        key: \"_resetDropdownStyles\",\n        value: function _resetDropdownStyles() {\n          this.$dropdownEl.css({\n            display: '',\n            width: '',\n            height: '',\n            left: '',\n            top: '',\n            'transform-origin': '',\n            transform: '',\n            opacity: ''\n          });\n        }\n      }, {\n        key: \"_makeDropdownFocusable\",\n        value: function _makeDropdownFocusable() {\n          // Needed for arrow key navigation\n          this.dropdownEl.tabIndex = 0; // Only set tabindex if it hasn't been set by user\n\n          $(this.dropdownEl).children().each(function (el) {\n            if (!el.getAttribute('tabindex')) {\n              el.setAttribute('tabindex', 0);\n            }\n          });\n        }\n      }, {\n        key: \"_focusFocusedItem\",\n        value: function _focusFocusedItem() {\n          if (this.focusedIndex >= 0 && this.focusedIndex < this.dropdownEl.children.length && this.options.autoFocus) {\n            this.dropdownEl.children[this.focusedIndex].focus();\n          }\n        }\n      }, {\n        key: \"_getDropdownPosition\",\n        value: function _getDropdownPosition() {\n          var offsetParentBRect = this.el.offsetParent.getBoundingClientRect();\n          var triggerBRect = this.el.getBoundingClientRect();\n          var dropdownBRect = this.dropdownEl.getBoundingClientRect();\n          var idealHeight = dropdownBRect.height;\n          var idealWidth = dropdownBRect.width;\n          var idealXPos = triggerBRect.left - dropdownBRect.left;\n          var idealYPos = triggerBRect.top - dropdownBRect.top;\n          var dropdownBounds = {\n            left: idealXPos,\n            top: idealYPos,\n            height: idealHeight,\n            width: idealWidth\n          }; // Countainer here will be closest ancestor with overflow: hidden\n\n          var closestOverflowParent = !!this.dropdownEl.offsetParent ? this.dropdownEl.offsetParent : this.dropdownEl.parentNode;\n          var alignments = M.checkPossibleAlignments(this.el, closestOverflowParent, dropdownBounds, this.options.coverTrigger ? 0 : triggerBRect.height);\n          var verticalAlignment = 'top';\n          var horizontalAlignment = this.options.alignment;\n          idealYPos += this.options.coverTrigger ? 0 : triggerBRect.height; // Reset isScrollable\n\n          this.isScrollable = false;\n\n          if (!alignments.top) {\n            if (alignments.bottom) {\n              verticalAlignment = 'bottom';\n            } else {\n              this.isScrollable = true; // Determine which side has most space and cutoff at correct height\n\n              if (alignments.spaceOnTop > alignments.spaceOnBottom) {\n                verticalAlignment = 'bottom';\n                idealHeight += alignments.spaceOnTop;\n                idealYPos -= alignments.spaceOnTop;\n              } else {\n                idealHeight += alignments.spaceOnBottom;\n              }\n            }\n          } // If preferred horizontal alignment is possible\n\n\n          if (!alignments[horizontalAlignment]) {\n            var oppositeAlignment = horizontalAlignment === 'left' ? 'right' : 'left';\n\n            if (alignments[oppositeAlignment]) {\n              horizontalAlignment = oppositeAlignment;\n            } else {\n              // Determine which side has most space and cutoff at correct height\n              if (alignments.spaceOnLeft > alignments.spaceOnRight) {\n                horizontalAlignment = 'right';\n                idealWidth += alignments.spaceOnLeft;\n                idealXPos -= alignments.spaceOnLeft;\n              } else {\n                horizontalAlignment = 'left';\n                idealWidth += alignments.spaceOnRight;\n              }\n            }\n          }\n\n          if (verticalAlignment === 'bottom') {\n            idealYPos = idealYPos - dropdownBRect.height + (this.options.coverTrigger ? triggerBRect.height : 0);\n          }\n\n          if (horizontalAlignment === 'right') {\n            idealXPos = idealXPos - dropdownBRect.width + triggerBRect.width;\n          }\n\n          return {\n            x: idealXPos,\n            y: idealYPos,\n            verticalAlignment: verticalAlignment,\n            horizontalAlignment: horizontalAlignment,\n            height: idealHeight,\n            width: idealWidth\n          };\n        }\n        /**\n         * Animate in dropdown\n         */\n\n      }, {\n        key: \"_animateIn\",\n        value: function _animateIn() {\n          var _this5 = this;\n\n          anim.remove(this.dropdownEl);\n          anim({\n            targets: this.dropdownEl,\n            opacity: {\n              value: [0, 1],\n              easing: 'easeOutQuad'\n            },\n            scaleX: [0.3, 1],\n            scaleY: [0.3, 1],\n            duration: this.options.inDuration,\n            easing: 'easeOutQuint',\n            complete: function (anim) {\n              if (_this5.options.autoFocus) {\n                _this5.dropdownEl.focus();\n              } // onOpenEnd callback\n\n\n              if (typeof _this5.options.onOpenEnd === 'function') {\n                _this5.options.onOpenEnd.call(_this5, _this5.el);\n              }\n            }\n          });\n        }\n        /**\n         * Animate out dropdown\n         */\n\n      }, {\n        key: \"_animateOut\",\n        value: function _animateOut() {\n          var _this6 = this;\n\n          anim.remove(this.dropdownEl);\n          anim({\n            targets: this.dropdownEl,\n            opacity: {\n              value: 0,\n              easing: 'easeOutQuint'\n            },\n            scaleX: 0.3,\n            scaleY: 0.3,\n            duration: this.options.outDuration,\n            easing: 'easeOutQuint',\n            complete: function (anim) {\n              _this6._resetDropdownStyles(); // onCloseEnd callback\n\n\n              if (typeof _this6.options.onCloseEnd === 'function') {\n                _this6.options.onCloseEnd.call(_this6, _this6.el);\n              }\n            }\n          });\n        }\n        /**\n         * Place dropdown\n         */\n\n      }, {\n        key: \"_placeDropdown\",\n        value: function _placeDropdown() {\n          // Set width before calculating positionInfo\n          var idealWidth = this.options.constrainWidth ? this.el.getBoundingClientRect().width : this.dropdownEl.getBoundingClientRect().width;\n          this.dropdownEl.style.width = idealWidth + 'px';\n\n          var positionInfo = this._getDropdownPosition();\n\n          this.dropdownEl.style.left = positionInfo.x + 'px';\n          this.dropdownEl.style.top = positionInfo.y + 'px';\n          this.dropdownEl.style.height = positionInfo.height + 'px';\n          this.dropdownEl.style.width = positionInfo.width + 'px';\n          this.dropdownEl.style.transformOrigin = (positionInfo.horizontalAlignment === 'left' ? '0' : '100%') + \" \" + (positionInfo.verticalAlignment === 'top' ? '0' : '100%');\n        }\n        /**\n         * Open Dropdown\n         */\n\n      }, {\n        key: \"open\",\n        value: function open() {\n          if (this.isOpen) {\n            return;\n          }\n\n          this.isOpen = true; // onOpenStart callback\n\n          if (typeof this.options.onOpenStart === 'function') {\n            this.options.onOpenStart.call(this, this.el);\n          } // Reset styles\n\n\n          this._resetDropdownStyles();\n\n          this.dropdownEl.style.display = 'block';\n\n          this._placeDropdown();\n\n          this._animateIn();\n\n          this._setupTemporaryEventHandlers();\n        }\n        /**\n         * Close Dropdown\n         */\n\n      }, {\n        key: \"close\",\n        value: function close() {\n          if (!this.isOpen) {\n            return;\n          }\n\n          this.isOpen = false;\n          this.focusedIndex = -1; // onCloseStart callback\n\n          if (typeof this.options.onCloseStart === 'function') {\n            this.options.onCloseStart.call(this, this.el);\n          }\n\n          this._animateOut();\n\n          this._removeTemporaryEventHandlers();\n\n          if (this.options.autoFocus) {\n            this.el.focus();\n          }\n        }\n        /**\n         * Recalculate dimensions\n         */\n\n      }, {\n        key: \"recalculateDimensions\",\n        value: function recalculateDimensions() {\n          if (this.isOpen) {\n            this.$dropdownEl.css({\n              width: '',\n              height: '',\n              left: '',\n              top: '',\n              'transform-origin': ''\n            });\n\n            this._placeDropdown();\n          }\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(Dropdown.__proto__ || Object.getPrototypeOf(Dropdown), \"init\", this).call(this, this, els, options);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_Dropdown;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return Dropdown;\n    }(Component);\n    /**\n     * @static\n     * @memberof Dropdown\n     */\n\n\n    Dropdown._dropdowns = [];\n    M.Dropdown = Dropdown;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(Dropdown, 'dropdown', 'M_Dropdown');\n    }\n  })(cash, M.anime);\n\n  ;\n\n  (function ($, anim) {\n    'use strict';\n\n    var _defaults = {\n      opacity: 0.5,\n      inDuration: 250,\n      outDuration: 250,\n      onOpenStart: null,\n      onOpenEnd: null,\n      onCloseStart: null,\n      onCloseEnd: null,\n      preventScrolling: true,\n      dismissible: true,\n      startingTop: '4%',\n      endingTop: '10%'\n    };\n    /**\n     * @class\n     *\n     */\n\n    var Modal = function (_Component2) {\n      _inherits(Modal, _Component2);\n      /**\n       * Construct Modal instance and set up overlay\n       * @constructor\n       * @param {Element} el\n       * @param {Object} options\n       */\n\n\n      function Modal(el, options) {\n        _classCallCheck(this, Modal);\n\n        var _this7 = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, Modal, el, options));\n\n        _this7.el.M_Modal = _this7;\n        /**\n         * Options for the modal\n         * @member Modal#options\n         * @prop {Number} [opacity=0.5] - Opacity of the modal overlay\n         * @prop {Number} [inDuration=250] - Length in ms of enter transition\n         * @prop {Number} [outDuration=250] - Length in ms of exit transition\n         * @prop {Function} onOpenStart - Callback function called before modal is opened\n         * @prop {Function} onOpenEnd - Callback function called after modal is opened\n         * @prop {Function} onCloseStart - Callback function called before modal is closed\n         * @prop {Function} onCloseEnd - Callback function called after modal is closed\n         * @prop {Boolean} [dismissible=true] - Allow modal to be dismissed by keyboard or overlay click\n         * @prop {String} [startingTop='4%'] - startingTop\n         * @prop {String} [endingTop='10%'] - endingTop\n         */\n\n        _this7.options = $.extend({}, Modal.defaults, options);\n        /**\n         * Describes open/close state of modal\n         * @type {Boolean}\n         */\n\n        _this7.isOpen = false;\n        _this7.id = _this7.$el.attr('id');\n        _this7._openingTrigger = undefined;\n        _this7.$overlay = $('<div class=\"modal-overlay\"></div>');\n        _this7.el.tabIndex = 0;\n        _this7._nthModalOpened = 0;\n        Modal._count++;\n\n        _this7._setupEventHandlers();\n\n        return _this7;\n      }\n\n      _createClass(Modal, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          Modal._count--;\n\n          this._removeEventHandlers();\n\n          this.el.removeAttribute('style');\n          this.$overlay.remove();\n          this.el.M_Modal = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          this._handleOverlayClickBound = this._handleOverlayClick.bind(this);\n          this._handleModalCloseClickBound = this._handleModalCloseClick.bind(this);\n\n          if (Modal._count === 1) {\n            document.body.addEventListener('click', this._handleTriggerClick);\n          }\n\n          this.$overlay[0].addEventListener('click', this._handleOverlayClickBound);\n          this.el.addEventListener('click', this._handleModalCloseClickBound);\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          if (Modal._count === 0) {\n            document.body.removeEventListener('click', this._handleTriggerClick);\n          }\n\n          this.$overlay[0].removeEventListener('click', this._handleOverlayClickBound);\n          this.el.removeEventListener('click', this._handleModalCloseClickBound);\n        }\n        /**\n         * Handle Trigger Click\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleTriggerClick\",\n        value: function _handleTriggerClick(e) {\n          var $trigger = $(e.target).closest('.modal-trigger');\n\n          if ($trigger.length) {\n            var modalId = M.getIdFromTrigger($trigger[0]);\n            var modalInstance = document.getElementById(modalId).M_Modal;\n\n            if (modalInstance) {\n              modalInstance.open($trigger);\n            }\n\n            e.preventDefault();\n          }\n        }\n        /**\n         * Handle Overlay Click\n         */\n\n      }, {\n        key: \"_handleOverlayClick\",\n        value: function _handleOverlayClick() {\n          if (this.options.dismissible) {\n            this.close();\n          }\n        }\n        /**\n         * Handle Modal Close Click\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleModalCloseClick\",\n        value: function _handleModalCloseClick(e) {\n          var $closeTrigger = $(e.target).closest('.modal-close');\n\n          if ($closeTrigger.length) {\n            this.close();\n          }\n        }\n        /**\n         * Handle Keydown\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleKeydown\",\n        value: function _handleKeydown(e) {\n          // ESC key\n          if (e.keyCode === 27 && this.options.dismissible) {\n            this.close();\n          }\n        }\n        /**\n         * Handle Focus\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleFocus\",\n        value: function _handleFocus(e) {\n          // Only trap focus if this modal is the last model opened (prevents loops in nested modals).\n          if (!this.el.contains(e.target) && this._nthModalOpened === Modal._modalsOpen) {\n            this.el.focus();\n          }\n        }\n        /**\n         * Animate in modal\n         */\n\n      }, {\n        key: \"_animateIn\",\n        value: function _animateIn() {\n          var _this8 = this; // Set initial styles\n\n\n          $.extend(this.el.style, {\n            display: 'block',\n            opacity: 0\n          });\n          $.extend(this.$overlay[0].style, {\n            display: 'block',\n            opacity: 0\n          }); // Animate overlay\n\n          anim({\n            targets: this.$overlay[0],\n            opacity: this.options.opacity,\n            duration: this.options.inDuration,\n            easing: 'easeOutQuad'\n          }); // Define modal animation options\n\n          var enterAnimOptions = {\n            targets: this.el,\n            duration: this.options.inDuration,\n            easing: 'easeOutCubic',\n            // Handle modal onOpenEnd callback\n            complete: function () {\n              if (typeof _this8.options.onOpenEnd === 'function') {\n                _this8.options.onOpenEnd.call(_this8, _this8.el, _this8._openingTrigger);\n              }\n            }\n          }; // Bottom sheet animation\n\n          if (this.el.classList.contains('bottom-sheet')) {\n            $.extend(enterAnimOptions, {\n              bottom: 0,\n              opacity: 1\n            });\n            anim(enterAnimOptions); // Normal modal animation\n          } else {\n            $.extend(enterAnimOptions, {\n              top: [this.options.startingTop, this.options.endingTop],\n              opacity: 1,\n              scaleX: [0.8, 1],\n              scaleY: [0.8, 1]\n            });\n            anim(enterAnimOptions);\n          }\n        }\n        /**\n         * Animate out modal\n         */\n\n      }, {\n        key: \"_animateOut\",\n        value: function _animateOut() {\n          var _this9 = this; // Animate overlay\n\n\n          anim({\n            targets: this.$overlay[0],\n            opacity: 0,\n            duration: this.options.outDuration,\n            easing: 'easeOutQuart'\n          }); // Define modal animation options\n\n          var exitAnimOptions = {\n            targets: this.el,\n            duration: this.options.outDuration,\n            easing: 'easeOutCubic',\n            // Handle modal ready callback\n            complete: function () {\n              _this9.el.style.display = 'none';\n\n              _this9.$overlay.remove(); // Call onCloseEnd callback\n\n\n              if (typeof _this9.options.onCloseEnd === 'function') {\n                _this9.options.onCloseEnd.call(_this9, _this9.el);\n              }\n            }\n          }; // Bottom sheet animation\n\n          if (this.el.classList.contains('bottom-sheet')) {\n            $.extend(exitAnimOptions, {\n              bottom: '-100%',\n              opacity: 0\n            });\n            anim(exitAnimOptions); // Normal modal animation\n          } else {\n            $.extend(exitAnimOptions, {\n              top: [this.options.endingTop, this.options.startingTop],\n              opacity: 0,\n              scaleX: 0.8,\n              scaleY: 0.8\n            });\n            anim(exitAnimOptions);\n          }\n        }\n        /**\n         * Open Modal\n         * @param {cash} [$trigger]\n         */\n\n      }, {\n        key: \"open\",\n        value: function open($trigger) {\n          if (this.isOpen) {\n            return;\n          }\n\n          this.isOpen = true;\n          Modal._modalsOpen++;\n          this._nthModalOpened = Modal._modalsOpen; // Set Z-Index based on number of currently open modals\n\n          this.$overlay[0].style.zIndex = 1000 + Modal._modalsOpen * 2;\n          this.el.style.zIndex = 1000 + Modal._modalsOpen * 2 + 1; // Set opening trigger, undefined indicates modal was opened by javascript\n\n          this._openingTrigger = !!$trigger ? $trigger[0] : undefined; // onOpenStart callback\n\n          if (typeof this.options.onOpenStart === 'function') {\n            this.options.onOpenStart.call(this, this.el, this._openingTrigger);\n          }\n\n          if (this.options.preventScrolling) {\n            document.body.style.overflow = 'hidden';\n          }\n\n          this.el.classList.add('open');\n          this.el.insertAdjacentElement('afterend', this.$overlay[0]);\n\n          if (this.options.dismissible) {\n            this._handleKeydownBound = this._handleKeydown.bind(this);\n            this._handleFocusBound = this._handleFocus.bind(this);\n            document.addEventListener('keydown', this._handleKeydownBound);\n            document.addEventListener('focus', this._handleFocusBound, true);\n          }\n\n          anim.remove(this.el);\n          anim.remove(this.$overlay[0]);\n\n          this._animateIn(); // Focus modal\n\n\n          this.el.focus();\n          return this;\n        }\n        /**\n         * Close Modal\n         */\n\n      }, {\n        key: \"close\",\n        value: function close() {\n          if (!this.isOpen) {\n            return;\n          }\n\n          this.isOpen = false;\n          Modal._modalsOpen--;\n          this._nthModalOpened = 0; // Call onCloseStart callback\n\n          if (typeof this.options.onCloseStart === 'function') {\n            this.options.onCloseStart.call(this, this.el);\n          }\n\n          this.el.classList.remove('open'); // Enable body scrolling only if there are no more modals open.\n\n          if (Modal._modalsOpen === 0) {\n            document.body.style.overflow = '';\n          }\n\n          if (this.options.dismissible) {\n            document.removeEventListener('keydown', this._handleKeydownBound);\n            document.removeEventListener('focus', this._handleFocusBound, true);\n          }\n\n          anim.remove(this.el);\n          anim.remove(this.$overlay[0]);\n\n          this._animateOut();\n\n          return this;\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(Modal.__proto__ || Object.getPrototypeOf(Modal), \"init\", this).call(this, this, els, options);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_Modal;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return Modal;\n    }(Component);\n    /**\n     * @static\n     * @memberof Modal\n     */\n\n\n    Modal._modalsOpen = 0;\n    /**\n     * @static\n     * @memberof Modal\n     */\n\n    Modal._count = 0;\n    M.Modal = Modal;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(Modal, 'modal', 'M_Modal');\n    }\n  })(cash, M.anime);\n\n  ;\n\n  (function ($) {\n    // Function to update labels of text fields\n    M.updateTextFields = function () {\n      var input_selector = 'input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], input[type=date], input[type=time], textarea';\n      $(input_selector).each(function (element, index) {\n        var $this = $(this);\n\n        if (element.value.length > 0 || $(element).is(':focus') || element.autofocus || $this.attr('placeholder') !== null) {\n          $this.siblings('label').addClass('active');\n        } else if (element.validity) {\n          $this.siblings('label').toggleClass('active', element.validity.badInput === true);\n        } else {\n          $this.siblings('label').removeClass('active');\n        }\n      });\n    };\n\n    M.validate_field = function (object) {\n      var hasLength = object.attr('data-length') !== null;\n      var lenAttr = parseInt(object.attr('data-length'));\n      var len = object[0].value.length;\n\n      if (len === 0 && object[0].validity.badInput === false && !object.is(':required')) {\n        if (object.hasClass('validate')) {\n          object.removeClass('valid');\n          object.removeClass('invalid');\n        }\n      } else {\n        if (object.hasClass('validate')) {\n          // Check for character counter attributes\n          if (object.is(':valid') && hasLength && len <= lenAttr || object.is(':valid') && !hasLength) {\n            object.removeClass('invalid');\n            object.addClass('valid');\n          } else {\n            object.removeClass('valid');\n            object.addClass('invalid');\n          }\n        }\n      }\n    };\n\n    M.textareaAutoResize = function ($textarea) {\n      // Wrap if native element\n      if ($textarea instanceof Element) {\n        $textarea = $($textarea);\n      }\n\n      if (!$textarea.length) {\n        console.error('No textarea element found');\n        return;\n      } // Textarea Auto Resize\n\n\n      var hiddenDiv = $('.hiddendiv').first();\n\n      if (!hiddenDiv.length) {\n        hiddenDiv = $('<div class=\"hiddendiv common\"></div>');\n        $('body').append(hiddenDiv);\n      } // Set font properties of hiddenDiv\n\n\n      var fontFamily = $textarea.css('font-family');\n      var fontSize = $textarea.css('font-size');\n      var lineHeight = $textarea.css('line-height'); // Firefox can't handle padding shorthand.\n\n      var paddingTop = $textarea.css('padding-top');\n      var paddingRight = $textarea.css('padding-right');\n      var paddingBottom = $textarea.css('padding-bottom');\n      var paddingLeft = $textarea.css('padding-left');\n\n      if (fontSize) {\n        hiddenDiv.css('font-size', fontSize);\n      }\n\n      if (fontFamily) {\n        hiddenDiv.css('font-family', fontFamily);\n      }\n\n      if (lineHeight) {\n        hiddenDiv.css('line-height', lineHeight);\n      }\n\n      if (paddingTop) {\n        hiddenDiv.css('padding-top', paddingTop);\n      }\n\n      if (paddingRight) {\n        hiddenDiv.css('padding-right', paddingRight);\n      }\n\n      if (paddingBottom) {\n        hiddenDiv.css('padding-bottom', paddingBottom);\n      }\n\n      if (paddingLeft) {\n        hiddenDiv.css('padding-left', paddingLeft);\n      } // Set original-height, if none\n\n\n      if (!$textarea.data('original-height')) {\n        $textarea.data('original-height', $textarea.height());\n      }\n\n      if ($textarea.attr('wrap') === 'off') {\n        hiddenDiv.css('overflow-wrap', 'normal').css('white-space', 'pre');\n      }\n\n      hiddenDiv.text($textarea[0].value + '\\n');\n      var content = hiddenDiv.html().replace(/\\n/g, '<br>');\n      hiddenDiv.html(content); // When textarea is hidden, width goes crazy.\n      // Approximate with half of window size\n\n      if ($textarea[0].offsetWidth > 0 && $textarea[0].offsetHeight > 0) {\n        hiddenDiv.css('width', $textarea.width() + 'px');\n      } else {\n        hiddenDiv.css('width', window.innerWidth / 2 + 'px');\n      }\n      /**\n       * Resize if the new height is greater than the\n       * original height of the textarea\n       */\n\n\n      if ($textarea.data('original-height') <= hiddenDiv.innerHeight()) {\n        $textarea.css('height', hiddenDiv.innerHeight() + 'px');\n      } else if ($textarea[0].value.length < $textarea.data('previous-length')) {\n        /**\n         * In case the new height is less than original height, it\n         * means the textarea has less text than before\n         * So we set the height to the original one\n         */\n        $textarea.css('height', $textarea.data('original-height') + 'px');\n      }\n\n      $textarea.data('previous-length', $textarea[0].value.length);\n    };\n\n    $(document).ready(function () {\n      // Text based inputs\n      var input_selector = 'input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], input[type=date], input[type=time], textarea'; // Add active if form auto complete\n\n      $(document).on('change', input_selector, function () {\n        if (this.value.length !== 0 || $(this).attr('placeholder') !== null) {\n          $(this).siblings('label').addClass('active');\n        }\n\n        M.validate_field($(this));\n      }); // Add active if input element has been pre-populated on document ready\n\n      $(document).ready(function () {\n        M.updateTextFields();\n      }); // HTML DOM FORM RESET handling\n\n      $(document).on('reset', function (e) {\n        var formReset = $(e.target);\n\n        if (formReset.is('form')) {\n          formReset.find(input_selector).removeClass('valid').removeClass('invalid');\n          formReset.find(input_selector).each(function (e) {\n            if (this.value.length) {\n              $(this).siblings('label').removeClass('active');\n            }\n          }); // Reset select (after native reset)\n\n          setTimeout(function () {\n            formReset.find('select').each(function () {\n              // check if initialized\n              if (this.M_FormSelect) {\n                $(this).trigger('change');\n              }\n            });\n          }, 0);\n        }\n      });\n      /**\n       * Add active when element has focus\n       * @param {Event} e\n       */\n\n      document.addEventListener('focus', function (e) {\n        if ($(e.target).is(input_selector)) {\n          $(e.target).siblings('label, .prefix').addClass('active');\n        }\n      }, true);\n      /**\n       * Remove active when element is blurred\n       * @param {Event} e\n       */\n\n      document.addEventListener('blur', function (e) {\n        var $inputElement = $(e.target);\n\n        if ($inputElement.is(input_selector)) {\n          var selector = '.prefix';\n\n          if ($inputElement[0].value.length === 0 && $inputElement[0].validity.badInput !== true && $inputElement.attr('placeholder') === null) {\n            selector += ', label';\n          }\n\n          $inputElement.siblings(selector).removeClass('active');\n          M.validate_field($inputElement);\n        }\n      }, true); // Radio and Checkbox focus class\n\n      var radio_checkbox = 'input[type=radio], input[type=checkbox]';\n      $(document).on('keyup', radio_checkbox, function (e) {\n        // TAB, check if tabbing to radio or checkbox.\n        if (e.which === M.keys.TAB) {\n          $(this).addClass('tabbed');\n          var $this = $(this);\n          $this.one('blur', function (e) {\n            $(this).removeClass('tabbed');\n          });\n          return;\n        }\n      });\n      var text_area_selector = '.materialize-textarea';\n      $(text_area_selector).each(function () {\n        var $textarea = $(this);\n        /**\n         * Resize textarea on document load after storing\n         * the original height and the original length\n         */\n\n        $textarea.data('original-height', $textarea.height());\n        $textarea.data('previous-length', this.value.length);\n        M.textareaAutoResize($textarea);\n      });\n      $(document).on('keyup', text_area_selector, function () {\n        M.textareaAutoResize($(this));\n      });\n      $(document).on('keydown', text_area_selector, function () {\n        M.textareaAutoResize($(this));\n      }); // File Input Path\n\n      $(document).on('change', '.file-field input[type=\"file\"]', function () {\n        var file_field = $(this).closest('.file-field');\n        var path_input = file_field.find('input.file-path');\n        var files = $(this)[0].files;\n        var file_names = [];\n\n        for (var i = 0; i < files.length; i++) {\n          file_names.push(files[i].name);\n        }\n\n        path_input[0].value = file_names.join(', ');\n        path_input.trigger('change');\n      });\n    }); // End of $(document).ready\n  })(cash);\n\n  ;\n\n  (function ($, anim) {\n    'use strict';\n\n    var _defaults = {\n      direction: 'top',\n      hoverEnabled: true,\n      toolbarEnabled: false\n    };\n    $.fn.reverse = [].reverse;\n    /**\n     * @class\n     *\n     */\n\n    var FloatingActionButton = function (_Component3) {\n      _inherits(FloatingActionButton, _Component3);\n      /**\n       * Construct FloatingActionButton instance\n       * @constructor\n       * @param {Element} el\n       * @param {Object} options\n       */\n\n\n      function FloatingActionButton(el, options) {\n        _classCallCheck(this, FloatingActionButton);\n\n        var _this10 = _possibleConstructorReturn(this, (FloatingActionButton.__proto__ || Object.getPrototypeOf(FloatingActionButton)).call(this, FloatingActionButton, el, options));\n\n        _this10.el.M_FloatingActionButton = _this10;\n        /**\n         * Options for the fab\n         * @member FloatingActionButton#options\n         * @prop {Boolean} [direction] - Direction fab menu opens\n         * @prop {Boolean} [hoverEnabled=true] - Enable hover vs click\n         * @prop {Boolean} [toolbarEnabled=false] - Enable toolbar transition\n         */\n\n        _this10.options = $.extend({}, FloatingActionButton.defaults, options);\n        _this10.isOpen = false;\n        _this10.$anchor = _this10.$el.children('a').first();\n        _this10.$menu = _this10.$el.children('ul').first();\n        _this10.$floatingBtns = _this10.$el.find('ul .btn-floating');\n        _this10.$floatingBtnsReverse = _this10.$el.find('ul .btn-floating').reverse();\n        _this10.offsetY = 0;\n        _this10.offsetX = 0;\n\n        _this10.$el.addClass(\"direction-\" + _this10.options.direction);\n\n        if (_this10.options.direction === 'top') {\n          _this10.offsetY = 40;\n        } else if (_this10.options.direction === 'right') {\n          _this10.offsetX = -40;\n        } else if (_this10.options.direction === 'bottom') {\n          _this10.offsetY = -40;\n        } else {\n          _this10.offsetX = 40;\n        }\n\n        _this10._setupEventHandlers();\n\n        return _this10;\n      }\n\n      _createClass(FloatingActionButton, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._removeEventHandlers();\n\n          this.el.M_FloatingActionButton = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          this._handleFABClickBound = this._handleFABClick.bind(this);\n          this._handleOpenBound = this.open.bind(this);\n          this._handleCloseBound = this.close.bind(this);\n\n          if (this.options.hoverEnabled && !this.options.toolbarEnabled) {\n            this.el.addEventListener('mouseenter', this._handleOpenBound);\n            this.el.addEventListener('mouseleave', this._handleCloseBound);\n          } else {\n            this.el.addEventListener('click', this._handleFABClickBound);\n          }\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          if (this.options.hoverEnabled && !this.options.toolbarEnabled) {\n            this.el.removeEventListener('mouseenter', this._handleOpenBound);\n            this.el.removeEventListener('mouseleave', this._handleCloseBound);\n          } else {\n            this.el.removeEventListener('click', this._handleFABClickBound);\n          }\n        }\n        /**\n         * Handle FAB Click\n         */\n\n      }, {\n        key: \"_handleFABClick\",\n        value: function _handleFABClick() {\n          if (this.isOpen) {\n            this.close();\n          } else {\n            this.open();\n          }\n        }\n        /**\n         * Handle Document Click\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleDocumentClick\",\n        value: function _handleDocumentClick(e) {\n          if (!$(e.target).closest(this.$menu).length) {\n            this.close();\n          }\n        }\n        /**\n         * Open FAB\n         */\n\n      }, {\n        key: \"open\",\n        value: function open() {\n          if (this.isOpen) {\n            return;\n          }\n\n          if (this.options.toolbarEnabled) {\n            this._animateInToolbar();\n          } else {\n            this._animateInFAB();\n          }\n\n          this.isOpen = true;\n        }\n        /**\n         * Close FAB\n         */\n\n      }, {\n        key: \"close\",\n        value: function close() {\n          if (!this.isOpen) {\n            return;\n          }\n\n          if (this.options.toolbarEnabled) {\n            window.removeEventListener('scroll', this._handleCloseBound, true);\n            document.body.removeEventListener('click', this._handleDocumentClickBound, true);\n\n            this._animateOutToolbar();\n          } else {\n            this._animateOutFAB();\n          }\n\n          this.isOpen = false;\n        }\n        /**\n         * Classic FAB Menu open\n         */\n\n      }, {\n        key: \"_animateInFAB\",\n        value: function _animateInFAB() {\n          var _this11 = this;\n\n          this.$el.addClass('active');\n          var time = 0;\n          this.$floatingBtnsReverse.each(function (el) {\n            anim({\n              targets: el,\n              opacity: 1,\n              scale: [0.4, 1],\n              translateY: [_this11.offsetY, 0],\n              translateX: [_this11.offsetX, 0],\n              duration: 275,\n              delay: time,\n              easing: 'easeInOutQuad'\n            });\n            time += 40;\n          });\n        }\n        /**\n         * Classic FAB Menu close\n         */\n\n      }, {\n        key: \"_animateOutFAB\",\n        value: function _animateOutFAB() {\n          var _this12 = this;\n\n          this.$floatingBtnsReverse.each(function (el) {\n            anim.remove(el);\n            anim({\n              targets: el,\n              opacity: 0,\n              scale: 0.4,\n              translateY: _this12.offsetY,\n              translateX: _this12.offsetX,\n              duration: 175,\n              easing: 'easeOutQuad',\n              complete: function () {\n                _this12.$el.removeClass('active');\n              }\n            });\n          });\n        }\n        /**\n         * Toolbar transition Menu open\n         */\n\n      }, {\n        key: \"_animateInToolbar\",\n        value: function _animateInToolbar() {\n          var _this13 = this;\n\n          var scaleFactor = void 0;\n          var windowWidth = window.innerWidth;\n          var windowHeight = window.innerHeight;\n          var btnRect = this.el.getBoundingClientRect();\n          var backdrop = $('<div class=\"fab-backdrop\"></div>');\n          var fabColor = this.$anchor.css('background-color');\n          this.$anchor.append(backdrop);\n          this.offsetX = btnRect.left - windowWidth / 2 + btnRect.width / 2;\n          this.offsetY = windowHeight - btnRect.bottom;\n          scaleFactor = windowWidth / backdrop[0].clientWidth;\n          this.btnBottom = btnRect.bottom;\n          this.btnLeft = btnRect.left;\n          this.btnWidth = btnRect.width; // Set initial state\n\n          this.$el.addClass('active');\n          this.$el.css({\n            'text-align': 'center',\n            width: '100%',\n            bottom: 0,\n            left: 0,\n            transform: 'translateX(' + this.offsetX + 'px)',\n            transition: 'none'\n          });\n          this.$anchor.css({\n            transform: 'translateY(' + -this.offsetY + 'px)',\n            transition: 'none'\n          });\n          backdrop.css({\n            'background-color': fabColor\n          });\n          setTimeout(function () {\n            _this13.$el.css({\n              transform: '',\n              transition: 'transform .2s cubic-bezier(0.550, 0.085, 0.680, 0.530), background-color 0s linear .2s'\n            });\n\n            _this13.$anchor.css({\n              overflow: 'visible',\n              transform: '',\n              transition: 'transform .2s'\n            });\n\n            setTimeout(function () {\n              _this13.$el.css({\n                overflow: 'hidden',\n                'background-color': fabColor\n              });\n\n              backdrop.css({\n                transform: 'scale(' + scaleFactor + ')',\n                transition: 'transform .2s cubic-bezier(0.550, 0.055, 0.675, 0.190)'\n              });\n\n              _this13.$menu.children('li').children('a').css({\n                opacity: 1\n              }); // Scroll to close.\n\n\n              _this13._handleDocumentClickBound = _this13._handleDocumentClick.bind(_this13);\n              window.addEventListener('scroll', _this13._handleCloseBound, true);\n              document.body.addEventListener('click', _this13._handleDocumentClickBound, true);\n            }, 100);\n          }, 0);\n        }\n        /**\n         * Toolbar transition Menu close\n         */\n\n      }, {\n        key: \"_animateOutToolbar\",\n        value: function _animateOutToolbar() {\n          var _this14 = this;\n\n          var windowWidth = window.innerWidth;\n          var windowHeight = window.innerHeight;\n          var backdrop = this.$el.find('.fab-backdrop');\n          var fabColor = this.$anchor.css('background-color');\n          this.offsetX = this.btnLeft - windowWidth / 2 + this.btnWidth / 2;\n          this.offsetY = windowHeight - this.btnBottom; // Hide backdrop\n\n          this.$el.removeClass('active');\n          this.$el.css({\n            'background-color': 'transparent',\n            transition: 'none'\n          });\n          this.$anchor.css({\n            transition: 'none'\n          });\n          backdrop.css({\n            transform: 'scale(0)',\n            'background-color': fabColor\n          });\n          this.$menu.children('li').children('a').css({\n            opacity: ''\n          });\n          setTimeout(function () {\n            backdrop.remove(); // Set initial state.\n\n            _this14.$el.css({\n              'text-align': '',\n              width: '',\n              bottom: '',\n              left: '',\n              overflow: '',\n              'background-color': '',\n              transform: 'translate3d(' + -_this14.offsetX + 'px,0,0)'\n            });\n\n            _this14.$anchor.css({\n              overflow: '',\n              transform: 'translate3d(0,' + _this14.offsetY + 'px,0)'\n            });\n\n            setTimeout(function () {\n              _this14.$el.css({\n                transform: 'translate3d(0,0,0)',\n                transition: 'transform .2s'\n              });\n\n              _this14.$anchor.css({\n                transform: 'translate3d(0,0,0)',\n                transition: 'transform .2s cubic-bezier(0.550, 0.055, 0.675, 0.190)'\n              });\n            }, 20);\n          }, 200);\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(FloatingActionButton.__proto__ || Object.getPrototypeOf(FloatingActionButton), \"init\", this).call(this, this, els, options);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_FloatingActionButton;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return FloatingActionButton;\n    }(Component);\n\n    M.FloatingActionButton = FloatingActionButton;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(FloatingActionButton, 'floatingActionButton', 'M_FloatingActionButton');\n    }\n  })(cash, M.anime);\n\n  ;\n\n  (function ($) {\n    'use strict';\n\n    var _defaults = {\n      // Close when date is selected\n      autoClose: false,\n      // the default output format for the input field value\n      format: 'mmm dd, yyyy',\n      // Used to create date object from current input string\n      parse: null,\n      // The initial date to view when first opened\n      defaultDate: null,\n      // Make the `defaultDate` the initial selected value\n      setDefaultDate: false,\n      disableWeekends: false,\n      disableDayFn: null,\n      // First day of week (0: Sunday, 1: Monday etc)\n      firstDay: 0,\n      // The earliest date that can be selected\n      minDate: null,\n      // Thelatest date that can be selected\n      maxDate: null,\n      // Number of years either side, or array of upper/lower range\n      yearRange: 10,\n      // used internally (don't config outside)\n      minYear: 0,\n      maxYear: 9999,\n      minMonth: undefined,\n      maxMonth: undefined,\n      startRange: null,\n      endRange: null,\n      isRTL: false,\n      // Render the month after year in the calendar title\n      showMonthAfterYear: false,\n      // Render days of the calendar grid that fall in the next or previous month\n      showDaysInNextAndPreviousMonths: false,\n      // Specify a DOM element to render the calendar in\n      container: null,\n      // Show clear button\n      showClearBtn: false,\n      // internationalization\n      i18n: {\n        cancel: 'Cancel',\n        clear: 'Clear',\n        done: 'Ok',\n        previousMonth: '‹',\n        nextMonth: '›',\n        months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        weekdaysAbbrev: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n      },\n      // events array\n      events: [],\n      // callback function\n      onSelect: null,\n      onOpen: null,\n      onClose: null,\n      onDraw: null\n    };\n    /**\n     * @class\n     *\n     */\n\n    var Datepicker = function (_Component4) {\n      _inherits(Datepicker, _Component4);\n      /**\n       * Construct Datepicker instance and set up overlay\n       * @constructor\n       * @param {Element} el\n       * @param {Object} options\n       */\n\n\n      function Datepicker(el, options) {\n        _classCallCheck(this, Datepicker);\n\n        var _this15 = _possibleConstructorReturn(this, (Datepicker.__proto__ || Object.getPrototypeOf(Datepicker)).call(this, Datepicker, el, options));\n\n        _this15.el.M_Datepicker = _this15;\n        _this15.options = $.extend({}, Datepicker.defaults, options); // make sure i18n defaults are not lost when only few i18n option properties are passed\n\n        if (!!options && options.hasOwnProperty('i18n') && typeof options.i18n === 'object') {\n          _this15.options.i18n = $.extend({}, Datepicker.defaults.i18n, options.i18n);\n        } // Remove time component from minDate and maxDate options\n\n\n        if (_this15.options.minDate) _this15.options.minDate.setHours(0, 0, 0, 0);\n        if (_this15.options.maxDate) _this15.options.maxDate.setHours(0, 0, 0, 0);\n        _this15.id = M.guid();\n\n        _this15._setupVariables();\n\n        _this15._insertHTMLIntoDOM();\n\n        _this15._setupModal();\n\n        _this15._setupEventHandlers();\n\n        if (!_this15.options.defaultDate) {\n          _this15.options.defaultDate = new Date(Date.parse(_this15.el.value));\n        }\n\n        var defDate = _this15.options.defaultDate;\n\n        if (Datepicker._isDate(defDate)) {\n          if (_this15.options.setDefaultDate) {\n            _this15.setDate(defDate, true);\n\n            _this15.setInputValue();\n          } else {\n            _this15.gotoDate(defDate);\n          }\n        } else {\n          _this15.gotoDate(new Date());\n        }\n        /**\n         * Describes open/close state of datepicker\n         * @type {Boolean}\n         */\n\n\n        _this15.isOpen = false;\n        return _this15;\n      }\n\n      _createClass(Datepicker, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._removeEventHandlers();\n\n          this.modal.destroy();\n          $(this.modalEl).remove();\n          this.destroySelects();\n          this.el.M_Datepicker = undefined;\n        }\n      }, {\n        key: \"destroySelects\",\n        value: function destroySelects() {\n          var oldYearSelect = this.calendarEl.querySelector('.orig-select-year');\n\n          if (oldYearSelect) {\n            M.FormSelect.getInstance(oldYearSelect).destroy();\n          }\n\n          var oldMonthSelect = this.calendarEl.querySelector('.orig-select-month');\n\n          if (oldMonthSelect) {\n            M.FormSelect.getInstance(oldMonthSelect).destroy();\n          }\n        }\n      }, {\n        key: \"_insertHTMLIntoDOM\",\n        value: function _insertHTMLIntoDOM() {\n          if (this.options.showClearBtn) {\n            $(this.clearBtn).css({\n              visibility: ''\n            });\n            this.clearBtn.innerHTML = this.options.i18n.clear;\n          }\n\n          this.doneBtn.innerHTML = this.options.i18n.done;\n          this.cancelBtn.innerHTML = this.options.i18n.cancel;\n\n          if (this.options.container) {\n            this.$modalEl.appendTo(this.options.container);\n          } else {\n            this.$modalEl.insertBefore(this.el);\n          }\n        }\n      }, {\n        key: \"_setupModal\",\n        value: function _setupModal() {\n          var _this16 = this;\n\n          this.modalEl.id = 'modal-' + this.id;\n          this.modal = M.Modal.init(this.modalEl, {\n            onCloseEnd: function () {\n              _this16.isOpen = false;\n            }\n          });\n        }\n      }, {\n        key: \"toString\",\n        value: function toString(format) {\n          var _this17 = this;\n\n          format = format || this.options.format;\n\n          if (!Datepicker._isDate(this.date)) {\n            return '';\n          }\n\n          var formatArray = format.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g);\n          var formattedDate = formatArray.map(function (label) {\n            if (_this17.formats[label]) {\n              return _this17.formats[label]();\n            }\n\n            return label;\n          }).join('');\n          return formattedDate;\n        }\n      }, {\n        key: \"setDate\",\n        value: function setDate(date, preventOnSelect) {\n          if (!date) {\n            this.date = null;\n\n            this._renderDateDisplay();\n\n            return this.draw();\n          }\n\n          if (typeof date === 'string') {\n            date = new Date(Date.parse(date));\n          }\n\n          if (!Datepicker._isDate(date)) {\n            return;\n          }\n\n          var min = this.options.minDate,\n              max = this.options.maxDate;\n\n          if (Datepicker._isDate(min) && date < min) {\n            date = min;\n          } else if (Datepicker._isDate(max) && date > max) {\n            date = max;\n          }\n\n          this.date = new Date(date.getTime());\n\n          this._renderDateDisplay();\n\n          Datepicker._setToStartOfDay(this.date);\n\n          this.gotoDate(this.date);\n\n          if (!preventOnSelect && typeof this.options.onSelect === 'function') {\n            this.options.onSelect.call(this, this.date);\n          }\n        }\n      }, {\n        key: \"setInputValue\",\n        value: function setInputValue() {\n          this.el.value = this.toString();\n          this.$el.trigger('change', {\n            firedBy: this\n          });\n        }\n      }, {\n        key: \"_renderDateDisplay\",\n        value: function _renderDateDisplay() {\n          var displayDate = Datepicker._isDate(this.date) ? this.date : new Date();\n          var i18n = this.options.i18n;\n          var day = i18n.weekdaysShort[displayDate.getDay()];\n          var month = i18n.monthsShort[displayDate.getMonth()];\n          var date = displayDate.getDate();\n          this.yearTextEl.innerHTML = displayDate.getFullYear();\n          this.dateTextEl.innerHTML = day + \", \" + month + \" \" + date;\n        }\n        /**\n         * change view to a specific date\n         */\n\n      }, {\n        key: \"gotoDate\",\n        value: function gotoDate(date) {\n          var newCalendar = true;\n\n          if (!Datepicker._isDate(date)) {\n            return;\n          }\n\n          if (this.calendars) {\n            var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),\n                lastVisibleDate = new Date(this.calendars[this.calendars.length - 1].year, this.calendars[this.calendars.length - 1].month, 1),\n                visibleDate = date.getTime(); // get the end of the month\n\n            lastVisibleDate.setMonth(lastVisibleDate.getMonth() + 1);\n            lastVisibleDate.setDate(lastVisibleDate.getDate() - 1);\n            newCalendar = visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate;\n          }\n\n          if (newCalendar) {\n            this.calendars = [{\n              month: date.getMonth(),\n              year: date.getFullYear()\n            }];\n          }\n\n          this.adjustCalendars();\n        }\n      }, {\n        key: \"adjustCalendars\",\n        value: function adjustCalendars() {\n          this.calendars[0] = this.adjustCalendar(this.calendars[0]);\n          this.draw();\n        }\n      }, {\n        key: \"adjustCalendar\",\n        value: function adjustCalendar(calendar) {\n          if (calendar.month < 0) {\n            calendar.year -= Math.ceil(Math.abs(calendar.month) / 12);\n            calendar.month += 12;\n          }\n\n          if (calendar.month > 11) {\n            calendar.year += Math.floor(Math.abs(calendar.month) / 12);\n            calendar.month -= 12;\n          }\n\n          return calendar;\n        }\n      }, {\n        key: \"nextMonth\",\n        value: function nextMonth() {\n          this.calendars[0].month++;\n          this.adjustCalendars();\n        }\n      }, {\n        key: \"prevMonth\",\n        value: function prevMonth() {\n          this.calendars[0].month--;\n          this.adjustCalendars();\n        }\n      }, {\n        key: \"render\",\n        value: function render(year, month, randId) {\n          var opts = this.options,\n              now = new Date(),\n              days = Datepicker._getDaysInMonth(year, month),\n              before = new Date(year, month, 1).getDay(),\n              data = [],\n              row = [];\n\n          Datepicker._setToStartOfDay(now);\n\n          if (opts.firstDay > 0) {\n            before -= opts.firstDay;\n\n            if (before < 0) {\n              before += 7;\n            }\n          }\n\n          var previousMonth = month === 0 ? 11 : month - 1,\n              nextMonth = month === 11 ? 0 : month + 1,\n              yearOfPreviousMonth = month === 0 ? year - 1 : year,\n              yearOfNextMonth = month === 11 ? year + 1 : year,\n              daysInPreviousMonth = Datepicker._getDaysInMonth(yearOfPreviousMonth, previousMonth);\n\n          var cells = days + before,\n              after = cells;\n\n          while (after > 7) {\n            after -= 7;\n          }\n\n          cells += 7 - after;\n          var isWeekSelected = false;\n\n          for (var i = 0, r = 0; i < cells; i++) {\n            var day = new Date(year, month, 1 + (i - before)),\n                isSelected = Datepicker._isDate(this.date) ? Datepicker._compareDates(day, this.date) : false,\n                isToday = Datepicker._compareDates(day, now),\n                hasEvent = opts.events.indexOf(day.toDateString()) !== -1 ? true : false,\n                isEmpty = i < before || i >= days + before,\n                dayNumber = 1 + (i - before),\n                monthNumber = month,\n                yearNumber = year,\n                isStartRange = opts.startRange && Datepicker._compareDates(opts.startRange, day),\n                isEndRange = opts.endRange && Datepicker._compareDates(opts.endRange, day),\n                isInRange = opts.startRange && opts.endRange && opts.startRange < day && day < opts.endRange,\n                isDisabled = opts.minDate && day < opts.minDate || opts.maxDate && day > opts.maxDate || opts.disableWeekends && Datepicker._isWeekend(day) || opts.disableDayFn && opts.disableDayFn(day);\n\n            if (isEmpty) {\n              if (i < before) {\n                dayNumber = daysInPreviousMonth + dayNumber;\n                monthNumber = previousMonth;\n                yearNumber = yearOfPreviousMonth;\n              } else {\n                dayNumber = dayNumber - days;\n                monthNumber = nextMonth;\n                yearNumber = yearOfNextMonth;\n              }\n            }\n\n            var dayConfig = {\n              day: dayNumber,\n              month: monthNumber,\n              year: yearNumber,\n              hasEvent: hasEvent,\n              isSelected: isSelected,\n              isToday: isToday,\n              isDisabled: isDisabled,\n              isEmpty: isEmpty,\n              isStartRange: isStartRange,\n              isEndRange: isEndRange,\n              isInRange: isInRange,\n              showDaysInNextAndPreviousMonths: opts.showDaysInNextAndPreviousMonths\n            };\n            row.push(this.renderDay(dayConfig));\n\n            if (++r === 7) {\n              data.push(this.renderRow(row, opts.isRTL, isWeekSelected));\n              row = [];\n              r = 0;\n              isWeekSelected = false;\n            }\n          }\n\n          return this.renderTable(opts, data, randId);\n        }\n      }, {\n        key: \"renderDay\",\n        value: function renderDay(opts) {\n          var arr = [];\n          var ariaSelected = 'false';\n\n          if (opts.isEmpty) {\n            if (opts.showDaysInNextAndPreviousMonths) {\n              arr.push('is-outside-current-month');\n              arr.push('is-selection-disabled');\n            } else {\n              return '<td class=\"is-empty\"></td>';\n            }\n          }\n\n          if (opts.isDisabled) {\n            arr.push('is-disabled');\n          }\n\n          if (opts.isToday) {\n            arr.push('is-today');\n          }\n\n          if (opts.isSelected) {\n            arr.push('is-selected');\n            ariaSelected = 'true';\n          }\n\n          if (opts.hasEvent) {\n            arr.push('has-event');\n          }\n\n          if (opts.isInRange) {\n            arr.push('is-inrange');\n          }\n\n          if (opts.isStartRange) {\n            arr.push('is-startrange');\n          }\n\n          if (opts.isEndRange) {\n            arr.push('is-endrange');\n          }\n\n          return \"<td data-day=\\\"\" + opts.day + \"\\\" class=\\\"\" + arr.join(' ') + \"\\\" aria-selected=\\\"\" + ariaSelected + \"\\\">\" + (\"<button class=\\\"datepicker-day-button\\\" type=\\\"button\\\" data-year=\\\"\" + opts.year + \"\\\" data-month=\\\"\" + opts.month + \"\\\" data-day=\\\"\" + opts.day + \"\\\">\" + opts.day + \"</button>\") + '</td>';\n        }\n      }, {\n        key: \"renderRow\",\n        value: function renderRow(days, isRTL, isRowSelected) {\n          return '<tr class=\"datepicker-row' + (isRowSelected ? ' is-selected' : '') + '\">' + (isRTL ? days.reverse() : days).join('') + '</tr>';\n        }\n      }, {\n        key: \"renderTable\",\n        value: function renderTable(opts, data, randId) {\n          return '<div class=\"datepicker-table-wrapper\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"datepicker-table\" role=\"grid\" aria-labelledby=\"' + randId + '\">' + this.renderHead(opts) + this.renderBody(data) + '</table></div>';\n        }\n      }, {\n        key: \"renderHead\",\n        value: function renderHead(opts) {\n          var i = void 0,\n              arr = [];\n\n          for (i = 0; i < 7; i++) {\n            arr.push(\"<th scope=\\\"col\\\"><abbr title=\\\"\" + this.renderDayName(opts, i) + \"\\\">\" + this.renderDayName(opts, i, true) + \"</abbr></th>\");\n          }\n\n          return '<thead><tr>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</tr></thead>';\n        }\n      }, {\n        key: \"renderBody\",\n        value: function renderBody(rows) {\n          return '<tbody>' + rows.join('') + '</tbody>';\n        }\n      }, {\n        key: \"renderTitle\",\n        value: function renderTitle(instance, c, year, month, refYear, randId) {\n          var i = void 0,\n              j = void 0,\n              arr = void 0,\n              opts = this.options,\n              isMinYear = year === opts.minYear,\n              isMaxYear = year === opts.maxYear,\n              html = '<div id=\"' + randId + '\" class=\"datepicker-controls\" role=\"heading\" aria-live=\"assertive\">',\n              monthHtml = void 0,\n              yearHtml = void 0,\n              prev = true,\n              next = true;\n\n          for (arr = [], i = 0; i < 12; i++) {\n            arr.push('<option value=\"' + (year === refYear ? i - c : 12 + i - c) + '\"' + (i === month ? ' selected=\"selected\"' : '') + (isMinYear && i < opts.minMonth || isMaxYear && i > opts.maxMonth ? 'disabled=\"disabled\"' : '') + '>' + opts.i18n.months[i] + '</option>');\n          }\n\n          monthHtml = '<select class=\"datepicker-select orig-select-month\" tabindex=\"-1\">' + arr.join('') + '</select>';\n\n          if ($.isArray(opts.yearRange)) {\n            i = opts.yearRange[0];\n            j = opts.yearRange[1] + 1;\n          } else {\n            i = year - opts.yearRange;\n            j = 1 + year + opts.yearRange;\n          }\n\n          for (arr = []; i < j && i <= opts.maxYear; i++) {\n            if (i >= opts.minYear) {\n              arr.push(\"<option value=\\\"\" + i + \"\\\" \" + (i === year ? 'selected=\"selected\"' : '') + \">\" + i + \"</option>\");\n            }\n          }\n\n          yearHtml = \"<select class=\\\"datepicker-select orig-select-year\\\" tabindex=\\\"-1\\\">\" + arr.join('') + \"</select>\";\n          var leftArrow = '<svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"/><path d=\"M0-.5h24v24H0z\" fill=\"none\"/></svg>';\n          html += \"<button class=\\\"month-prev\" + (prev ? '' : ' is-disabled') + \"\\\" type=\\\"button\\\">\" + leftArrow + \"</button>\";\n          html += '<div class=\"selects-container\">';\n\n          if (opts.showMonthAfterYear) {\n            html += yearHtml + monthHtml;\n          } else {\n            html += monthHtml + yearHtml;\n          }\n\n          html += '</div>';\n\n          if (isMinYear && (month === 0 || opts.minMonth >= month)) {\n            prev = false;\n          }\n\n          if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {\n            next = false;\n          }\n\n          var rightArrow = '<svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"/><path d=\"M0-.25h24v24H0z\" fill=\"none\"/></svg>';\n          html += \"<button class=\\\"month-next\" + (next ? '' : ' is-disabled') + \"\\\" type=\\\"button\\\">\" + rightArrow + \"</button>\";\n          return html += '</div>';\n        }\n        /**\n         * refresh the HTML\n         */\n\n      }, {\n        key: \"draw\",\n        value: function draw(force) {\n          if (!this.isOpen && !force) {\n            return;\n          }\n\n          var opts = this.options,\n              minYear = opts.minYear,\n              maxYear = opts.maxYear,\n              minMonth = opts.minMonth,\n              maxMonth = opts.maxMonth,\n              html = '',\n              randId = void 0;\n\n          if (this._y <= minYear) {\n            this._y = minYear;\n\n            if (!isNaN(minMonth) && this._m < minMonth) {\n              this._m = minMonth;\n            }\n          }\n\n          if (this._y >= maxYear) {\n            this._y = maxYear;\n\n            if (!isNaN(maxMonth) && this._m > maxMonth) {\n              this._m = maxMonth;\n            }\n          }\n\n          randId = 'datepicker-title-' + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2);\n\n          for (var c = 0; c < 1; c++) {\n            this._renderDateDisplay();\n\n            html += this.renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year, randId) + this.render(this.calendars[c].year, this.calendars[c].month, randId);\n          }\n\n          this.destroySelects();\n          this.calendarEl.innerHTML = html; // Init Materialize Select\n\n          var yearSelect = this.calendarEl.querySelector('.orig-select-year');\n          var monthSelect = this.calendarEl.querySelector('.orig-select-month');\n          M.FormSelect.init(yearSelect, {\n            classes: 'select-year',\n            dropdownOptions: {\n              container: document.body,\n              constrainWidth: false\n            }\n          });\n          M.FormSelect.init(monthSelect, {\n            classes: 'select-month',\n            dropdownOptions: {\n              container: document.body,\n              constrainWidth: false\n            }\n          }); // Add change handlers for select\n\n          yearSelect.addEventListener('change', this._handleYearChange.bind(this));\n          monthSelect.addEventListener('change', this._handleMonthChange.bind(this));\n\n          if (typeof this.options.onDraw === 'function') {\n            this.options.onDraw(this);\n          }\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          this._handleInputKeydownBound = this._handleInputKeydown.bind(this);\n          this._handleInputClickBound = this._handleInputClick.bind(this);\n          this._handleInputChangeBound = this._handleInputChange.bind(this);\n          this._handleCalendarClickBound = this._handleCalendarClick.bind(this);\n          this._finishSelectionBound = this._finishSelection.bind(this);\n          this._handleMonthChange = this._handleMonthChange.bind(this);\n          this._closeBound = this.close.bind(this);\n          this.el.addEventListener('click', this._handleInputClickBound);\n          this.el.addEventListener('keydown', this._handleInputKeydownBound);\n          this.el.addEventListener('change', this._handleInputChangeBound);\n          this.calendarEl.addEventListener('click', this._handleCalendarClickBound);\n          this.doneBtn.addEventListener('click', this._finishSelectionBound);\n          this.cancelBtn.addEventListener('click', this._closeBound);\n\n          if (this.options.showClearBtn) {\n            this._handleClearClickBound = this._handleClearClick.bind(this);\n            this.clearBtn.addEventListener('click', this._handleClearClickBound);\n          }\n        }\n      }, {\n        key: \"_setupVariables\",\n        value: function _setupVariables() {\n          var _this18 = this;\n\n          this.$modalEl = $(Datepicker._template);\n          this.modalEl = this.$modalEl[0];\n          this.calendarEl = this.modalEl.querySelector('.datepicker-calendar');\n          this.yearTextEl = this.modalEl.querySelector('.year-text');\n          this.dateTextEl = this.modalEl.querySelector('.date-text');\n\n          if (this.options.showClearBtn) {\n            this.clearBtn = this.modalEl.querySelector('.datepicker-clear');\n          }\n\n          this.doneBtn = this.modalEl.querySelector('.datepicker-done');\n          this.cancelBtn = this.modalEl.querySelector('.datepicker-cancel');\n          this.formats = {\n            d: function () {\n              return _this18.date.getDate();\n            },\n            dd: function () {\n              var d = _this18.date.getDate();\n\n              return (d < 10 ? '0' : '') + d;\n            },\n            ddd: function () {\n              return _this18.options.i18n.weekdaysShort[_this18.date.getDay()];\n            },\n            dddd: function () {\n              return _this18.options.i18n.weekdays[_this18.date.getDay()];\n            },\n            m: function () {\n              return _this18.date.getMonth() + 1;\n            },\n            mm: function () {\n              var m = _this18.date.getMonth() + 1;\n              return (m < 10 ? '0' : '') + m;\n            },\n            mmm: function () {\n              return _this18.options.i18n.monthsShort[_this18.date.getMonth()];\n            },\n            mmmm: function () {\n              return _this18.options.i18n.months[_this18.date.getMonth()];\n            },\n            yy: function () {\n              return ('' + _this18.date.getFullYear()).slice(2);\n            },\n            yyyy: function () {\n              return _this18.date.getFullYear();\n            }\n          };\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          this.el.removeEventListener('click', this._handleInputClickBound);\n          this.el.removeEventListener('keydown', this._handleInputKeydownBound);\n          this.el.removeEventListener('change', this._handleInputChangeBound);\n          this.calendarEl.removeEventListener('click', this._handleCalendarClickBound);\n        }\n      }, {\n        key: \"_handleInputClick\",\n        value: function _handleInputClick() {\n          this.open();\n        }\n      }, {\n        key: \"_handleInputKeydown\",\n        value: function _handleInputKeydown(e) {\n          if (e.which === M.keys.ENTER) {\n            e.preventDefault();\n            this.open();\n          }\n        }\n      }, {\n        key: \"_handleCalendarClick\",\n        value: function _handleCalendarClick(e) {\n          if (!this.isOpen) {\n            return;\n          }\n\n          var $target = $(e.target);\n\n          if (!$target.hasClass('is-disabled')) {\n            if ($target.hasClass('datepicker-day-button') && !$target.hasClass('is-empty') && !$target.parent().hasClass('is-disabled')) {\n              this.setDate(new Date(e.target.getAttribute('data-year'), e.target.getAttribute('data-month'), e.target.getAttribute('data-day')));\n\n              if (this.options.autoClose) {\n                this._finishSelection();\n              }\n            } else if ($target.closest('.month-prev').length) {\n              this.prevMonth();\n            } else if ($target.closest('.month-next').length) {\n              this.nextMonth();\n            }\n          }\n        }\n      }, {\n        key: \"_handleClearClick\",\n        value: function _handleClearClick() {\n          this.date = null;\n          this.setInputValue();\n          this.close();\n        }\n      }, {\n        key: \"_handleMonthChange\",\n        value: function _handleMonthChange(e) {\n          this.gotoMonth(e.target.value);\n        }\n      }, {\n        key: \"_handleYearChange\",\n        value: function _handleYearChange(e) {\n          this.gotoYear(e.target.value);\n        }\n        /**\n         * change view to a specific month (zero-index, e.g. 0: January)\n         */\n\n      }, {\n        key: \"gotoMonth\",\n        value: function gotoMonth(month) {\n          if (!isNaN(month)) {\n            this.calendars[0].month = parseInt(month, 10);\n            this.adjustCalendars();\n          }\n        }\n        /**\n         * change view to a specific full year (e.g. \"2012\")\n         */\n\n      }, {\n        key: \"gotoYear\",\n        value: function gotoYear(year) {\n          if (!isNaN(year)) {\n            this.calendars[0].year = parseInt(year, 10);\n            this.adjustCalendars();\n          }\n        }\n      }, {\n        key: \"_handleInputChange\",\n        value: function _handleInputChange(e) {\n          var date = void 0; // Prevent change event from being fired when triggered by the plugin\n\n          if (e.firedBy === this) {\n            return;\n          }\n\n          if (this.options.parse) {\n            date = this.options.parse(this.el.value, this.options.format);\n          } else {\n            date = new Date(Date.parse(this.el.value));\n          }\n\n          if (Datepicker._isDate(date)) {\n            this.setDate(date);\n          }\n        }\n      }, {\n        key: \"renderDayName\",\n        value: function renderDayName(opts, day, abbr) {\n          day += opts.firstDay;\n\n          while (day >= 7) {\n            day -= 7;\n          }\n\n          return abbr ? opts.i18n.weekdaysAbbrev[day] : opts.i18n.weekdays[day];\n        }\n        /**\n         * Set input value to the selected date and close Datepicker\n         */\n\n      }, {\n        key: \"_finishSelection\",\n        value: function _finishSelection() {\n          this.setInputValue();\n          this.close();\n        }\n        /**\n         * Open Datepicker\n         */\n\n      }, {\n        key: \"open\",\n        value: function open() {\n          if (this.isOpen) {\n            return;\n          }\n\n          this.isOpen = true;\n\n          if (typeof this.options.onOpen === 'function') {\n            this.options.onOpen.call(this);\n          }\n\n          this.draw();\n          this.modal.open();\n          return this;\n        }\n        /**\n         * Close Datepicker\n         */\n\n      }, {\n        key: \"close\",\n        value: function close() {\n          if (!this.isOpen) {\n            return;\n          }\n\n          this.isOpen = false;\n\n          if (typeof this.options.onClose === 'function') {\n            this.options.onClose.call(this);\n          }\n\n          this.modal.close();\n          return this;\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(Datepicker.__proto__ || Object.getPrototypeOf(Datepicker), \"init\", this).call(this, this, els, options);\n        }\n      }, {\n        key: \"_isDate\",\n        value: function _isDate(obj) {\n          return /Date/.test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime());\n        }\n      }, {\n        key: \"_isWeekend\",\n        value: function _isWeekend(date) {\n          var day = date.getDay();\n          return day === 0 || day === 6;\n        }\n      }, {\n        key: \"_setToStartOfDay\",\n        value: function _setToStartOfDay(date) {\n          if (Datepicker._isDate(date)) date.setHours(0, 0, 0, 0);\n        }\n      }, {\n        key: \"_getDaysInMonth\",\n        value: function _getDaysInMonth(year, month) {\n          return [31, Datepicker._isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n        }\n      }, {\n        key: \"_isLeapYear\",\n        value: function _isLeapYear(year) {\n          // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951\n          return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n        }\n      }, {\n        key: \"_compareDates\",\n        value: function _compareDates(a, b) {\n          // weak date comparison (use setToStartOfDay(date) to ensure correct result)\n          return a.getTime() === b.getTime();\n        }\n      }, {\n        key: \"_setToStartOfDay\",\n        value: function _setToStartOfDay(date) {\n          if (Datepicker._isDate(date)) date.setHours(0, 0, 0, 0);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_Datepicker;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return Datepicker;\n    }(Component);\n\n    Datepicker._template = ['<div class= \"modal datepicker-modal\">', '<div class=\"modal-content datepicker-container\">', '<div class=\"datepicker-date-display\">', '<span class=\"year-text\"></span>', '<span class=\"date-text\"></span>', '</div>', '<div class=\"datepicker-calendar-container\">', '<div class=\"datepicker-calendar\"></div>', '<div class=\"datepicker-footer\">', '<button class=\"btn-flat datepicker-clear waves-effect\" style=\"visibility: hidden;\" type=\"button\"></button>', '<div class=\"confirmation-btns\">', '<button class=\"btn-flat datepicker-cancel waves-effect\" type=\"button\"></button>', '<button class=\"btn-flat datepicker-done waves-effect\" type=\"button\"></button>', '</div>', '</div>', '</div>', '</div>', '</div>'].join('');\n    M.Datepicker = Datepicker;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(Datepicker, 'datepicker', 'M_Datepicker');\n    }\n  })(cash);\n\n  ;\n\n  (function ($) {\n    'use strict';\n\n    var _defaults = {\n      dialRadius: 135,\n      outerRadius: 105,\n      innerRadius: 70,\n      tickRadius: 20,\n      duration: 350,\n      container: null,\n      defaultTime: 'now',\n      // default time, 'now' or '13:14' e.g.\n      fromNow: 0,\n      // Millisecond offset from the defaultTime\n      showClearBtn: false,\n      // internationalization\n      i18n: {\n        cancel: 'Cancel',\n        clear: 'Clear',\n        done: 'Ok'\n      },\n      autoClose: false,\n      // auto close when minute is selected\n      twelveHour: true,\n      // change to 12 hour AM/PM clock from 24 hour\n      vibrate: true,\n      // vibrate the device when dragging clock hand\n      // Callbacks\n      onOpenStart: null,\n      onOpenEnd: null,\n      onCloseStart: null,\n      onCloseEnd: null,\n      onSelect: null\n    };\n    /**\n     * @class\n     *\n     */\n\n    var Timepicker = function (_Component5) {\n      _inherits(Timepicker, _Component5);\n\n      function Timepicker(el, options) {\n        _classCallCheck(this, Timepicker);\n\n        var _this19 = _possibleConstructorReturn(this, (Timepicker.__proto__ || Object.getPrototypeOf(Timepicker)).call(this, Timepicker, el, options));\n\n        _this19.el.M_Timepicker = _this19;\n        _this19.options = $.extend({}, Timepicker.defaults, options);\n        _this19.id = M.guid();\n\n        _this19._insertHTMLIntoDOM();\n\n        _this19._setupModal();\n\n        _this19._setupVariables();\n\n        _this19._setupEventHandlers();\n\n        _this19._clockSetup();\n\n        _this19._pickerSetup();\n\n        return _this19;\n      }\n\n      _createClass(Timepicker, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._removeEventHandlers();\n\n          this.modal.destroy();\n          $(this.modalEl).remove();\n          this.el.M_Timepicker = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          this._handleInputKeydownBound = this._handleInputKeydown.bind(this);\n          this._handleInputClickBound = this._handleInputClick.bind(this);\n          this._handleClockClickStartBound = this._handleClockClickStart.bind(this);\n          this._handleDocumentClickMoveBound = this._handleDocumentClickMove.bind(this);\n          this._handleDocumentClickEndBound = this._handleDocumentClickEnd.bind(this);\n          this.el.addEventListener('click', this._handleInputClickBound);\n          this.el.addEventListener('keydown', this._handleInputKeydownBound);\n          this.plate.addEventListener('mousedown', this._handleClockClickStartBound);\n          this.plate.addEventListener('touchstart', this._handleClockClickStartBound);\n          $(this.spanHours).on('click', this.showView.bind(this, 'hours'));\n          $(this.spanMinutes).on('click', this.showView.bind(this, 'minutes'));\n        }\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          this.el.removeEventListener('click', this._handleInputClickBound);\n          this.el.removeEventListener('keydown', this._handleInputKeydownBound);\n        }\n      }, {\n        key: \"_handleInputClick\",\n        value: function _handleInputClick() {\n          this.open();\n        }\n      }, {\n        key: \"_handleInputKeydown\",\n        value: function _handleInputKeydown(e) {\n          if (e.which === M.keys.ENTER) {\n            e.preventDefault();\n            this.open();\n          }\n        }\n      }, {\n        key: \"_handleClockClickStart\",\n        value: function _handleClockClickStart(e) {\n          e.preventDefault();\n          var clockPlateBR = this.plate.getBoundingClientRect();\n          var offset = {\n            x: clockPlateBR.left,\n            y: clockPlateBR.top\n          };\n          this.x0 = offset.x + this.options.dialRadius;\n          this.y0 = offset.y + this.options.dialRadius;\n          this.moved = false;\n\n          var clickPos = Timepicker._Pos(e);\n\n          this.dx = clickPos.x - this.x0;\n          this.dy = clickPos.y - this.y0; // Set clock hands\n\n          this.setHand(this.dx, this.dy, false); // Mousemove on document\n\n          document.addEventListener('mousemove', this._handleDocumentClickMoveBound);\n          document.addEventListener('touchmove', this._handleDocumentClickMoveBound); // Mouseup on document\n\n          document.addEventListener('mouseup', this._handleDocumentClickEndBound);\n          document.addEventListener('touchend', this._handleDocumentClickEndBound);\n        }\n      }, {\n        key: \"_handleDocumentClickMove\",\n        value: function _handleDocumentClickMove(e) {\n          e.preventDefault();\n\n          var clickPos = Timepicker._Pos(e);\n\n          var x = clickPos.x - this.x0;\n          var y = clickPos.y - this.y0;\n          this.moved = true;\n          this.setHand(x, y, false, true);\n        }\n      }, {\n        key: \"_handleDocumentClickEnd\",\n        value: function _handleDocumentClickEnd(e) {\n          var _this20 = this;\n\n          e.preventDefault();\n          document.removeEventListener('mouseup', this._handleDocumentClickEndBound);\n          document.removeEventListener('touchend', this._handleDocumentClickEndBound);\n\n          var clickPos = Timepicker._Pos(e);\n\n          var x = clickPos.x - this.x0;\n          var y = clickPos.y - this.y0;\n\n          if (this.moved && x === this.dx && y === this.dy) {\n            this.setHand(x, y);\n          }\n\n          if (this.currentView === 'hours') {\n            this.showView('minutes', this.options.duration / 2);\n          } else if (this.options.autoClose) {\n            $(this.minutesView).addClass('timepicker-dial-out');\n            setTimeout(function () {\n              _this20.done();\n            }, this.options.duration / 2);\n          }\n\n          if (typeof this.options.onSelect === 'function') {\n            this.options.onSelect.call(this, this.hours, this.minutes);\n          } // Unbind mousemove event\n\n\n          document.removeEventListener('mousemove', this._handleDocumentClickMoveBound);\n          document.removeEventListener('touchmove', this._handleDocumentClickMoveBound);\n        }\n      }, {\n        key: \"_insertHTMLIntoDOM\",\n        value: function _insertHTMLIntoDOM() {\n          this.$modalEl = $(Timepicker._template);\n          this.modalEl = this.$modalEl[0];\n          this.modalEl.id = 'modal-' + this.id; // Append popover to input by default\n\n          var containerEl = document.querySelector(this.options.container);\n\n          if (this.options.container && !!containerEl) {\n            this.$modalEl.appendTo(containerEl);\n          } else {\n            this.$modalEl.insertBefore(this.el);\n          }\n        }\n      }, {\n        key: \"_setupModal\",\n        value: function _setupModal() {\n          var _this21 = this;\n\n          this.modal = M.Modal.init(this.modalEl, {\n            onOpenStart: this.options.onOpenStart,\n            onOpenEnd: this.options.onOpenEnd,\n            onCloseStart: this.options.onCloseStart,\n            onCloseEnd: function () {\n              if (typeof _this21.options.onCloseEnd === 'function') {\n                _this21.options.onCloseEnd.call(_this21);\n              }\n\n              _this21.isOpen = false;\n            }\n          });\n        }\n      }, {\n        key: \"_setupVariables\",\n        value: function _setupVariables() {\n          this.currentView = 'hours';\n          this.vibrate = navigator.vibrate ? 'vibrate' : navigator.webkitVibrate ? 'webkitVibrate' : null;\n          this._canvas = this.modalEl.querySelector('.timepicker-canvas');\n          this.plate = this.modalEl.querySelector('.timepicker-plate');\n          this.hoursView = this.modalEl.querySelector('.timepicker-hours');\n          this.minutesView = this.modalEl.querySelector('.timepicker-minutes');\n          this.spanHours = this.modalEl.querySelector('.timepicker-span-hours');\n          this.spanMinutes = this.modalEl.querySelector('.timepicker-span-minutes');\n          this.spanAmPm = this.modalEl.querySelector('.timepicker-span-am-pm');\n          this.footer = this.modalEl.querySelector('.timepicker-footer');\n          this.amOrPm = 'PM';\n        }\n      }, {\n        key: \"_pickerSetup\",\n        value: function _pickerSetup() {\n          var $clearBtn = $(\"<button class=\\\"btn-flat timepicker-clear waves-effect\\\" style=\\\"visibility: hidden;\\\" type=\\\"button\\\" tabindex=\\\"\" + (this.options.twelveHour ? '3' : '1') + \"\\\">\" + this.options.i18n.clear + \"</button>\").appendTo(this.footer).on('click', this.clear.bind(this));\n\n          if (this.options.showClearBtn) {\n            $clearBtn.css({\n              visibility: ''\n            });\n          }\n\n          var confirmationBtnsContainer = $('<div class=\"confirmation-btns\"></div>');\n          $('<button class=\"btn-flat timepicker-close waves-effect\" type=\"button\" tabindex=\"' + (this.options.twelveHour ? '3' : '1') + '\">' + this.options.i18n.cancel + '</button>').appendTo(confirmationBtnsContainer).on('click', this.close.bind(this));\n          $('<button class=\"btn-flat timepicker-close waves-effect\" type=\"button\" tabindex=\"' + (this.options.twelveHour ? '3' : '1') + '\">' + this.options.i18n.done + '</button>').appendTo(confirmationBtnsContainer).on('click', this.done.bind(this));\n          confirmationBtnsContainer.appendTo(this.footer);\n        }\n      }, {\n        key: \"_clockSetup\",\n        value: function _clockSetup() {\n          if (this.options.twelveHour) {\n            this.$amBtn = $('<div class=\"am-btn\">AM</div>');\n            this.$pmBtn = $('<div class=\"pm-btn\">PM</div>');\n            this.$amBtn.on('click', this._handleAmPmClick.bind(this)).appendTo(this.spanAmPm);\n            this.$pmBtn.on('click', this._handleAmPmClick.bind(this)).appendTo(this.spanAmPm);\n          }\n\n          this._buildHoursView();\n\n          this._buildMinutesView();\n\n          this._buildSVGClock();\n        }\n      }, {\n        key: \"_buildSVGClock\",\n        value: function _buildSVGClock() {\n          // Draw clock hands and others\n          var dialRadius = this.options.dialRadius;\n          var tickRadius = this.options.tickRadius;\n          var diameter = dialRadius * 2;\n\n          var svg = Timepicker._createSVGEl('svg');\n\n          svg.setAttribute('class', 'timepicker-svg');\n          svg.setAttribute('width', diameter);\n          svg.setAttribute('height', diameter);\n\n          var g = Timepicker._createSVGEl('g');\n\n          g.setAttribute('transform', 'translate(' + dialRadius + ',' + dialRadius + ')');\n\n          var bearing = Timepicker._createSVGEl('circle');\n\n          bearing.setAttribute('class', 'timepicker-canvas-bearing');\n          bearing.setAttribute('cx', 0);\n          bearing.setAttribute('cy', 0);\n          bearing.setAttribute('r', 4);\n\n          var hand = Timepicker._createSVGEl('line');\n\n          hand.setAttribute('x1', 0);\n          hand.setAttribute('y1', 0);\n\n          var bg = Timepicker._createSVGEl('circle');\n\n          bg.setAttribute('class', 'timepicker-canvas-bg');\n          bg.setAttribute('r', tickRadius);\n          g.appendChild(hand);\n          g.appendChild(bg);\n          g.appendChild(bearing);\n          svg.appendChild(g);\n\n          this._canvas.appendChild(svg);\n\n          this.hand = hand;\n          this.bg = bg;\n          this.bearing = bearing;\n          this.g = g;\n        }\n      }, {\n        key: \"_buildHoursView\",\n        value: function _buildHoursView() {\n          var $tick = $('<div class=\"timepicker-tick\"></div>'); // Hours view\n\n          if (this.options.twelveHour) {\n            for (var i = 1; i < 13; i += 1) {\n              var tick = $tick.clone();\n              var radian = i / 6 * Math.PI;\n              var radius = this.options.outerRadius;\n              tick.css({\n                left: this.options.dialRadius + Math.sin(radian) * radius - this.options.tickRadius + 'px',\n                top: this.options.dialRadius - Math.cos(radian) * radius - this.options.tickRadius + 'px'\n              });\n              tick.html(i === 0 ? '00' : i);\n              this.hoursView.appendChild(tick[0]); // tick.on(mousedownEvent, mousedown);\n            }\n          } else {\n            for (var _i = 0; _i < 24; _i += 1) {\n              var _tick = $tick.clone();\n\n              var _radian = _i / 6 * Math.PI;\n\n              var inner = _i > 0 && _i < 13;\n\n              var _radius = inner ? this.options.innerRadius : this.options.outerRadius;\n\n              _tick.css({\n                left: this.options.dialRadius + Math.sin(_radian) * _radius - this.options.tickRadius + 'px',\n                top: this.options.dialRadius - Math.cos(_radian) * _radius - this.options.tickRadius + 'px'\n              });\n\n              _tick.html(_i === 0 ? '00' : _i);\n\n              this.hoursView.appendChild(_tick[0]); // tick.on(mousedownEvent, mousedown);\n            }\n          }\n        }\n      }, {\n        key: \"_buildMinutesView\",\n        value: function _buildMinutesView() {\n          var $tick = $('<div class=\"timepicker-tick\"></div>'); // Minutes view\n\n          for (var i = 0; i < 60; i += 5) {\n            var tick = $tick.clone();\n            var radian = i / 30 * Math.PI;\n            tick.css({\n              left: this.options.dialRadius + Math.sin(radian) * this.options.outerRadius - this.options.tickRadius + 'px',\n              top: this.options.dialRadius - Math.cos(radian) * this.options.outerRadius - this.options.tickRadius + 'px'\n            });\n            tick.html(Timepicker._addLeadingZero(i));\n            this.minutesView.appendChild(tick[0]);\n          }\n        }\n      }, {\n        key: \"_handleAmPmClick\",\n        value: function _handleAmPmClick(e) {\n          var $btnClicked = $(e.target);\n          this.amOrPm = $btnClicked.hasClass('am-btn') ? 'AM' : 'PM';\n\n          this._updateAmPmView();\n        }\n      }, {\n        key: \"_updateAmPmView\",\n        value: function _updateAmPmView() {\n          if (this.options.twelveHour) {\n            this.$amBtn.toggleClass('text-primary', this.amOrPm === 'AM');\n            this.$pmBtn.toggleClass('text-primary', this.amOrPm === 'PM');\n          }\n        }\n      }, {\n        key: \"_updateTimeFromInput\",\n        value: function _updateTimeFromInput() {\n          // Get the time\n          var value = ((this.el.value || this.options.defaultTime || '') + '').split(':');\n\n          if (this.options.twelveHour && !(typeof value[1] === 'undefined')) {\n            if (value[1].toUpperCase().indexOf('AM') > 0) {\n              this.amOrPm = 'AM';\n            } else {\n              this.amOrPm = 'PM';\n            }\n\n            value[1] = value[1].replace('AM', '').replace('PM', '');\n          }\n\n          if (value[0] === 'now') {\n            var now = new Date(+new Date() + this.options.fromNow);\n            value = [now.getHours(), now.getMinutes()];\n\n            if (this.options.twelveHour) {\n              this.amOrPm = value[0] >= 12 && value[0] < 24 ? 'PM' : 'AM';\n            }\n          }\n\n          this.hours = +value[0] || 0;\n          this.minutes = +value[1] || 0;\n          this.spanHours.innerHTML = this.hours;\n          this.spanMinutes.innerHTML = Timepicker._addLeadingZero(this.minutes);\n\n          this._updateAmPmView();\n        }\n      }, {\n        key: \"showView\",\n        value: function showView(view, delay) {\n          if (view === 'minutes' && $(this.hoursView).css('visibility') === 'visible') {// raiseCallback(this.options.beforeHourSelect);\n          }\n\n          var isHours = view === 'hours',\n              nextView = isHours ? this.hoursView : this.minutesView,\n              hideView = isHours ? this.minutesView : this.hoursView;\n          this.currentView = view;\n          $(this.spanHours).toggleClass('text-primary', isHours);\n          $(this.spanMinutes).toggleClass('text-primary', !isHours); // Transition view\n\n          hideView.classList.add('timepicker-dial-out');\n          $(nextView).css('visibility', 'visible').removeClass('timepicker-dial-out'); // Reset clock hand\n\n          this.resetClock(delay); // After transitions ended\n\n          clearTimeout(this.toggleViewTimer);\n          this.toggleViewTimer = setTimeout(function () {\n            $(hideView).css('visibility', 'hidden');\n          }, this.options.duration);\n        }\n      }, {\n        key: \"resetClock\",\n        value: function resetClock(delay) {\n          var view = this.currentView,\n              value = this[view],\n              isHours = view === 'hours',\n              unit = Math.PI / (isHours ? 6 : 30),\n              radian = value * unit,\n              radius = isHours && value > 0 && value < 13 ? this.options.innerRadius : this.options.outerRadius,\n              x = Math.sin(radian) * radius,\n              y = -Math.cos(radian) * radius,\n              self = this;\n\n          if (delay) {\n            $(this.canvas).addClass('timepicker-canvas-out');\n            setTimeout(function () {\n              $(self.canvas).removeClass('timepicker-canvas-out');\n              self.setHand(x, y);\n            }, delay);\n          } else {\n            this.setHand(x, y);\n          }\n        }\n      }, {\n        key: \"setHand\",\n        value: function setHand(x, y, roundBy5) {\n          var _this22 = this;\n\n          var radian = Math.atan2(x, -y),\n              isHours = this.currentView === 'hours',\n              unit = Math.PI / (isHours || roundBy5 ? 6 : 30),\n              z = Math.sqrt(x * x + y * y),\n              inner = isHours && z < (this.options.outerRadius + this.options.innerRadius) / 2,\n              radius = inner ? this.options.innerRadius : this.options.outerRadius;\n\n          if (this.options.twelveHour) {\n            radius = this.options.outerRadius;\n          } // Radian should in range [0, 2PI]\n\n\n          if (radian < 0) {\n            radian = Math.PI * 2 + radian;\n          } // Get the round value\n\n\n          var value = Math.round(radian / unit); // Get the round radian\n\n          radian = value * unit; // Correct the hours or minutes\n\n          if (this.options.twelveHour) {\n            if (isHours) {\n              if (value === 0) value = 12;\n            } else {\n              if (roundBy5) value *= 5;\n              if (value === 60) value = 0;\n            }\n          } else {\n            if (isHours) {\n              if (value === 12) {\n                value = 0;\n              }\n\n              value = inner ? value === 0 ? 12 : value : value === 0 ? 0 : value + 12;\n            } else {\n              if (roundBy5) {\n                value *= 5;\n              }\n\n              if (value === 60) {\n                value = 0;\n              }\n            }\n          } // Once hours or minutes changed, vibrate the device\n\n\n          if (this[this.currentView] !== value) {\n            if (this.vibrate && this.options.vibrate) {\n              // Do not vibrate too frequently\n              if (!this.vibrateTimer) {\n                navigator[this.vibrate](10);\n                this.vibrateTimer = setTimeout(function () {\n                  _this22.vibrateTimer = null;\n                }, 100);\n              }\n            }\n          }\n\n          this[this.currentView] = value;\n\n          if (isHours) {\n            this['spanHours'].innerHTML = value;\n          } else {\n            this['spanMinutes'].innerHTML = Timepicker._addLeadingZero(value);\n          } // Set clock hand and others' position\n\n\n          var cx1 = Math.sin(radian) * (radius - this.options.tickRadius),\n              cy1 = -Math.cos(radian) * (radius - this.options.tickRadius),\n              cx2 = Math.sin(radian) * radius,\n              cy2 = -Math.cos(radian) * radius;\n          this.hand.setAttribute('x2', cx1);\n          this.hand.setAttribute('y2', cy1);\n          this.bg.setAttribute('cx', cx2);\n          this.bg.setAttribute('cy', cy2);\n        }\n      }, {\n        key: \"open\",\n        value: function open() {\n          if (this.isOpen) {\n            return;\n          }\n\n          this.isOpen = true;\n\n          this._updateTimeFromInput();\n\n          this.showView('hours');\n          this.modal.open();\n        }\n      }, {\n        key: \"close\",\n        value: function close() {\n          if (!this.isOpen) {\n            return;\n          }\n\n          this.isOpen = false;\n          this.modal.close();\n        }\n        /**\n         * Finish timepicker selection.\n         */\n\n      }, {\n        key: \"done\",\n        value: function done(e, clearValue) {\n          // Set input value\n          var last = this.el.value;\n          var value = clearValue ? '' : Timepicker._addLeadingZero(this.hours) + ':' + Timepicker._addLeadingZero(this.minutes);\n          this.time = value;\n\n          if (!clearValue && this.options.twelveHour) {\n            value = value + \" \" + this.amOrPm;\n          }\n\n          this.el.value = value; // Trigger change event\n\n          if (value !== last) {\n            this.$el.trigger('change');\n          }\n\n          this.close();\n          this.el.focus();\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          this.done(null, true);\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(Timepicker.__proto__ || Object.getPrototypeOf(Timepicker), \"init\", this).call(this, this, els, options);\n        }\n      }, {\n        key: \"_addLeadingZero\",\n        value: function _addLeadingZero(num) {\n          return (num < 10 ? '0' : '') + num;\n        }\n      }, {\n        key: \"_createSVGEl\",\n        value: function _createSVGEl(name) {\n          var svgNS = 'http://www.w3.org/2000/svg';\n          return document.createElementNS(svgNS, name);\n        }\n        /**\n         * @typedef {Object} Point\n         * @property {number} x The X Coordinate\n         * @property {number} y The Y Coordinate\n         */\n\n        /**\n         * Get x position of mouse or touch event\n         * @param {Event} e\n         * @return {Point} x and y location\n         */\n\n      }, {\n        key: \"_Pos\",\n        value: function _Pos(e) {\n          if (e.targetTouches && e.targetTouches.length >= 1) {\n            return {\n              x: e.targetTouches[0].clientX,\n              y: e.targetTouches[0].clientY\n            };\n          } // mouse event\n\n\n          return {\n            x: e.clientX,\n            y: e.clientY\n          };\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_Timepicker;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return Timepicker;\n    }(Component);\n\n    Timepicker._template = ['<div class= \"modal timepicker-modal\">', '<div class=\"modal-content timepicker-container\">', '<div class=\"timepicker-digital-display\">', '<div class=\"timepicker-text-container\">', '<div class=\"timepicker-display-column\">', '<span class=\"timepicker-span-hours text-primary\"></span>', ':', '<span class=\"timepicker-span-minutes\"></span>', '</div>', '<div class=\"timepicker-display-column timepicker-display-am-pm\">', '<div class=\"timepicker-span-am-pm\"></div>', '</div>', '</div>', '</div>', '<div class=\"timepicker-analog-display\">', '<div class=\"timepicker-plate\">', '<div class=\"timepicker-canvas\"></div>', '<div class=\"timepicker-dial timepicker-hours\"></div>', '<div class=\"timepicker-dial timepicker-minutes timepicker-dial-out\"></div>', '</div>', '<div class=\"timepicker-footer\"></div>', '</div>', '</div>', '</div>'].join('');\n    M.Timepicker = Timepicker;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(Timepicker, 'timepicker', 'M_Timepicker');\n    }\n  })(cash);\n\n  ;\n\n  (function ($) {\n    'use strict';\n\n    var _defaults = {\n      classes: '',\n      dropdownOptions: {}\n    };\n    /**\n     * @class\n     *\n     */\n\n    var FormSelect = function (_Component6) {\n      _inherits(FormSelect, _Component6);\n      /**\n       * Construct FormSelect instance\n       * @constructor\n       * @param {Element} el\n       * @param {Object} options\n       */\n\n\n      function FormSelect(el, options) {\n        _classCallCheck(this, FormSelect); // Don't init if browser default version\n\n\n        var _this23 = _possibleConstructorReturn(this, (FormSelect.__proto__ || Object.getPrototypeOf(FormSelect)).call(this, FormSelect, el, options));\n\n        if (_this23.$el.hasClass('browser-default')) {\n          return _possibleConstructorReturn(_this23);\n        }\n\n        _this23.el.M_FormSelect = _this23;\n        /**\n         * Options for the select\n         * @member FormSelect#options\n         */\n\n        _this23.options = $.extend({}, FormSelect.defaults, options);\n        _this23.isMultiple = _this23.$el.prop('multiple'); // Setup\n\n        _this23.el.tabIndex = -1;\n        _this23._keysSelected = {};\n        _this23._valueDict = {}; // Maps key to original and generated option element.\n\n        _this23._setupDropdown();\n\n        _this23._setupEventHandlers();\n\n        return _this23;\n      }\n\n      _createClass(FormSelect, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._removeEventHandlers();\n\n          this._removeDropdown();\n\n          this.el.M_FormSelect = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          var _this24 = this;\n\n          this._handleSelectChangeBound = this._handleSelectChange.bind(this);\n          this._handleOptionClickBound = this._handleOptionClick.bind(this);\n          this._handleInputClickBound = this._handleInputClick.bind(this);\n          $(this.dropdownOptions).find('li:not(.optgroup)').each(function (el) {\n            el.addEventListener('click', _this24._handleOptionClickBound);\n          });\n          this.el.addEventListener('change', this._handleSelectChangeBound);\n          this.input.addEventListener('click', this._handleInputClickBound);\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          var _this25 = this;\n\n          $(this.dropdownOptions).find('li:not(.optgroup)').each(function (el) {\n            el.removeEventListener('click', _this25._handleOptionClickBound);\n          });\n          this.el.removeEventListener('change', this._handleSelectChangeBound);\n          this.input.removeEventListener('click', this._handleInputClickBound);\n        }\n        /**\n         * Handle Select Change\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleSelectChange\",\n        value: function _handleSelectChange(e) {\n          this._setValueToInput();\n        }\n        /**\n         * Handle Option Click\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleOptionClick\",\n        value: function _handleOptionClick(e) {\n          e.preventDefault();\n          var option = $(e.target).closest('li')[0];\n          var key = option.id;\n\n          if (!$(option).hasClass('disabled') && !$(option).hasClass('optgroup') && key.length) {\n            var selected = true;\n\n            if (this.isMultiple) {\n              // Deselect placeholder option if still selected.\n              var placeholderOption = $(this.dropdownOptions).find('li.disabled.selected');\n\n              if (placeholderOption.length) {\n                placeholderOption.removeClass('selected');\n                placeholderOption.find('input[type=\"checkbox\"]').prop('checked', false);\n\n                this._toggleEntryFromArray(placeholderOption[0].id);\n              }\n\n              selected = this._toggleEntryFromArray(key);\n            } else {\n              $(this.dropdownOptions).find('li').removeClass('selected');\n              $(option).toggleClass('selected', selected);\n              this._keysSelected = {};\n              this._keysSelected[option.id] = true;\n            } // Set selected on original select option\n            // Only trigger if selected state changed\n\n\n            var prevSelected = $(this._valueDict[key].el).prop('selected');\n\n            if (prevSelected !== selected) {\n              $(this._valueDict[key].el).prop('selected', selected);\n              this.$el.trigger('change');\n            }\n          }\n\n          e.stopPropagation();\n        }\n        /**\n         * Handle Input Click\n         */\n\n      }, {\n        key: \"_handleInputClick\",\n        value: function _handleInputClick() {\n          if (this.dropdown && this.dropdown.isOpen) {\n            this._setValueToInput();\n\n            this._setSelectedStates();\n          }\n        }\n        /**\n         * Setup dropdown\n         */\n\n      }, {\n        key: \"_setupDropdown\",\n        value: function _setupDropdown() {\n          var _this26 = this;\n\n          this.wrapper = document.createElement('div');\n          $(this.wrapper).addClass('select-wrapper ' + this.options.classes);\n          this.$el.before($(this.wrapper));\n          this.wrapper.appendChild(this.el);\n\n          if (this.el.disabled) {\n            this.wrapper.classList.add('disabled');\n          } // Create dropdown\n\n\n          this.$selectOptions = this.$el.children('option, optgroup');\n          this.dropdownOptions = document.createElement('ul');\n          this.dropdownOptions.id = \"select-options-\" + M.guid();\n          $(this.dropdownOptions).addClass('dropdown-content select-dropdown ' + (this.isMultiple ? 'multiple-select-dropdown' : '')); // Create dropdown structure.\n\n          if (this.$selectOptions.length) {\n            this.$selectOptions.each(function (el) {\n              if ($(el).is('option')) {\n                // Direct descendant option.\n                var optionEl = void 0;\n\n                if (_this26.isMultiple) {\n                  optionEl = _this26._appendOptionWithIcon(_this26.$el, el, 'multiple');\n                } else {\n                  optionEl = _this26._appendOptionWithIcon(_this26.$el, el);\n                }\n\n                _this26._addOptionToValueDict(el, optionEl);\n              } else if ($(el).is('optgroup')) {\n                // Optgroup.\n                var selectOptions = $(el).children('option');\n                $(_this26.dropdownOptions).append($('<li class=\"optgroup\"><span>' + el.getAttribute('label') + '</span></li>')[0]);\n                selectOptions.each(function (el) {\n                  var optionEl = _this26._appendOptionWithIcon(_this26.$el, el, 'optgroup-option');\n\n                  _this26._addOptionToValueDict(el, optionEl);\n                });\n              }\n            });\n          }\n\n          this.$el.after(this.dropdownOptions); // Add input dropdown\n\n          this.input = document.createElement('input');\n          $(this.input).addClass('select-dropdown dropdown-trigger');\n          this.input.setAttribute('type', 'text');\n          this.input.setAttribute('readonly', 'true');\n          this.input.setAttribute('data-target', this.dropdownOptions.id);\n\n          if (this.el.disabled) {\n            $(this.input).prop('disabled', 'true');\n          }\n\n          this.$el.before(this.input);\n\n          this._setValueToInput(); // Add caret\n\n\n          var dropdownIcon = $('<svg class=\"caret\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 10l5 5 5-5z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>');\n          this.$el.before(dropdownIcon[0]); // Initialize dropdown\n\n          if (!this.el.disabled) {\n            var dropdownOptions = $.extend({}, this.options.dropdownOptions); // Add callback for centering selected option when dropdown content is scrollable\n\n            dropdownOptions.onOpenEnd = function (el) {\n              var selectedOption = $(_this26.dropdownOptions).find('.selected').first();\n\n              if (selectedOption.length) {\n                // Focus selected option in dropdown\n                M.keyDown = true;\n                _this26.dropdown.focusedIndex = selectedOption.index();\n\n                _this26.dropdown._focusFocusedItem();\n\n                M.keyDown = false; // Handle scrolling to selected option\n\n                if (_this26.dropdown.isScrollable) {\n                  var scrollOffset = selectedOption[0].getBoundingClientRect().top - _this26.dropdownOptions.getBoundingClientRect().top; // scroll to selected option\n\n\n                  scrollOffset -= _this26.dropdownOptions.clientHeight / 2; // center in dropdown\n\n                  _this26.dropdownOptions.scrollTop = scrollOffset;\n                }\n              }\n            };\n\n            if (this.isMultiple) {\n              dropdownOptions.closeOnClick = false;\n            }\n\n            this.dropdown = M.Dropdown.init(this.input, dropdownOptions);\n          } // Add initial selections\n\n\n          this._setSelectedStates();\n        }\n        /**\n         * Add option to value dict\n         * @param {Element} el  original option element\n         * @param {Element} optionEl  generated option element\n         */\n\n      }, {\n        key: \"_addOptionToValueDict\",\n        value: function _addOptionToValueDict(el, optionEl) {\n          var index = Object.keys(this._valueDict).length;\n          var key = this.dropdownOptions.id + index;\n          var obj = {};\n          optionEl.id = key;\n          obj.el = el;\n          obj.optionEl = optionEl;\n          this._valueDict[key] = obj;\n        }\n        /**\n         * Remove dropdown\n         */\n\n      }, {\n        key: \"_removeDropdown\",\n        value: function _removeDropdown() {\n          $(this.wrapper).find('.caret').remove();\n          $(this.input).remove();\n          $(this.dropdownOptions).remove();\n          $(this.wrapper).before(this.$el);\n          $(this.wrapper).remove();\n        }\n        /**\n         * Setup dropdown\n         * @param {Element} select  select element\n         * @param {Element} option  option element from select\n         * @param {String} type\n         * @return {Element}  option element added\n         */\n\n      }, {\n        key: \"_appendOptionWithIcon\",\n        value: function _appendOptionWithIcon(select, option, type) {\n          // Add disabled attr if disabled\n          var disabledClass = option.disabled ? 'disabled ' : '';\n          var optgroupClass = type === 'optgroup-option' ? 'optgroup-option ' : '';\n          var multipleCheckbox = this.isMultiple ? \"<label><input type=\\\"checkbox\\\"\" + disabledClass + \"\\\"/><span>\" + option.innerHTML + \"</span></label>\" : option.innerHTML;\n          var liEl = $('<li></li>');\n          var spanEl = $('<span></span>');\n          spanEl.html(multipleCheckbox);\n          liEl.addClass(disabledClass + \" \" + optgroupClass);\n          liEl.append(spanEl); // add icons\n\n          var iconUrl = option.getAttribute('data-icon');\n\n          if (!!iconUrl) {\n            var imgEl = $(\"<img alt=\\\"\\\" src=\\\"\" + iconUrl + \"\\\">\");\n            liEl.prepend(imgEl);\n          } // Check for multiple type.\n\n\n          $(this.dropdownOptions).append(liEl[0]);\n          return liEl[0];\n        }\n        /**\n         * Toggle entry from option\n         * @param {String} key  Option key\n         * @return {Boolean}  if entry was added or removed\n         */\n\n      }, {\n        key: \"_toggleEntryFromArray\",\n        value: function _toggleEntryFromArray(key) {\n          var notAdded = !this._keysSelected.hasOwnProperty(key);\n          var $optionLi = $(this._valueDict[key].optionEl);\n\n          if (notAdded) {\n            this._keysSelected[key] = true;\n          } else {\n            delete this._keysSelected[key];\n          }\n\n          $optionLi.toggleClass('selected', notAdded); // Set checkbox checked value\n\n          $optionLi.find('input[type=\"checkbox\"]').prop('checked', notAdded); // use notAdded instead of true (to detect if the option is selected or not)\n\n          $optionLi.prop('selected', notAdded);\n          return notAdded;\n        }\n        /**\n         * Set text value to input\n         */\n\n      }, {\n        key: \"_setValueToInput\",\n        value: function _setValueToInput() {\n          var values = [];\n          var options = this.$el.find('option');\n          options.each(function (el) {\n            if ($(el).prop('selected')) {\n              var text = $(el).text();\n              values.push(text);\n            }\n          });\n\n          if (!values.length) {\n            var firstDisabled = this.$el.find('option:disabled').eq(0);\n\n            if (firstDisabled.length && firstDisabled[0].value === '') {\n              values.push(firstDisabled.text());\n            }\n          }\n\n          this.input.value = values.join(', ');\n        }\n        /**\n         * Set selected state of dropdown to match actual select element\n         */\n\n      }, {\n        key: \"_setSelectedStates\",\n        value: function _setSelectedStates() {\n          this._keysSelected = {};\n\n          for (var key in this._valueDict) {\n            var option = this._valueDict[key];\n            var optionIsSelected = $(option.el).prop('selected');\n            $(option.optionEl).find('input[type=\"checkbox\"]').prop('checked', optionIsSelected);\n\n            if (optionIsSelected) {\n              this._activateOption($(this.dropdownOptions), $(option.optionEl));\n\n              this._keysSelected[key] = true;\n            } else {\n              $(option.optionEl).removeClass('selected');\n            }\n          }\n        }\n        /**\n         * Make option as selected and scroll to selected position\n         * @param {jQuery} collection  Select options jQuery element\n         * @param {Element} newOption  element of the new option\n         */\n\n      }, {\n        key: \"_activateOption\",\n        value: function _activateOption(collection, newOption) {\n          if (newOption) {\n            if (!this.isMultiple) {\n              collection.find('li.selected').removeClass('selected');\n            }\n\n            var option = $(newOption);\n            option.addClass('selected');\n          }\n        }\n        /**\n         * Get Selected Values\n         * @return {Array}  Array of selected values\n         */\n\n      }, {\n        key: \"getSelectedValues\",\n        value: function getSelectedValues() {\n          var selectedValues = [];\n\n          for (var key in this._keysSelected) {\n            selectedValues.push(this._valueDict[key].el.value);\n          }\n\n          return selectedValues;\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(FormSelect.__proto__ || Object.getPrototypeOf(FormSelect), \"init\", this).call(this, this, els, options);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_FormSelect;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return FormSelect;\n    }(Component);\n\n    M.FormSelect = FormSelect;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(FormSelect, 'formSelect', 'M_FormSelect');\n    }\n  })(cash);\n\n  ;\n\n  (function ($, anim) {\n    'use strict';\n\n    var _defaults = {};\n    /**\n     * @class\n     *\n     */\n\n    var Range = function (_Component7) {\n      _inherits(Range, _Component7);\n      /**\n       * Construct Range instance\n       * @constructor\n       * @param {Element} el\n       * @param {Object} options\n       */\n\n\n      function Range(el, options) {\n        _classCallCheck(this, Range);\n\n        var _this27 = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, Range, el, options));\n\n        _this27.el.M_Range = _this27;\n        /**\n         * Options for the range\n         * @member Range#options\n         */\n\n        _this27.options = $.extend({}, Range.defaults, options);\n        _this27._mousedown = false; // Setup\n\n        _this27._setupThumb();\n\n        _this27._setupEventHandlers();\n\n        return _this27;\n      }\n\n      _createClass(Range, [{\n        key: \"destroy\",\n\n        /**\n         * Teardown component\n         */\n        value: function destroy() {\n          this._removeEventHandlers();\n\n          this._removeThumb();\n\n          this.el.M_Range = undefined;\n        }\n        /**\n         * Setup Event Handlers\n         */\n\n      }, {\n        key: \"_setupEventHandlers\",\n        value: function _setupEventHandlers() {\n          this._handleRangeChangeBound = this._handleRangeChange.bind(this);\n          this._handleRangeMousedownTouchstartBound = this._handleRangeMousedownTouchstart.bind(this);\n          this._handleRangeInputMousemoveTouchmoveBound = this._handleRangeInputMousemoveTouchmove.bind(this);\n          this._handleRangeMouseupTouchendBound = this._handleRangeMouseupTouchend.bind(this);\n          this._handleRangeBlurMouseoutTouchleaveBound = this._handleRangeBlurMouseoutTouchleave.bind(this);\n          this.el.addEventListener('change', this._handleRangeChangeBound);\n          this.el.addEventListener('mousedown', this._handleRangeMousedownTouchstartBound);\n          this.el.addEventListener('touchstart', this._handleRangeMousedownTouchstartBound);\n          this.el.addEventListener('input', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.addEventListener('mousemove', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.addEventListener('touchmove', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.addEventListener('mouseup', this._handleRangeMouseupTouchendBound);\n          this.el.addEventListener('touchend', this._handleRangeMouseupTouchendBound);\n          this.el.addEventListener('blur', this._handleRangeBlurMouseoutTouchleaveBound);\n          this.el.addEventListener('mouseout', this._handleRangeBlurMouseoutTouchleaveBound);\n          this.el.addEventListener('touchleave', this._handleRangeBlurMouseoutTouchleaveBound);\n        }\n        /**\n         * Remove Event Handlers\n         */\n\n      }, {\n        key: \"_removeEventHandlers\",\n        value: function _removeEventHandlers() {\n          this.el.removeEventListener('change', this._handleRangeChangeBound);\n          this.el.removeEventListener('mousedown', this._handleRangeMousedownTouchstartBound);\n          this.el.removeEventListener('touchstart', this._handleRangeMousedownTouchstartBound);\n          this.el.removeEventListener('input', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.removeEventListener('mousemove', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.removeEventListener('touchmove', this._handleRangeInputMousemoveTouchmoveBound);\n          this.el.removeEventListener('mouseup', this._handleRangeMouseupTouchendBound);\n          this.el.removeEventListener('touchend', this._handleRangeMouseupTouchendBound);\n          this.el.removeEventListener('blur', this._handleRangeBlurMouseoutTouchleaveBound);\n          this.el.removeEventListener('mouseout', this._handleRangeBlurMouseoutTouchleaveBound);\n          this.el.removeEventListener('touchleave', this._handleRangeBlurMouseoutTouchleaveBound);\n        }\n        /**\n         * Handle Range Change\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleRangeChange\",\n        value: function _handleRangeChange() {\n          $(this.value).html(this.$el.val());\n\n          if (!$(this.thumb).hasClass('active')) {\n            this._showRangeBubble();\n          }\n\n          var offsetLeft = this._calcRangeOffset();\n\n          $(this.thumb).addClass('active').css('left', offsetLeft + 'px');\n        }\n        /**\n         * Handle Range Mousedown and Touchstart\n         * @param {Event} e\n         */\n\n      }, {\n        key: \"_handleRangeMousedownTouchstart\",\n        value: function _handleRangeMousedownTouchstart(e) {\n          // Set indicator value\n          $(this.value).html(this.$el.val());\n          this._mousedown = true;\n          this.$el.addClass('active');\n\n          if (!$(this.thumb).hasClass('active')) {\n            this._showRangeBubble();\n          }\n\n          if (e.type !== 'input') {\n            var offsetLeft = this._calcRangeOffset();\n\n            $(this.thumb).addClass('active').css('left', offsetLeft + 'px');\n          }\n        }\n        /**\n         * Handle Range Input, Mousemove and Touchmove\n         */\n\n      }, {\n        key: \"_handleRangeInputMousemoveTouchmove\",\n        value: function _handleRangeInputMousemoveTouchmove() {\n          if (this._mousedown) {\n            if (!$(this.thumb).hasClass('active')) {\n              this._showRangeBubble();\n            }\n\n            var offsetLeft = this._calcRangeOffset();\n\n            $(this.thumb).addClass('active').css('left', offsetLeft + 'px');\n            $(this.value).html(this.$el.val());\n          }\n        }\n        /**\n         * Handle Range Mouseup and Touchend\n         */\n\n      }, {\n        key: \"_handleRangeMouseupTouchend\",\n        value: function _handleRangeMouseupTouchend() {\n          this._mousedown = false;\n          this.$el.removeClass('active');\n        }\n        /**\n         * Handle Range Blur, Mouseout and Touchleave\n         */\n\n      }, {\n        key: \"_handleRangeBlurMouseoutTouchleave\",\n        value: function _handleRangeBlurMouseoutTouchleave() {\n          if (!this._mousedown) {\n            var paddingLeft = parseInt(this.$el.css('padding-left'));\n            var marginLeft = 7 + paddingLeft + 'px';\n\n            if ($(this.thumb).hasClass('active')) {\n              anim.remove(this.thumb);\n              anim({\n                targets: this.thumb,\n                height: 0,\n                width: 0,\n                top: 10,\n                easing: 'easeOutQuad',\n                marginLeft: marginLeft,\n                duration: 100\n              });\n            }\n\n            $(this.thumb).removeClass('active');\n          }\n        }\n        /**\n         * Setup dropdown\n         */\n\n      }, {\n        key: \"_setupThumb\",\n        value: function _setupThumb() {\n          this.thumb = document.createElement('span');\n          this.value = document.createElement('span');\n          $(this.thumb).addClass('thumb');\n          $(this.value).addClass('value');\n          $(this.thumb).append(this.value);\n          this.$el.after(this.thumb);\n        }\n        /**\n         * Remove dropdown\n         */\n\n      }, {\n        key: \"_removeThumb\",\n        value: function _removeThumb() {\n          $(this.thumb).remove();\n        }\n        /**\n         * morph thumb into bubble\n         */\n\n      }, {\n        key: \"_showRangeBubble\",\n        value: function _showRangeBubble() {\n          var paddingLeft = parseInt($(this.thumb).parent().css('padding-left'));\n          var marginLeft = -7 + paddingLeft + 'px'; // TODO: fix magic number?\n\n          anim.remove(this.thumb);\n          anim({\n            targets: this.thumb,\n            height: 30,\n            width: 30,\n            top: -30,\n            marginLeft: marginLeft,\n            duration: 300,\n            easing: 'easeOutQuint'\n          });\n        }\n        /**\n         * Calculate the offset of the thumb\n         * @return {Number}  offset in pixels\n         */\n\n      }, {\n        key: \"_calcRangeOffset\",\n        value: function _calcRangeOffset() {\n          var width = this.$el.width() - 15;\n          var max = parseFloat(this.$el.attr('max')) || 100; // Range default max\n\n          var min = parseFloat(this.$el.attr('min')) || 0; // Range default min\n\n          var percent = (parseFloat(this.$el.val()) - min) / (max - min);\n          return percent * width;\n        }\n      }], [{\n        key: \"init\",\n        value: function init(els, options) {\n          return _get(Range.__proto__ || Object.getPrototypeOf(Range), \"init\", this).call(this, this, els, options);\n        }\n        /**\n         * Get Instance\n         */\n\n      }, {\n        key: \"getInstance\",\n        value: function getInstance(el) {\n          var domElem = !!el.jquery ? el[0] : el;\n          return domElem.M_Range;\n        }\n      }, {\n        key: \"defaults\",\n        get: function () {\n          return _defaults;\n        }\n      }]);\n\n      return Range;\n    }(Component);\n\n    M.Range = Range;\n\n    if (M.jQueryLoaded) {\n      M.initializeJqueryWrapper(Range, 'range', 'M_Range');\n    }\n\n    Range.init($('input[type=range]'));\n  })(cash, M.anime);\n} //end if window.anime//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/elements_v3/common/materialize-1-dev/dist/js/materialize.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.css":
/*!************************************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.css ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvbGlicmFyaWVzL29wdF9kYXRlX3RpbWVfcGlja2VyL2Rpc3Qvb3B0X2RhdGVfdGltZV9waWNrZXJfbGliLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3d3dy9qcy0zLjIuMi9vbnRyYXBvcnQvb3B0X2Fzc2V0cy9saWJyYXJpZXMvb3B0X2RhdGVfdGltZV9waWNrZXIvZGlzdC9vcHRfZGF0ZV90aW1lX3BpY2tlcl9saWIuY3NzPzk1OGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.css\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.js":
/*!***********************************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function (e, t) {\n   true ? module.exports = t() : undefined;\n}(window, function () {\n  return function (e) {\n    var t = {};\n\n    function i(a) {\n      if (t[a]) return t[a].exports;\n      var n = t[a] = {\n        i: a,\n        l: !1,\n        exports: {}\n      };\n      return e[a].call(n.exports, n, n.exports, i), n.l = !0, n.exports;\n    }\n\n    return i.m = e, i.c = t, i.d = function (e, t, a) {\n      i.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: a\n      });\n    }, i.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, i.t = function (e, t) {\n      if (1 & t && (e = i(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var a = Object.create(null);\n      if (i.r(a), Object.defineProperty(a, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var n in e) i.d(a, n, function (t) {\n        return e[t];\n      }.bind(null, n));\n      return a;\n    }, i.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return i.d(t, \"a\", t), t;\n    }, i.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, i.p = \"/js-3.2.2/ontraport/\", i(i.s = 0);\n  }([function (e, t, i) {\n    i(1), e.exports = i(3).default;\n  }, function (e, t, i) {},, function (e, t, i) {\n    \"use strict\";\n\n    function a(e) {\n      return function (e) {\n        if (Array.isArray(e)) return n(e);\n      }(e) || function (e) {\n        if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n      }(e) || function (e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return n(e, t);\n        var i = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === i && e.constructor && (i = e.constructor.name);\n        if (\"Map\" === i || \"Set\" === i) return Array.from(e);\n        if (\"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return n(e, t);\n      }(e) || function () {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }();\n    }\n\n    function n(e, t) {\n      (null == t || t > e.length) && (t = e.length);\n\n      for (var i = 0, a = new Array(t); i < t; i++) a[i] = e[i];\n\n      return a;\n    }\n\n    function o(e, t) {\n      for (var i = 0; i < t.length; i++) {\n        var a = t[i];\n        a.enumerable = a.enumerable || !1, a.configurable = !0, \"value\" in a && (a.writable = !0), Object.defineProperty(e, a.key, a);\n      }\n    }\n\n    i.r(t);\n\n    var r = function () {\n      function e(t, i) {\n        if (function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, e), this.inputEl = t, this.options = i || {\n          twelveHour: !0\n        }, i.isFormDate) {\n          var n = document.body;\n          n && !n.style.minHeight && (n.style.minHeight = \"450px\");\n        }\n\n        if (this.yearRange = 20, this.options.minimumYear = i.minimumYear || 1900, i.yearRange && (Array.isArray(i.yearRange) ? (this.yearRange = i.yearRange[1] - i.yearRange[0], this.options.minimumYear = i.yearRange[0], this.options.maximumYear = i.yearRange[1]) : this.yearRange = i.yearRange), this.timeZoneList = this.options.timeZoneList || window.op && window.op.timeZoneList, this._initializeInternalValues(), this.element = this._buildAndAppendPickerMarkup(), this.options.extraClasses) {\n          var o,\n              r = this.options.extraClasses.split(\" \");\n          (o = this.element.classList).add.apply(o, a(r));\n        }\n\n        if (this.guid = \"opt-dt-\" + this.generateGuid(), this.element.classList.add(this.guid), this.options.displayPickerInline ? this.element.classList.add(\"opt-date-time-picker--inline\") : this.positionPicker(), this.options.showTodayButton && this.element.classList.add(\"opt-date-time-picker--show-today\"), this.options.isDateOnly) this.element.classList.add(\"opt-date-time-picker--date-only\");else {\n          var c = this.element.querySelector('.opt-date-time-picker__picker-menu--time-zone .opt-date-time-picker__picker-menu-item[data-val=\"'.concat(this.getValProperty(\"time-zone\"), '\"]'));\n          c && c.classList.add(\"opt-date-time-picker__menu-item--active\");\n        }\n        this.options.twelveHour || this.element.classList.add(\"opt-date-time-picker--24-hour\"), \"china-date\" === this.options.dateFormat && this.centerSelectedDropdownMenuItem(\"year\"), this.datePicker = this._initDatePicker(), this.options.isDateOnly || (this.timePicker = this._initTimePicker(), Array.prototype.slice.call(this.element.querySelectorAll(\".timepicker-tick\")).forEach(function (e) {\n          var t = e.innerText;\n          1 === t.length && (t = \"0\" + t), e.setAttribute(\"data-time-value\", t);\n        }), this._setTimeActiveStates()), this.datePicker.open(), this.options.isDateOnly || this.timePicker.open(), this._bindPickerEvents();\n      }\n\n      var t, i, n;\n      return t = e, n = [{\n        key: \"convertTimeStampAndTimeZoneToDateTimeString\",\n        value: function (t, i, a, n) {\n          var o = new Date(t),\n              r = e.getDateObjectProperty(o, \"month\", !0),\n              c = e.getDateObjectProperty(o, \"day\", !0),\n              s = e.getDateObjectProperty(o, \"year\", !0),\n              l = \"\";\n\n          if (a && \"china-date\" === a.dateFormat ? l += \"\".concat(s, \"/\").concat(r, \"/\").concat(c, \" \") : a && \"euro-date\" === a.dateFormat ? l += \"\".concat(c, \"/\").concat(r, \"/\").concat(s, \" \") : l += \"\".concat(r, \"/\").concat(c, \"/\").concat(s, \" \"), !n) {\n            var d = e.getDateObjectProperty(o, \"hour\", !0, a && a.twelveHour),\n                p = e.getDateObjectProperty(o, \"minute\", !0);\n            l += \"\".concat(d, \":\").concat(p, \" \"), a && a.twelveHour && (l += e.getDateObjectProperty(o, \"time-period\", !0) + \" \"), l += i;\n          }\n\n          return l;\n        }\n      }, {\n        key: \"getDateObjectProperty\",\n        value: function (e, t, i, a) {\n          var n;\n\n          switch (t) {\n            case \"month\":\n              n = e.getMonth(), i && 1 === (n = \"\" + ++n).length && (n = \"0\" + n);\n              break;\n\n            case \"day\":\n              n = e.getDate(), i && 1 === (n = \"\" + n).length && (n = \"0\" + n);\n              break;\n\n            case \"year\":\n              n = e.getFullYear();\n              break;\n\n            case \"hour\":\n              n = e.getHours(), i && (a && (n > 12 ? n -= 12 : 0 === n && (n = 12)), 1 === (n = \"\" + n).length && (n = \"0\" + n));\n              break;\n\n            case \"minute\":\n              n = e.getMinutes(), i && 1 === (n = \"\" + n).length && (n = \"0\" + n);\n              break;\n\n            case \"time-period\":\n              n = e.getHours() < 12 ? \"am\" : \"pm\", i && (n = n.toUpperCase());\n          }\n\n          return n;\n        }\n      }, {\n        key: \"dateTimeFieldClickHandler\",\n        value: function (t) {\n          var i = t.currentTarget,\n              a = i.querySelector(\".opt-date-time-field\");\n\n          if (i.classList.contains(\"opt-date-time__picker--open\")) {\n            i.classList.remove(\"opt-date-time__picker--open\");\n            var n = i.querySelector(\".opt-date-time-field__hidden-field\"),\n                o = !1;\n            t.target.classList.contains(\"opt-date-time__icon--x\") && (a.value = \"\", a.setAttribute(\"data-timeZone\", \"\"), n.value = \"\", o = !0);\n            var r = a.dateTimePicker;\n\n            if (r) {\n              if (!o) {\n                var c = r.getSaveData();\n                a.value = c.dateTimeString, a.setAttribute(\"data-timeZone\", c.timeZone), n.value = c.timestamp / 1e3;\n              }\n\n              r.destroy(), a.dateTimePicker = null;\n            }\n\n            \"default\" === i.getAttribute(\"opt-input-style\") && \"\" === a.value && i.querySelector(\".opt-input__label\").classList.remove(\"active\");\n          } else {\n            var s = e.JSONParse(a.dataset.datepickeroptions),\n                l = i.querySelector(\".opt-date-time-field__hidden-field\").value,\n                d = {\n              dateFormat: \"usa-date\",\n              twelveHour: !0,\n              initialTimeZone: a.getAttribute(\"data-timeZone\") || Intl.DateTimeFormat().resolvedOptions().timeZone,\n              timeZoneList: window.op && window.op.timeZoneList,\n              isDateOnly: s && s.isDateOnly || !1,\n              isFormDate: s && s.isFormDate || !1\n            };\n            window.op && op.dateFormat && op.dateFormat.date_format && (d.dateFormat = op.dateFormat.date_format), window.op && op.dateFormat && op.dateFormat.time_format && \"24-hour\" === op.dateFormat.time_format && (d.twelveHour = !1), l && (d.initialValue = 1e3 * +l), a.dateTimePicker = new e(a, d), i.classList.add(\"opt-date-time__picker--open\"), \"default\" === i.getAttribute(\"opt-input-style\") && i.querySelector(\".opt-input__label\").classList.add(\"active\");\n          }\n        }\n      }, {\n        key: \"JSONParse\",\n        value: function (e) {\n          if (!(\"string\" == typeof e || e instanceof String)) return e;\n\n          try {\n            return JSON.parse(e);\n          } catch (t) {\n            return e;\n          }\n        }\n      }, {\n        key: \"dateTimeFieldSaveHandler\",\n        value: function (e) {\n          var t = e.detail || e.originalEvent.detail,\n              i = e.currentTarget,\n              a = i.querySelector(\".opt-date-time-field\");\n\n          if (i.classList.remove(\"opt-date-time__picker--open\"), /iPad|iPhone|iPod|Android/.test(window.navigator.userAgent) && a.setAttribute(\"type\", \"text\"), a.value = t.dateTimeString, t.timeZone && a.setAttribute(\"data-timeZone\", t.timeZone), t.timestamp) {\n            var n = e.target.dataset.datepickeroptions;\n            if (\"string\" == typeof n || n instanceof String) try {\n              n = JSON.parse(n);\n            } catch (e) {}\n\n            if (n && n.isDateOnly) {\n              var o = new Date(t.timestamp);\n              i.querySelector(\".opt-date-time-field__hidden-field\").value = o.setHours(12, 0, 0, 0) / 1e3;\n            } else i.querySelector(\".opt-date-time-field__hidden-field\").value = t.timestamp / 1e3;\n          }\n\n          a.dateTimePicker = null;\n        }\n      }, {\n        key: \"dateTimeFieldCancelHandler\",\n        value: function (e) {\n          var t = e.currentTarget,\n              i = t.querySelector(\".opt-date-time-field\");\n          t.classList.remove(\"opt-date-time__picker--open\"), i.dateTimePicker = null, \"default\" === t.getAttribute(\"opt-input-style\") && \"\" === i.value && t.querySelector(\".opt-input__label\").classList.remove(\"active\");\n        }\n      }], (i = [{\n        key: \"getDialog\",\n        value: function () {\n          return this.inputEl.closest(\"op-dialog\") || !1;\n        }\n      }, {\n        key: \"positionPicker\",\n        value: function () {\n          var e,\n              t = this.inputEl.getBoundingClientRect(),\n              i = this.element.getBoundingClientRect(),\n              a = this.getDialog();\n          e = a ? a.offsetHeight > document.documentElement.clientHeight ? a.offsetHeight : document.documentElement.clientHeight : document.body.offsetHeight > document.documentElement.clientHeight ? document.body.offsetHeight : document.documentElement.clientHeight;\n          var n = a ? 0 - a.getBoundingClientRect().top : window.scrollY,\n              o = t.top + n + t.height;\n          o + i.height > e && (o = t.top + n - i.height) < 0 && (o = 0);\n          var r = a ? 0 - a.getBoundingClientRect().left : window.scrollX,\n              c = t.left + r;\n          c + i.width > document.body.offsetWidth && (c = t.left + r + t.width - i.width) < 0 && (c = 0), this.element.style.top = o + \"px\", this.element.style.left = c + \"px\";\n        }\n      }, {\n        key: \"save\",\n        value: function () {\n          var t = this.getSaveData();\n          this.options.updateInput && (this.inputEl.value = t.dateTimeString), this.inputEl.dispatchEvent(new CustomEvent(e.SaveEventDispatch, {\n            detail: t,\n            bubbles: !0\n          })), this.destroy();\n        }\n      }, {\n        key: \"getSaveData\",\n        value: function () {\n          var e = this._val.getTime();\n\n          if (!this.options.isDateOnly) {\n            var t = this.getTimeZoneOffsetValue(Intl.DateTimeFormat().resolvedOptions().timeZone),\n                i = this.getTimeZoneOffsetValue(this._timeZone);\n            if (t !== i) e += 60 * (t - i) * 60 * 1e3;\n          }\n\n          var a = {\n            dateFormat: this.options.dateFormat,\n            twelveHour: this.options.twelveHour\n          },\n              n = \"\";\n          this.options.isDateOnly || (n = this.getValProperty(\"time-zone\", !0));\n          var o = {\n            dateTimeString: this.constructor.convertTimeStampAndTimeZoneToDateTimeString(this._val.getTime(), n, a, this.options.isDateOnly),\n            timestamp: e\n          };\n          return this.options.isDateOnly || (o.timeZone = this.getValProperty(\"time-zone\"), o.offset = this._val.getTimezoneOffset()), o;\n        }\n      }, {\n        key: \"destroy\",\n        value: function () {\n          this.element && (this.element.querySelector(\".opt-date-time-picker__control-bar\").removeEventListener(\"click\", this._boundControlBarEvent), this.element.removeEventListener(\"dateTimePickerSelect\", this._boundDateTimePickerEvent), this.element.querySelector(\".opt-date-time-picker__picker-menu--year\").removeEventListener(\"click\", this._boundYearClickEvent), this.element.querySelector(\".opt-date-time-picker__picker-menu--year\").removeEventListener(\"scroll\", this._boundYearScrollEvent), this.options.showTodayButton && this.element.querySelector(\".opt-date-time-picker__button--today\").removeEventListener(\"click\", this._boundTodayClickEvent), this.options.isDateOnly || (this.element.querySelector(\".opt-date-time-picker__picker-menu--time-zone\").removeEventListener(\"click\", this._boundTimeZoneEvent), this.element.querySelector(\".opt-date-time-picker__search-icon\").removeEventListener(\"click\", this._boundTimeZoneSearchClickEvent), this.element.querySelector(\".opt-date-time-picker__search-bar\").removeEventListener(\"input\", this._boundTimeZoneSearchInputEvent)), this.element.querySelector(\".opt-date-time-picker__button--save\").removeEventListener(\"click\", this._boundSaveEvent), this.element.querySelector(\".opt-date-time-picker__button--cancel\").removeEventListener(\"click\", this._boundCancelEvent), this.element.remove()), this.datePicker && this.datePicker.destroy(), this.timePicker && this.timePicker.destroy(), this.element = null, this.inputEl = null, this._val = null, this.options = null, this.timeZoneList = null, this.datePicker = null, this.timePicker = null, this._boundControlBarEvent = null, this._boundDateTimePickerEvent = null, this._boundYearClickEvent = null, this._boundTodayClickEvent = null, this._boundTimeZoneEvent = null, this._boundTimeZoneSearchClickEvent = null, this._boundTimeZoneSearchInputEvent = null, this._boundSaveEvent = null, this._boundCancelEvent = null, this._currentMonthYear = null;\n        }\n      }, {\n        key: \"updateControlBarDisplay\",\n        value: function () {\n          for (var e = this.element.querySelector(\".opt-date-time-picker__control-bar\").querySelectorAll(\".opt-date-time-picker__control\"), t = 0, i = e.length; t < i; t++) {\n            var a = e[t],\n                n = a.getAttribute(\"data-control-type\");\n\n            if (\"month-day\" === n) {\n              var o = a.classList.contains(\"opt-date-time-picker__control--day\") ? \"day\" : \"month\";\n              a.innerText = this.getValProperty(o, !0);\n            } else \"time-period\" === n ? a.setAttribute(\"data-current-time-period\", this.getValProperty(n)) : a.innerText = this.getValProperty(n, !0);\n          }\n        }\n      }, {\n        key: \"changeControl\",\n        value: function (e) {\n          if (\"time-zone\" === e || this.options.isDateOnly || this._clearTimeZoneSearch(), \"time-period\" === e) {\n            var t = this.element.querySelector('[data-control-type=\"time-period\"]'),\n                i = \"am\" === t.getAttribute(\"data-current-time-period\") ? \"pm\" : \"am\";\n            t.setAttribute(\"data-current-time-period\", i);\n\n            var a = this._val.getHours();\n\n            \"am\" === i ? a -= 12 : a += 12, this._val.setHours(a);\n          } else \"hour\" === e ? (this.timePicker.showView(\"hours\"), this.timePicker.resetClock()) : \"minute\" === e && (this.timePicker.showView(\"minutes\"), this.timePicker.resetClock()), this.element.setAttribute(\"data-active-control\", e), \"year\" !== e && \"time-zone\" !== e || this.centerSelectedDropdownMenuItem(e);\n        }\n      }, {\n        key: \"addYearMenuItems\",\n        value: function (e) {\n          var t,\n              i = this.element.querySelector(\".opt-date-time-picker__picker-menu--year\"),\n              a = \"\";\n          if ((t = e ? +i.firstElementChild.getAttribute(\"data-val\") : +i.lastElementChild.getAttribute(\"data-val\")) - this.yearRange < this.options.minimumYear) return {\n            minYear: !0\n          };\n          if (this.options.maximumYear && t + this.yearRange >= this.options.maximumYear) return {\n            maxYear: !0\n          };\n\n          for (var n = 1; n <= this.yearRange; n++) {\n            var o = void 0;\n            e ? a = '<div class=\"opt-date-time-picker__picker-menu-item\" data-val=\"'.concat(o = t + n, '\">').concat(o, \"</div>\\n                                    \").concat(a) : a += '<div class=\"opt-date-time-picker__picker-menu-item\" data-val=\"'.concat(o = t - n, '\">').concat(o, \"</div>\");\n          }\n\n          e ? i.insertAdjacentHTML(\"afterbegin\", a) : i.insertAdjacentHTML(\"beforeend\", a);\n        }\n      }, {\n        key: \"getValProperty\",\n        value: function (e, t) {\n          var i;\n\n          switch (e) {\n            case \"month\":\n            case \"day\":\n            case \"year\":\n            case \"hour\":\n            case \"minute\":\n            case \"time-period\":\n              i = this.constructor.getDateObjectProperty(this._val, e, t, this.options.twelveHour);\n              break;\n\n            case \"time-zone\":\n              i = this._timeZone, t && (i = this.getTimeZoneLabel(i, !0));\n          }\n\n          return i;\n        }\n      }, {\n        key: \"getTimeZoneLabel\",\n        value: function (e, t) {\n          for (var i = \"\", a = 0, n = this.timeZoneList.length; a < n; a++) if (this.timeZoneList[a].value === e) {\n            i = this.timeZoneList[a].label;\n            break;\n          }\n\n          if (i && t) {\n            var o = i.indexOf(\")\");\n            -1 !== o && (i = i.substring(o + 2));\n          }\n\n          return i;\n        }\n      }, {\n        key: \"getTimeZoneOffsetValue\",\n        value: function (e) {\n          for (var t = \"\", i = 0, a = this.timeZoneList.length; i < a; i++) if (this.timeZoneList[i].value === e) {\n            t = this.timeZoneList[i].offset;\n            break;\n          }\n\n          return t;\n        }\n      }, {\n        key: \"generateGuid\",\n        value: function () {\n          var e = function () {\n            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);\n          };\n\n          return e() + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + e() + e();\n        }\n      }, {\n        key: \"centerSelectedDropdownMenuItem\",\n        value: function (e) {\n          var t = this.element.querySelector(\".opt-date-time-picker__picker-menu--\".concat(e)),\n              i = t.querySelector(\".opt-date-time-picker__menu-item--active\");\n\n          if (i) {\n            var a = Array.prototype.slice.call(t.querySelectorAll(\".opt-date-time-picker__picker-menu-item\")).indexOf(i) * i.scrollHeight - (t.offsetHeight / 2 - i.scrollHeight / 2),\n                n = t.scrollHeight - t.offsetHeight;\n            t.scrollTop = a < 0 ? 0 : a > n ? n : a;\n          }\n        }\n      }, {\n        key: \"setCalendarDots\",\n        value: function (e, t) {\n          var i = this;\n\n          if (e) {\n            if (!this._currentMonthYear || this._currentMonthYear.month !== t.month || this._currentMonthYear.year !== t.year) return;\n            this._calendarDotDays = e;\n          }\n\n          this._calendarDotDays.forEach(function (e) {\n            var t = i.element.querySelector(\".opt-date-time-picker__picker--date\").querySelector('[data-day=\"'.concat(e, '\"]'));\n            t && t.classList.add(\"opt-date-time-picker__day--dot\");\n          });\n        }\n      }, {\n        key: \"updateCalendarDate\",\n        value: function (e) {\n          this.options.isDateOnly && e instanceof Date && (this._val.setFullYear(e.getFullYear()), this._val.setMonth(e.getMonth()), this._val.setDate(e.getDate()), this.updateControlBarDisplay(), this._silenceSelectionEvents = !0, this.datePicker.setDate(e), this._silenceSelectionEvents = !1);\n        }\n      }, {\n        key: \"_buildAndAppendPickerMarkup\",\n        value: function () {\n          var e = document.createElement(\"template\"),\n              t = this._generateDateControlMarkup(),\n              i = this._generateYearMarkup(),\n              a = \"china-date\" === this.options.dateFormat ? \"year\" : \"month-day\",\n              n = \"\",\n              o = \"\";\n\n          if (!this.options.isDateOnly) {\n            n = '<div class=\"opt-date-time-picker__control-section opt-date-time-picker__control-section--time\">\\n                <div class=\"opt-date-time-picker__control-group\" data-control-type=\"hour\">\\n                    <div class=\"opt-date-time-picker__control\" data-control-type=\"hour\">'.concat(this.getValProperty(\"hour\", !0), '</div>\\n                    <div class=\"opt-date-time-picker__control-divider\" data-control-type=\"hour\">:</div>\\n                </div>\\n                <div class=\"opt-date-time-picker__control\" data-control-type=\"minute\">').concat(this.getValProperty(\"minute\", !0), '</div>\\n                <div class=\"opt-date-time-picker__control\" data-control-type=\"time-period\" data-current-time-period=\"').concat(this.getValProperty(\"time-period\"), '\">\\n                    <span data-time-period-val=\"am\">AM</span><span data-time-period-val=\"pm\">PM</span>\\n                </div>\\n            </div>\\n            <div class=\"opt-date-time-picker__control-section opt-date-time-picker__control-section--time-zone\">\\n                <div class=\"opt-date-time-picker__control\" data-control-type=\"time-zone\">').concat(this.getValProperty(\"time-zone\", !0), \"</div>\\n            </div>\");\n\n            var r = this._generateTimeZoneMarkup();\n\n            o = '<div class=\"opt-date-time-picker__picker opt-date-time-picker__picker--time-zone\" data-picker-menu-type=\"time-zone\">\\n                <div class=\"opt-date-time-picker__picker-header-section\">\\n                    <div class=\"opt-date-time-picker__title\">TIME ZONE</div>\\n                    <div class=\"opt-date-time-picker__search\">\\n                        <div class=\"opt-date-time-picker__search-bar-animation-container\">\\n                            <div class=\"opt-date-time-picker__search-bar-container\">\\n                                <input type=\"text\" placeholder=\"Search timezone...\" class=\"browser-default opt-date-time-picker__search-bar\"/>\\n                                <img src=\"https://app.ontraport.com/images/close_x.png\" class=\"opt-date-time-picker__search-clear\"/>\\n                            </div>\\n                        </div>\\n                        <img src=\"https://app.ontraport.com/images/search_black.png\" class=\"opt-date-time-picker__search-icon opt-date-time-picker__search-icon--open\"/>\\n                        <img src=\"https://app.ontraport.com/images/search_grey.png\" class=\"opt-date-time-picker__search-icon opt-date-time-picker__search-icon--closed\"/>\\n                    </div>\\n                </div>\\n                <div class=\"opt-date-time-picker__picker-menu opt-date-time-picker__picker-menu--time-zone\">\\n                    '.concat(r, \"\\n                </div>\\n            </div>\");\n          }\n\n          var c = \"\";\n          this.options.showTodayButton && (c = '<button class=\"opt-date-time-picker__button--today\">Today</button>'), e.innerHTML = '<div class=\"opt-date-time-picker\" data-active-control=\"'.concat(a, '\">\\n            <div class=\"opt-date-time-picker__control-bar\">\\n                <div class=\"opt-date-time-picker__control-section opt-date-time-picker__control-section--date\">\\n                    ').concat(t, \"\\n                </div>\\n                \").concat(n, \"\\n                \").concat(c, '\\n            </div>\\n            <div class=\"opt-date-time-picker__picker-section\">\\n                <div class=\"opt-date-time-picker__materialize-section\">\\n                    <div class=\"opt-date-time-picker__title opt-date-time-picker__title--hour\">HOUR</div>\\n                    <div class=\"opt-date-time-picker__title opt-date-time-picker__title--minute\">MINUTE</div>\\n                    <div class=\"opt-date-time-picker__picker opt-date-time-picker__picker--date opt-materialize-namespace\"></div>\\n                    <div class=\"opt-date-time-picker__picker opt-date-time-picker__picker--time\"></div>\\n                    \\x3c!-- These inputs are hidden don\\'t actually do anything, they are just used to initialize the pickers --\\x3e\\n                    <input class=\"opt-date-time-picker__input--date\">\\n                    <input class=\"opt-date-time-picker__input--time\">\\n                </div>\\n                <div class=\"opt-date-time-picker__picker opt-date-time-picker__picker--year\" data-picker-menu-type=\"year\">\\n                    <div class=\"opt-date-time-picker__title\">YEAR</div>\\n                    <div class=\"opt-date-time-picker__picker-menu opt-date-time-picker__picker-menu--year\">\\n                        ').concat(i, \"\\n                    </div>\\n                </div>\\n                \").concat(o, '\\n            </div>\\n            <div class=\"opt-date-time-picker__buttons\">\\n                <div class=\"opt-date-time-picker__button opt-date-time-picker__button--cancel\">CANCEL</div>\\n                <div class=\"opt-date-time-picker__button opt-date-time-picker__button--save\">SAVE</div>\\n            </div>\\n        </div>');\n          var s = e.content.cloneNode(!0),\n              l = s.children[0];\n          if (this.options.displayPickerInline) this.inputEl.append(s);else {\n            var d = this.getDialog();\n            d ? d.querySelector(\".op-dialog__content\").append(s) : document.body.append(s);\n          }\n          return l;\n        }\n      }, {\n        key: \"_generateDateControlMarkup\",\n        value: function () {\n          var e = '<div class=\"opt-date-time-picker__control opt-date-time-picker__control--month\" data-control-type=\"month-day\">'.concat(this.getValProperty(\"month\", !0), \"</div>\"),\n              t = '<div class=\"opt-date-time-picker__control-divider\" data-control-type=\"month-day\">/</div>',\n              i = '<div class=\"opt-date-time-picker__control opt-date-time-picker__control--day\" data-control-type=\"month-day\">'.concat(this.getValProperty(\"day\", !0), \"</div>\"),\n              a = '<div class=\"opt-date-time-picker__control-divider\" data-control-type=\"year\">/</div>',\n              n = '<div class=\"opt-date-time-picker__control\" data-control-type=\"year\">'.concat(this.getValProperty(\"year\"), \"</div>\");\n          return \"euro-date\" === this.options.dateFormat ? '<div class=\"opt-date-time-picker__control-group\" data-control-type=\"month-day\">\\n                                        '.concat(i).concat(t).concat(e, '\\n                                    </div>\\n                                    <div class=\"opt-date-time-picker__control-group\" data-control-type=\"year\">\\n                                        ').concat(a).concat(n, \"\\n                                    </div>\") : \"china-date\" === this.options.dateFormat ? '<div class=\"opt-date-time-picker__control-group\" data-control-type=\"year\">\\n                                        '.concat(n).concat(a, '\\n                                    </div>\\n                                    <div class=\"opt-date-time-picker__control-group\" data-control-type=\"month-day\">\\n                                        ').concat(e).concat(t).concat(i, \"\\n                                    </div>\\n                                    \") : '<div class=\"opt-date-time-picker__control-group\" data-control-type=\"month-day\">\\n                                        '.concat(e).concat(t).concat(i, '\\n                                    </div>\\n                                    <div class=\"opt-date-time-picker__control-group\" data-control-type=\"year\">\\n                                        ').concat(a).concat(n, \"\\n                                    </div>\");\n        }\n      }, {\n        key: \"_generateYearMarkup\",\n        value: function () {\n          for (var e = this.getValProperty(\"year\"), t = '<div class=\"opt-date-time-picker__picker-menu-item opt-date-time-picker__menu-item--active\" data-val=\"'.concat(e, '\">').concat(e, \"</div>\"), i = 1; i <= this.yearRange; i++) t = '<div class=\"opt-date-time-picker__picker-menu-item\" data-val=\"'.concat(e + i, '\">').concat(e + i, \"</div>\\n                                \").concat(t, '\\n                                <div class=\"opt-date-time-picker__picker-menu-item\" data-val=\"').concat(e - i, '\">').concat(e - i, \"</div>\");\n\n          return t;\n        }\n      }, {\n        key: \"_generateTimeZoneMarkup\",\n        value: function () {\n          for (var e = \"\", t = 0, i = this.timeZoneList.length; t < i; t++) {\n            var a = this.timeZoneList[t];\n            e += '<div class=\"opt-date-time-picker__picker-menu-item\" data-val=\"'.concat(a.value, '\">').concat(a.label, \"</div>\");\n          }\n\n          return e;\n        }\n      }, {\n        key: \"_initDatePicker\",\n        value: function () {\n          this.options.addCalendarDots && (this._currentMonthYear = {\n            month: this._val.getMonth(),\n            year: this._val.getFullYear()\n          });\n          var e = Object.assign({\n            format: \"mm/dd/yyyy\",\n            defaultDate: this._val,\n            setDefaultDate: !0,\n            container: this.element.querySelector(\".opt-date-time-picker__picker--date\"),\n            i18n: {\n              done: \"Save\",\n              weekdaysAbbrev: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\n            },\n            onOpen: function () {\n              this.modal.open = function () {}, this.modal.close = function () {}, this.modal.$el.css(\"display\", \"block\");\n            },\n            onClose: function () {\n              this.modal.$el.css(\"display\", \"\");\n            },\n            onDraw: function () {\n              if (this.options.addCalendarDots && this.datePicker && this._currentMonthYear) {\n                var e = this.datePicker.calendars[0];\n                this._currentMonthYear && e.month === this._currentMonthYear.month && e.year === this._currentMonthYear.year ? this._calendarDotDays && this.setCalendarDots() : (this._currentMonthYear = Object.assign({}, e), this.element.dispatchEvent(new CustomEvent(\"dateTimeMonthChanged\", {\n                  detail: this._currentMonthYear,\n                  bubbles: !0\n                })));\n              }\n            }.bind(this),\n            onSelect: function (e) {\n              this._silenceSelectionEvents || this.element.dispatchEvent(new CustomEvent(\"dateTimePickerSelect\", {\n                detail: {\n                  selectType: \"date\",\n                  date: e\n                },\n                bubbles: !0\n              }));\n            }.bind(this)\n          }, this.options);\n          return M.Datepicker.init(this.element.querySelector(\".opt-date-time-picker__input--date\"), e);\n        }\n      }, {\n        key: \"_initTimePicker\",\n        value: function () {\n          var e = Object.assign({\n            i18n: {\n              cancel: \"Cancel\",\n              done: \"Save\"\n            },\n            container: \".\".concat(this.guid, \" .opt-date-time-picker__picker--time\"),\n            twelveHour: !0,\n            defaultTime: this.getValProperty(\"hour\", !0) + \":\" + this.getValProperty(\"minute\", !0),\n            duration: 2,\n            onSelect: function (e, t) {\n              var i = this.el.closest(\".opt-date-time-picker\");\n              i && \"hour\" === i.getAttribute(\"data-active-control\") && i.setAttribute(\"data-active-control\", \"minute\"), i.dispatchEvent(new CustomEvent(\"dateTimePickerSelect\", {\n                detail: {\n                  selectType: \"time\",\n                  hour: e,\n                  minute: t\n                },\n                bubbles: !0\n              }));\n            }\n          }, this.options),\n              t = M.Timepicker.init(this.element.querySelector(\".opt-date-time-picker__input--time\"), e);\n          return t.modal.open = function () {}, t.modal.close = function () {}, t.modal.$el.css(\"display\", \"block\"), t;\n        }\n      }, {\n        key: \"_initializeInternalValues\",\n        value: function () {\n          if (this.options.initialTimeZone ? this._timeZone = this.options.initialTimeZone : this._timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone, this.options.initialValue) {\n            if (!this.options.isDateOnly) {\n              var e = this.getTimeZoneOffsetValue(Intl.DateTimeFormat().resolvedOptions().timeZone),\n                  t = this.getTimeZoneOffsetValue(this._timeZone);\n\n              if (e !== t) {\n                var i = t - e;\n                this.options.initialValue = this.options.initialValue + 60 * i * 60 * 1e3;\n              }\n            }\n\n            this._val = new Date(this.options.initialValue);\n          } else this._val = new Date();\n\n          this._val.setSeconds(0), this._val.setMilliseconds(0);\n        }\n      }, {\n        key: \"_clearTimeZoneSearch\",\n        value: function () {\n          var e = this.element.querySelector(\".opt-date-time-picker__search\");\n          e.classList.contains(\"opt-date-time-picker__search--open\") && (this.element.querySelector(\".opt-date-time-picker__search-bar\").value = \"\", e.classList.remove(\"opt-date-time-picker__search--open\"), Array.prototype.slice.call(this.element.querySelectorAll(\".opt-date-time-picker__picker-menu--time-zone .opt-date-time-picker__picker-menu-item.opt-date-time-picker__picker-menu-item--hidden\")).forEach(function (e) {\n            e.classList.remove(\"opt-date-time-picker__picker-menu-item--hidden\");\n          }));\n        }\n      }, {\n        key: \"_setTimeActiveStates\",\n        value: function () {\n          Array.prototype.slice.call(this.element.querySelectorAll(\".timepicker-tick.opt-time--active\")).forEach(function (e) {\n            e.classList.remove(\"opt-time--active\");\n          });\n          var e = this.getValProperty(\"hour\", !0),\n              t = this.getValProperty(\"minute\", !0),\n              i = this.element.querySelector('.timepicker-hours .timepicker-tick[data-time-value=\"'.concat(e, '\"]')),\n              a = this.element.querySelector('.timepicker-minutes .timepicker-tick[data-time-value=\"'.concat(t, '\"]'));\n          i && i.classList.add(\"opt-time--active\"), a && a.classList.add(\"opt-time--active\");\n        }\n      }, {\n        key: \"_updateSelectedYear\",\n        value: function (e) {\n          var t = this.element.querySelector(\".opt-date-time-picker__picker-menu--year\"),\n              i = t.querySelector(\".opt-date-time-picker__menu-item--active\");\n          i && i.classList.remove(\"opt-date-time-picker__menu-item--active\");\n          var a = t.querySelector('[data-val=\"' + e + '\"]');\n          a && a.classList.add(\"opt-date-time-picker__menu-item--active\");\n        }\n      }, {\n        key: \"_bindPickerEvents\",\n        value: function () {\n          this._boundControlBarEvent = this._controlBarClickHandler.bind(this), this._boundDateTimePickerEvent = this._dateTimePickerSelectHandler.bind(this), this._boundYearClickEvent = this._yearMenuClickHandler.bind(this), this._boundYearScrollEvent = this._yearMenuScrollHandler.bind(this), this.options.showTodayButton && (this._boundTodayClickEvent = this._todayClickHandler.bind(this)), this.options.isDateOnly || (this._boundTimeZoneEvent = this._timeZoneMenuClickHandler.bind(this), this._boundTimeZoneSearchClickEvent = this._timeZoneSearchClickHandler.bind(this), this._boundTimeZoneSearchInputEvent = this._timeZoneSearchInputHandler.bind(this)), this._boundSaveEvent = this._saveClickHandler.bind(this), this._boundCancelEvent = this._cancelClickHandler.bind(this), this.element.querySelector(\".opt-date-time-picker__control-bar\").addEventListener(\"click\", this._boundControlBarEvent), this.element.addEventListener(\"dateTimePickerSelect\", this._boundDateTimePickerEvent), this.element.querySelector(\".opt-date-time-picker__picker-menu--year\").addEventListener(\"click\", this._boundYearClickEvent), this.element.querySelector(\".opt-date-time-picker__picker-menu--year\").addEventListener(\"scroll\", this._boundYearScrollEvent), this.options.showTodayButton && this.element.querySelector(\".opt-date-time-picker__button--today\").addEventListener(\"click\", this._boundTodayClickEvent), this.options.isDateOnly || (this.element.querySelector(\".opt-date-time-picker__picker-menu--time-zone\").addEventListener(\"click\", this._boundTimeZoneEvent), this.element.querySelector(\".opt-date-time-picker__search\").addEventListener(\"click\", this._boundTimeZoneSearchClickEvent), this.element.querySelector(\".opt-date-time-picker__search-bar\").addEventListener(\"input\", this._boundTimeZoneSearchInputEvent)), this.element.querySelector(\".opt-date-time-picker__button--save\").addEventListener(\"click\", this._boundSaveEvent), this.element.querySelector(\".opt-date-time-picker__button--cancel\").addEventListener(\"click\", this._boundCancelEvent);\n        }\n      }, {\n        key: \"_controlBarClickHandler\",\n        value: function (e) {\n          e.target.hasAttribute(\"data-control-type\") && this.changeControl(e.target.getAttribute(\"data-control-type\"));\n        }\n      }, {\n        key: \"_dateTimePickerSelectHandler\",\n        value: function (e) {\n          var t = e.detail;\n\n          if (\"date\" === t.selectType) {\n            var i = t.date.getFullYear();\n            this._val.setFullYear(i), this._val.setDate(1), this._val.setMonth(t.date.getMonth()), this._val.setDate(t.date.getDate()), this._updateSelectedYear(i), this.options.disableAutoControlChange || (\"china-date\" !== this.options.dateFormat || this.options.isDateOnly ? \"china-date\" !== this.options.dateFormat && this.changeControl(\"year\") : this.changeControl(\"hour\"));\n          } else if (\"time\" === t.selectType) {\n            if (this.options.twelveHour) {\n              var a = this.getValProperty(\"time-period\");\n              \"am\" === a && 12 === t.hour ? t.hour = 0 : \"pm\" === a && 12 !== t.hour && (t.hour += 12);\n            }\n\n            this._val.setHours(t.hour, t.minute, 0, 0), this._setTimeActiveStates();\n          }\n\n          this.updateControlBarDisplay(), this.options.isDateOnly && \"china-date\" === this.options.dateFormat && this.save();\n        }\n      }, {\n        key: \"_yearMenuClickHandler\",\n        value: function (e) {\n          if (e.target.classList.contains(\"opt-date-time-picker__picker-menu-item\")) {\n            var t = +e.target.getAttribute(\"data-val\");\n            this._val.setFullYear(t), this._silenceSelectionEvents = !0, this.datePicker.setDate(this._val), this._silenceSelectionEvents = !1, this._updateSelectedYear(t), this.updateControlBarDisplay(), this.options.disableAutoControlChange || (\"china-date\" === this.options.dateFormat ? this.changeControl(\"month-day\") : this.options.isDateOnly || this.changeControl(\"hour\")), this.element.dispatchEvent(new CustomEvent(\"dateTimePickerYearSelect\", {\n              detail: {\n                selectType: \"year\",\n                date: this._val\n              },\n              bubbles: !0\n            })), this.options.isDateOnly && \"china-date\" !== this.options.dateFormat && this.save();\n          }\n        }\n      }, {\n        key: \"_yearMenuScrollHandler\",\n        value: function (e) {\n          if (0 === e.target.scrollTop) {\n            var t = this.addYearMenuItems(!0);\n            if (t && t.maxYear) return;\n            var i = e.target.firstElementChild.scrollHeight;\n            e.target.scrollTop = i * this.yearRange;\n          } else e.target.scrollTop + e.target.offsetHeight > e.target.scrollHeight - 5 && this.addYearMenuItems();\n        }\n      }, {\n        key: \"_todayClickHandler\",\n        value: function (e) {\n          var t = new Date(),\n              i = t.getFullYear();\n          this._val.setDate(t.getDate()), this._val.setMonth(t.getMonth()), this._val.setFullYear(i), this._updateSelectedYear(i), this.datePicker.setDate(this._val);\n        }\n      }, {\n        key: \"_timeZoneMenuClickHandler\",\n        value: function (e) {\n          if (e.target.classList.contains(\"opt-date-time-picker__picker-menu-item\")) {\n            this._timeZone = e.target.getAttribute(\"data-val\");\n            var t = e.target.closest(\".opt-date-time-picker__picker-menu--time-zone\").querySelector(\".opt-date-time-picker__menu-item--active\");\n            t && t.classList.remove(\"opt-date-time-picker__menu-item--active\"), e.target.classList.add(\"opt-date-time-picker__menu-item--active\"), this.updateControlBarDisplay();\n          }\n        }\n      }, {\n        key: \"_timeZoneSearchClickHandler\",\n        value: function (e) {\n          e.target.classList.contains(\"opt-date-time-picker__search-icon--closed\") ? (e.currentTarget.classList.add(\"opt-date-time-picker__search--open\"), e.currentTarget.querySelector(\".opt-date-time-picker__search-bar\").focus()) : e.target.classList.contains(\"opt-date-time-picker__search-clear\") && (this._clearTimeZoneSearch(), this.centerSelectedDropdownMenuItem(\"time-zone\"));\n        }\n      }, {\n        key: \"_timeZoneSearchInputHandler\",\n        value: function (e) {\n          var t = e.target.value;\n          Array.prototype.slice.call(this.element.querySelectorAll(\".opt-date-time-picker__picker-menu--time-zone .opt-date-time-picker__picker-menu-item\")).forEach(function (e) {\n            e.innerText.toLowerCase().includes(t.toLowerCase()) ? e.classList.remove(\"opt-date-time-picker__picker-menu-item--hidden\") : e.classList.add(\"opt-date-time-picker__picker-menu-item--hidden\");\n          });\n        }\n      }, {\n        key: \"_saveClickHandler\",\n        value: function (e) {\n          this.save();\n        }\n      }, {\n        key: \"_cancelClickHandler\",\n        value: function (t) {\n          this.inputEl.dispatchEvent(new CustomEvent(e.CancelEventDispatch, {\n            bubbles: !0\n          })), this.destroy();\n        }\n      }]) && o(t.prototype, i), n && o(t, n), e;\n    }();\n\n    r.SaveEventDispatch = \"dateTimePickerSave\", r.CancelEventDispatch = \"dateTimePickerCancel\", t.default = r;\n  }]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt-assets.webpack.js":
/*!*****************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt-assets.webpack.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("if (window.OptDateTimePicker === undefined) {\n  //optassets.js\n  //These are all the files that get built into optassets.js. Note we are pulling  materialize.js in here and defining it as global objects.\n  //We moved anime.js out of materialize.js to get materialize.js fields working on mobile ios chrome.\n  //leaving jquery out for the time being moonrayform.paymentplandisplay.js depends on jQuery but must be included before ontraport-order-summary.js so until we move\n  //the paymentplan js into the webpack build jquery stays out. Dont forget to update the externaljquery option in webpack.opt-assets.config.js\n  //$ = jQuery = window.$ = window.jQuery = require( './opt_boilerplates/v3/jquery-3.2.1.js' );\n  //IE 11 polyfills, the babel poly fill is way bigger so we maintain our own polyfills.\n  __webpack_require__(/*! ./opt_boilerplates/v3/polyfills.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/polyfills.js\"); // Opt assets JavaScript\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/jQueryUiWidget.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/jQueryUiWidget.js\"); // Form conditions live in a legacy folder but are hosted at forms.ontraport.com, @todo move these to central location so we can include in the opages build. This gets reference by opt.materialize.js so it must come first\n\n\n  __webpack_require__(/*! ../../../../legacy/include/formEditor/jquery.jb.formconditions.js */ \"./legacy/include/formEditor/jquery.jb.formconditions.js\"); //anime.js This gets included outside the build because it breaks ios chrome and IE 11\n  //anime = window.anime =  require( './elements_v3/common/materialize-1-dev/js/anime.js');\n\n\n  const OptDateTimePicker = __webpack_require__(/*! ./libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.js */ \"./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.js\");\n\n  __webpack_require__(/*! ./libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.css */ \"./www/js-3.2.2/ontraport/opt_assets/libraries/opt_date_time_picker/dist/opt_date_time_picker_lib.css\");\n\n  if (!window.M) {\n    // This is a modified build. See mateialize-1-dev/Gruntfile.js to see whats included. Also not that we had to make some custom changes to materialize-1-dev/js/global.js to accomodate moving anime js\n    M = window.M = __webpack_require__(/*! ./elements_v3/common/materialize-1-dev/dist/js/materialize.js */ \"./www/js-3.2.2/ontraport/opt_assets/elements_v3/common/materialize-1-dev/dist/js/materialize.js\");\n  } // This is only required if there's a slideshow present\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/opt.materialize.slideshowdependancies.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.slideshowdependancies.js\"); // Js encryption for spam blocking\n\n\n  desExport = window.desExport = __webpack_require__(/*! ./opt_boilerplates/v3/des.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/des.js\");\n  des = window.des = window.desExport.des;\n  des_createKeys = window.des_createKeys = window.desExport.des_createKeys;\n  stringToHex = window.stringToHex = window.desExport.stringToHex;\n  hexToString = window.hexToString = window.desExport.hexToString;\n  XD = window.XD = __webpack_require__(/*! ./opt_boilerplates/v3/postmessage.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/postmessage.js\"); // Opt enhancements to materialize\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/opt.materialize.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.js\"); // Common functionality\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/opt.common.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.common.js\"); // Page initialization via js, we need this so we can build global block gradients in the wild.\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/opt.init.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.init.js\"); // Helpers\n\n\n  __webpack_require__(/*! ./blocks/common/jQueryCloneVal/jquery-cloneVal.js */ \"./www/js-3.2.2/ontraport/opt_assets/blocks/common/jQueryCloneVal/jquery-cloneVal.js\"); // UiLocker to lock the page during form submission\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/uiLocker.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/uiLocker.js\"); // Form validation, this is for preview.\n\n\n  __webpack_require__(/*! ./opt_boilerplates/v3/validator.js */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/validator.js\"); // Globalize god knows what\n\n\n  __webpack_require__(/*! ../../globalize/globalize.js */ \"./www/js-3.2.2/globalize/globalize.js\");\n\n  window.OptDateTimePicker = OptDateTimePicker;\n  module.exports.OptDateTimePicker = OptDateTimePicker;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvb3B0LWFzc2V0cy53ZWJwYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vd3d3L2pzLTMuMi4yL29udHJhcG9ydC9vcHRfYXNzZXRzL29wdC1hc3NldHMud2VicGFjay5qcz83Njk2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vb3B0YXNzZXRzLmpzXG4vL1RoZXNlIGFyZSBhbGwgdGhlIGZpbGVzIHRoYXQgZ2V0IGJ1aWx0IGludG8gb3B0YXNzZXRzLmpzLiBOb3RlIHdlIGFyZSBwdWxsaW5nICBtYXRlcmlhbGl6ZS5qcyBpbiBoZXJlIGFuZCBkZWZpbmluZyBpdCBhcyBnbG9iYWwgb2JqZWN0cy5cbi8vV2UgbW92ZWQgYW5pbWUuanMgb3V0IG9mIG1hdGVyaWFsaXplLmpzIHRvIGdldCBtYXRlcmlhbGl6ZS5qcyBmaWVsZHMgd29ya2luZyBvbiBtb2JpbGUgaW9zIGNocm9tZS5cblxuLy9sZWF2aW5nIGpxdWVyeSBvdXQgZm9yIHRoZSB0aW1lIGJlaW5nIG1vb25yYXlmb3JtLnBheW1lbnRwbGFuZGlzcGxheS5qcyBkZXBlbmRzIG9uIGpRdWVyeSBidXQgbXVzdCBiZSBpbmNsdWRlZCBiZWZvcmUgb250cmFwb3J0LW9yZGVyLXN1bW1hcnkuanMgc28gdW50aWwgd2UgbW92ZVxuLy90aGUgcGF5bWVudHBsYW4ganMgaW50byB0aGUgd2VicGFjayBidWlsZCBqcXVlcnkgc3RheXMgb3V0LiBEb250IGZvcmdldCB0byB1cGRhdGUgdGhlIGV4dGVybmFsanF1ZXJ5IG9wdGlvbiBpbiB3ZWJwYWNrLm9wdC1hc3NldHMuY29uZmlnLmpzXG4vLyQgPSBqUXVlcnkgPSB3aW5kb3cuJCA9IHdpbmRvdy5qUXVlcnkgPSByZXF1aXJlKCAnLi9vcHRfYm9pbGVycGxhdGVzL3YzL2pxdWVyeS0zLjIuMS5qcycgKTtcblxuLy9JRSAxMSBwb2x5ZmlsbHMsIHRoZSBiYWJlbCBwb2x5IGZpbGwgaXMgd2F5IGJpZ2dlciBzbyB3ZSBtYWludGFpbiBvdXIgb3duIHBvbHlmaWxscy5cbnJlcXVpcmUoICcuL29wdF9ib2lsZXJwbGF0ZXMvdjMvcG9seWZpbGxzLmpzJyApO1xuXG4vLyBPcHQgYXNzZXRzIEphdmFTY3JpcHRcblxucmVxdWlyZSggJy4vb3B0X2JvaWxlcnBsYXRlcy92My9qUXVlcnlVaVdpZGdldC5qcycgKTtcblxuLy8gRm9ybSBjb25kaXRpb25zIGxpdmUgaW4gYSBsZWdhY3kgZm9sZGVyIGJ1dCBhcmUgaG9zdGVkIGF0IGZvcm1zLm9udHJhcG9ydC5jb20sIEB0b2RvIG1vdmUgdGhlc2UgdG8gY2VudHJhbCBsb2NhdGlvbiBzbyB3ZSBjYW4gaW5jbHVkZSBpbiB0aGUgb3BhZ2VzIGJ1aWxkLiBUaGlzIGdldHMgcmVmZXJlbmNlIGJ5IG9wdC5tYXRlcmlhbGl6ZS5qcyBzbyBpdCBtdXN0IGNvbWUgZmlyc3RcbnJlcXVpcmUoICcuLi8uLi8uLi8uLi9sZWdhY3kvaW5jbHVkZS9mb3JtRWRpdG9yL2pxdWVyeS5qYi5mb3JtY29uZGl0aW9ucy5qcycgKTtcblxuLy9hbmltZS5qcyBUaGlzIGdldHMgaW5jbHVkZWQgb3V0c2lkZSB0aGUgYnVpbGQgYmVjYXVzZSBpdCBicmVha3MgaW9zIGNocm9tZSBhbmQgSUUgMTFcbi8vYW5pbWUgPSB3aW5kb3cuYW5pbWUgPSAgcmVxdWlyZSggJy4vZWxlbWVudHNfdjMvY29tbW9uL21hdGVyaWFsaXplLTEtZGV2L2pzL2FuaW1lLmpzJyk7XG5cbmNvbnN0IE9wdERhdGVUaW1lUGlja2VyID0gcmVxdWlyZSgnLi9saWJyYXJpZXMvb3B0X2RhdGVfdGltZV9waWNrZXIvZGlzdC9vcHRfZGF0ZV90aW1lX3BpY2tlcl9saWIuanMnKTtcblxucmVxdWlyZSgnLi9saWJyYXJpZXMvb3B0X2RhdGVfdGltZV9waWNrZXIvZGlzdC9vcHRfZGF0ZV90aW1lX3BpY2tlcl9saWIuY3NzJyk7XG5cbmlmKCAhd2luZG93Lk0gKXtcbi8vIFRoaXMgaXMgYSBtb2RpZmllZCBidWlsZC4gU2VlIG1hdGVpYWxpemUtMS1kZXYvR3J1bnRmaWxlLmpzIHRvIHNlZSB3aGF0cyBpbmNsdWRlZC4gQWxzbyBub3QgdGhhdCB3ZSBoYWQgdG8gbWFrZSBzb21lIGN1c3RvbSBjaGFuZ2VzIHRvIG1hdGVyaWFsaXplLTEtZGV2L2pzL2dsb2JhbC5qcyB0byBhY2NvbW9kYXRlIG1vdmluZyBhbmltZSBqc1xuTSA9IHdpbmRvdy5NID0gcmVxdWlyZSggJy4vZWxlbWVudHNfdjMvY29tbW9uL21hdGVyaWFsaXplLTEtZGV2L2Rpc3QvanMvbWF0ZXJpYWxpemUuanMnICk7XG59XG5cbi8vIFRoaXMgaXMgb25seSByZXF1aXJlZCBpZiB0aGVyZSdzIGEgc2xpZGVzaG93IHByZXNlbnRcbnJlcXVpcmUoICcuL29wdF9ib2lsZXJwbGF0ZXMvdjMvb3B0Lm1hdGVyaWFsaXplLnNsaWRlc2hvd2RlcGVuZGFuY2llcy5qcycgKTtcblxuLy8gSnMgZW5jcnlwdGlvbiBmb3Igc3BhbSBibG9ja2luZ1xuZGVzRXhwb3J0ID0gd2luZG93LmRlc0V4cG9ydCA9IHJlcXVpcmUgKCAnLi9vcHRfYm9pbGVycGxhdGVzL3YzL2Rlcy5qcycgKTtcbmRlcyA9IHdpbmRvdy5kZXMgPSB3aW5kb3cuZGVzRXhwb3J0LmRlcztcbmRlc19jcmVhdGVLZXlzID0gd2luZG93LmRlc19jcmVhdGVLZXlzID0gd2luZG93LmRlc0V4cG9ydC5kZXNfY3JlYXRlS2V5cztcbnN0cmluZ1RvSGV4ID0gd2luZG93LnN0cmluZ1RvSGV4ID0gd2luZG93LmRlc0V4cG9ydC5zdHJpbmdUb0hleDtcbmhleFRvU3RyaW5nID13aW5kb3cuaGV4VG9TdHJpbmcgPSB3aW5kb3cuZGVzRXhwb3J0LmhleFRvU3RyaW5nO1xuXG5YRCA9IHdpbmRvdy5YRCA9IHJlcXVpcmUgKCAnLi9vcHRfYm9pbGVycGxhdGVzL3YzL3Bvc3RtZXNzYWdlLmpzJyApO1xuXG4vLyBPcHQgZW5oYW5jZW1lbnRzIHRvIG1hdGVyaWFsaXplXG5cbnJlcXVpcmUoICcuL29wdF9ib2lsZXJwbGF0ZXMvdjMvb3B0Lm1hdGVyaWFsaXplLmpzJyApO1xuXG4vLyBDb21tb24gZnVuY3Rpb25hbGl0eVxucmVxdWlyZSggJy4vb3B0X2JvaWxlcnBsYXRlcy92My9vcHQuY29tbW9uLmpzJyApO1xuXG4vLyBQYWdlIGluaXRpYWxpemF0aW9uIHZpYSBqcywgd2UgbmVlZCB0aGlzIHNvIHdlIGNhbiBidWlsZCBnbG9iYWwgYmxvY2sgZ3JhZGllbnRzIGluIHRoZSB3aWxkLlxucmVxdWlyZSggJy4vb3B0X2JvaWxlcnBsYXRlcy92My9vcHQuaW5pdC5qcycgKTtcblxuLy8gSGVscGVyc1xucmVxdWlyZSggJy4vYmxvY2tzL2NvbW1vbi9qUXVlcnlDbG9uZVZhbC9qcXVlcnktY2xvbmVWYWwuanMnICk7XG5cbi8vIFVpTG9ja2VyIHRvIGxvY2sgdGhlIHBhZ2UgZHVyaW5nIGZvcm0gc3VibWlzc2lvblxucmVxdWlyZSggJy4vb3B0X2JvaWxlcnBsYXRlcy92My91aUxvY2tlci5qcycgKTtcblxuLy8gRm9ybSB2YWxpZGF0aW9uLCB0aGlzIGlzIGZvciBwcmV2aWV3LlxucmVxdWlyZSggJy4vb3B0X2JvaWxlcnBsYXRlcy92My92YWxpZGF0b3IuanMnICk7XG5cbi8vIEdsb2JhbGl6ZSBnb2Qga25vd3Mgd2hhdFxucmVxdWlyZSggJy4uLy4uL2dsb2JhbGl6ZS9nbG9iYWxpemUuanMnICk7XG5cbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt-assets.webpack.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/des.js":
/*!**********************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/des.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Paul Tero, July 2001\n// http://www.tero.co.uk/des/\n//\n// Optimised for performance with large blocks by Michael Hayworth, November 2001\n// http://www.netdealing.com\n//\n// THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n// SUCH DAMAGE.\n\n(() => {\n  // Des\n  // This takes the key, the message, and whether to encrypt or decrypt\n  function des(key, message, encrypt, mode, iv, padding) {\n    // Declaring this locally speeds things up a bit\n    var spfunction1 = new Array(0x1010400, 0, 0x10000, 0x1010404, 0x1010004, 0x10404, 0x4, 0x10000, 0x400, 0x1010400, 0x1010404, 0x400, 0x1000404, 0x1010004, 0x1000000, 0x4, 0x404, 0x1000400, 0x1000400, 0x10400, 0x10400, 0x1010000, 0x1010000, 0x1000404, 0x10004, 0x1000004, 0x1000004, 0x10004, 0, 0x404, 0x10404, 0x1000000, 0x10000, 0x1010404, 0x4, 0x1010000, 0x1010400, 0x1000000, 0x1000000, 0x400, 0x1010004, 0x10000, 0x10400, 0x1000004, 0x400, 0x4, 0x1000404, 0x10404, 0x1010404, 0x10004, 0x1010000, 0x1000404, 0x1000004, 0x404, 0x10404, 0x1010400, 0x404, 0x1000400, 0x1000400, 0, 0x10004, 0x10400, 0, 0x1010004);\n    var spfunction2 = new Array(-0x7fef7fe0, -0x7fff8000, 0x8000, 0x108020, 0x100000, 0x20, -0x7fefffe0, -0x7fff7fe0, -0x7fffffe0, -0x7fef7fe0, -0x7fef8000, -0x80000000, -0x7fff8000, 0x100000, 0x20, -0x7fefffe0, 0x108000, 0x100020, -0x7fff7fe0, 0, -0x80000000, 0x8000, 0x108020, -0x7ff00000, 0x100020, -0x7fffffe0, 0, 0x108000, 0x8020, -0x7fef8000, -0x7ff00000, 0x8020, 0, 0x108020, -0x7fefffe0, 0x100000, -0x7fff7fe0, -0x7ff00000, -0x7fef8000, 0x8000, -0x7ff00000, -0x7fff8000, 0x20, -0x7fef7fe0, 0x108020, 0x20, 0x8000, -0x80000000, 0x8020, -0x7fef8000, 0x100000, -0x7fffffe0, 0x100020, -0x7fff7fe0, -0x7fffffe0, 0x100020, 0x108000, 0, -0x7fff8000, 0x8020, -0x80000000, -0x7fefffe0, -0x7fef7fe0, 0x108000);\n    var spfunction3 = new Array(0x208, 0x8020200, 0, 0x8020008, 0x8000200, 0, 0x20208, 0x8000200, 0x20008, 0x8000008, 0x8000008, 0x20000, 0x8020208, 0x20008, 0x8020000, 0x208, 0x8000000, 0x8, 0x8020200, 0x200, 0x20200, 0x8020000, 0x8020008, 0x20208, 0x8000208, 0x20200, 0x20000, 0x8000208, 0x8, 0x8020208, 0x200, 0x8000000, 0x8020200, 0x8000000, 0x20008, 0x208, 0x20000, 0x8020200, 0x8000200, 0, 0x200, 0x20008, 0x8020208, 0x8000200, 0x8000008, 0x200, 0, 0x8020008, 0x8000208, 0x20000, 0x8000000, 0x8020208, 0x8, 0x20208, 0x20200, 0x8000008, 0x8020000, 0x8000208, 0x208, 0x8020000, 0x20208, 0x8, 0x8020008, 0x20200);\n    var spfunction4 = new Array(0x802001, 0x2081, 0x2081, 0x80, 0x802080, 0x800081, 0x800001, 0x2001, 0, 0x802000, 0x802000, 0x802081, 0x81, 0, 0x800080, 0x800001, 0x1, 0x2000, 0x800000, 0x802001, 0x80, 0x800000, 0x2001, 0x2080, 0x800081, 0x1, 0x2080, 0x800080, 0x2000, 0x802080, 0x802081, 0x81, 0x800080, 0x800001, 0x802000, 0x802081, 0x81, 0, 0, 0x802000, 0x2080, 0x800080, 0x800081, 0x1, 0x802001, 0x2081, 0x2081, 0x80, 0x802081, 0x81, 0x1, 0x2000, 0x800001, 0x2001, 0x802080, 0x800081, 0x2001, 0x2080, 0x800000, 0x802001, 0x80, 0x800000, 0x2000, 0x802080);\n    var spfunction5 = new Array(0x100, 0x2080100, 0x2080000, 0x42000100, 0x80000, 0x100, 0x40000000, 0x2080000, 0x40080100, 0x80000, 0x2000100, 0x40080100, 0x42000100, 0x42080000, 0x80100, 0x40000000, 0x2000000, 0x40080000, 0x40080000, 0, 0x40000100, 0x42080100, 0x42080100, 0x2000100, 0x42080000, 0x40000100, 0, 0x42000000, 0x2080100, 0x2000000, 0x42000000, 0x80100, 0x80000, 0x42000100, 0x100, 0x2000000, 0x40000000, 0x2080000, 0x42000100, 0x40080100, 0x2000100, 0x40000000, 0x42080000, 0x2080100, 0x40080100, 0x100, 0x2000000, 0x42080000, 0x42080100, 0x80100, 0x42000000, 0x42080100, 0x2080000, 0, 0x40080000, 0x42000000, 0x80100, 0x2000100, 0x40000100, 0x80000, 0, 0x40080000, 0x2080100, 0x40000100);\n    var spfunction6 = new Array(0x20000010, 0x20400000, 0x4000, 0x20404010, 0x20400000, 0x10, 0x20404010, 0x400000, 0x20004000, 0x404010, 0x400000, 0x20000010, 0x400010, 0x20004000, 0x20000000, 0x4010, 0, 0x400010, 0x20004010, 0x4000, 0x404000, 0x20004010, 0x10, 0x20400010, 0x20400010, 0, 0x404010, 0x20404000, 0x4010, 0x404000, 0x20404000, 0x20000000, 0x20004000, 0x10, 0x20400010, 0x404000, 0x20404010, 0x400000, 0x4010, 0x20000010, 0x400000, 0x20004000, 0x20000000, 0x4010, 0x20000010, 0x20404010, 0x404000, 0x20400000, 0x404010, 0x20404000, 0, 0x20400010, 0x10, 0x4000, 0x20400000, 0x404010, 0x4000, 0x400010, 0x20004010, 0, 0x20404000, 0x20000000, 0x400010, 0x20004010);\n    var spfunction7 = new Array(0x200000, 0x4200002, 0x4000802, 0, 0x800, 0x4000802, 0x200802, 0x4200800, 0x4200802, 0x200000, 0, 0x4000002, 0x2, 0x4000000, 0x4200002, 0x802, 0x4000800, 0x200802, 0x200002, 0x4000800, 0x4000002, 0x4200000, 0x4200800, 0x200002, 0x4200000, 0x800, 0x802, 0x4200802, 0x200800, 0x2, 0x4000000, 0x200800, 0x4000000, 0x200800, 0x200000, 0x4000802, 0x4000802, 0x4200002, 0x4200002, 0x2, 0x200002, 0x4000000, 0x4000800, 0x200000, 0x4200800, 0x802, 0x200802, 0x4200800, 0x802, 0x4000002, 0x4200802, 0x4200000, 0x200800, 0, 0x2, 0x4200802, 0, 0x200802, 0x4200000, 0x800, 0x4000002, 0x4000800, 0x800, 0x200002);\n    var spfunction8 = new Array(0x10001040, 0x1000, 0x40000, 0x10041040, 0x10000000, 0x10001040, 0x40, 0x10000000, 0x40040, 0x10040000, 0x10041040, 0x41000, 0x10041000, 0x41040, 0x1000, 0x40, 0x10040000, 0x10000040, 0x10001000, 0x1040, 0x41000, 0x40040, 0x10040040, 0x10041000, 0x1040, 0, 0, 0x10040040, 0x10000040, 0x10001000, 0x41040, 0x40000, 0x41040, 0x40000, 0x10041000, 0x1000, 0x40, 0x10040040, 0x1000, 0x41040, 0x10001000, 0x40, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x40000, 0x10001040, 0, 0x10041040, 0x40040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0, 0x10041040, 0x41000, 0x41000, 0x1040, 0x1040, 0x40040, 0x10000000, 0x10041000); // Create the 16 or 48 subkeys we will need\n\n    var keys = des_createKeys(key);\n    var m = 0,\n        i,\n        j,\n        temp,\n        temp2,\n        right1,\n        right2,\n        left,\n        right,\n        looping;\n    var cbcleft, cbcleft2, cbcright, cbcright2;\n    var endloop, loopinc;\n    var len = message.length;\n    var chunk = 0; // Set up the loops for single and triple des\n\n    var iterations = keys.length == 32 ? 3 : 9; // Single or triple des\n\n    if (iterations == 3) {\n      looping = encrypt ? new Array(0, 32, 2) : new Array(30, -2, -2);\n    } else {\n      looping = encrypt ? new Array(0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array(94, 62, -2, 32, 64, 2, 30, -2, -2);\n    } // Pad the message depending on the padding parameter\n\n\n    if (padding == 2) {\n      message += '        ';\n    } // Pad the message with spaces\n    else if (padding == 1) {\n        temp = 8 - len % 8;\n        message += String.fromCharCode(temp, temp, temp, temp, temp, temp, temp, temp);\n\n        if (temp == 8) {\n          len += 8;\n        }\n      } // PKCS7 padding\n      else if (!padding) {\n          message += '\\0\\0\\0\\0\\0\\0\\0\\0';\n        } // Pad the message out with null bytes\n    // Store the result here\n\n\n    var result = '';\n    var tempresult = '';\n\n    if (mode == 1) {\n      // CBC mode\n      cbcleft = iv.charCodeAt(m++) << 24 | iv.charCodeAt(m++) << 16 | iv.charCodeAt(m++) << 8 | iv.charCodeAt(m++);\n      cbcright = iv.charCodeAt(m++) << 24 | iv.charCodeAt(m++) << 16 | iv.charCodeAt(m++) << 8 | iv.charCodeAt(m++);\n      m = 0;\n    } // Loop through each 64 bit chunk of the message\n\n\n    while (m < len) {\n      left = message.charCodeAt(m++) << 24 | message.charCodeAt(m++) << 16 | message.charCodeAt(m++) << 8 | message.charCodeAt(m++);\n      right = message.charCodeAt(m++) << 24 | message.charCodeAt(m++) << 16 | message.charCodeAt(m++) << 8 | message.charCodeAt(m++); // For Cipher Block Chaining mode, xor the message with the previous result\n\n      if (mode == 1) {\n        if (encrypt) {\n          left ^= cbcleft;\n          right ^= cbcright;\n        } else {\n          cbcleft2 = cbcleft;\n          cbcright2 = cbcright;\n          cbcleft = left;\n          cbcright = right;\n        }\n      } // First each 64 but chunk of the message must be permuted according to IP\n\n\n      temp = (left >>> 4 ^ right) & 0x0f0f0f0f;\n      right ^= temp;\n      left ^= temp << 4;\n      temp = (left >>> 16 ^ right) & 0x0000ffff;\n      right ^= temp;\n      left ^= temp << 16;\n      temp = (right >>> 2 ^ left) & 0x33333333;\n      left ^= temp;\n      right ^= temp << 2;\n      temp = (right >>> 8 ^ left) & 0x00ff00ff;\n      left ^= temp;\n      right ^= temp << 8;\n      temp = (left >>> 1 ^ right) & 0x55555555;\n      right ^= temp;\n      left ^= temp << 1;\n      left = left << 1 | left >>> 31;\n      right = right << 1 | right >>> 31; // Do this either 1 or 3 times for each chunk of the message\n\n      for (j = 0; j < iterations; j += 3) {\n        endloop = looping[j + 1];\n        loopinc = looping[j + 2]; // Now go through and perform the encryption or decryption\n\n        for (i = looping[j]; i != endloop; i += loopinc) {\n          // For efficiency\n          right1 = right ^ keys[i];\n          right2 = (right >>> 4 | right << 28) ^ keys[i + 1]; // The result is attained by passing these bytes through the S selection functions\n\n          temp = left;\n          left = right;\n          right = temp ^ (spfunction2[right1 >>> 24 & 0x3f] | spfunction4[right1 >>> 16 & 0x3f] | spfunction6[right1 >>> 8 & 0x3f] | spfunction8[right1 & 0x3f] | spfunction1[right2 >>> 24 & 0x3f] | spfunction3[right2 >>> 16 & 0x3f] | spfunction5[right2 >>> 8 & 0x3f] | spfunction7[right2 & 0x3f]);\n        }\n\n        temp = left;\n        left = right;\n        right = temp; // Unreverse left and right\n      } // For either 1 or 3 iterations\n      // Move then each one bit to the right\n\n\n      left = left >>> 1 | left << 31;\n      right = right >>> 1 | right << 31; // Now perform IP-1, which is IP in the opposite direction\n\n      temp = (left >>> 1 ^ right) & 0x55555555;\n      right ^= temp;\n      left ^= temp << 1;\n      temp = (right >>> 8 ^ left) & 0x00ff00ff;\n      left ^= temp;\n      right ^= temp << 8;\n      temp = (right >>> 2 ^ left) & 0x33333333;\n      left ^= temp;\n      right ^= temp << 2;\n      temp = (left >>> 16 ^ right) & 0x0000ffff;\n      right ^= temp;\n      left ^= temp << 16;\n      temp = (left >>> 4 ^ right) & 0x0f0f0f0f;\n      right ^= temp;\n      left ^= temp << 4; // For Cipher Block Chaining mode, xor the message with the previous result\n\n      if (mode == 1) {\n        if (encrypt) {\n          cbcleft = left;\n          cbcright = right;\n        } else {\n          left ^= cbcleft2;\n          right ^= cbcright2;\n        }\n      }\n\n      tempresult += String.fromCharCode(left >>> 24, left >>> 16 & 0xff, left >>> 8 & 0xff, left & 0xff, right >>> 24, right >>> 16 & 0xff, right >>> 8 & 0xff, right & 0xff);\n      chunk += 8;\n\n      if (chunk == 512) {\n        result += tempresult;\n        tempresult = '';\n        chunk = 0;\n      }\n    } // For every 8 characters, or 64 bits in the message\n    // Return the result as an array\n\n\n    return result + tempresult;\n  } // End of des\n  // Des_createKeys\n  // This takes as input a 64 bit key (even though only 56 bits are used)\n  // As an array of 2 integers, and returns 16 48 bit keys\n\n\n  function des_createKeys(key) {\n    // Declaring this locally speeds things up a bit - Oh the irony\n    var left,\n        right,\n        pc2bytes0 = new Array(0, 0x4, 0x20000000, 0x20000004, 0x10000, 0x10004, 0x20010000, 0x20010004, 0x200, 0x204, 0x20000200, 0x20000204, 0x10200, 0x10204, 0x20010200, 0x20010204),\n        pc2bytes1 = new Array(0, 0x1, 0x100000, 0x100001, 0x4000000, 0x4000001, 0x4100000, 0x4100001, 0x100, 0x101, 0x100100, 0x100101, 0x4000100, 0x4000101, 0x4100100, 0x4100101),\n        pc2bytes2 = new Array(0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808, 0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808),\n        pc2bytes3 = new Array(0, 0x200000, 0x8000000, 0x8200000, 0x2000, 0x202000, 0x8002000, 0x8202000, 0x20000, 0x220000, 0x8020000, 0x8220000, 0x22000, 0x222000, 0x8022000, 0x8222000),\n        pc2bytes4 = new Array(0, 0x40000, 0x10, 0x40010, 0, 0x40000, 0x10, 0x40010, 0x1000, 0x41000, 0x1010, 0x41010, 0x1000, 0x41000, 0x1010, 0x41010),\n        pc2bytes5 = new Array(0, 0x400, 0x20, 0x420, 0, 0x400, 0x20, 0x420, 0x2000000, 0x2000400, 0x2000020, 0x2000420, 0x2000000, 0x2000400, 0x2000020, 0x2000420),\n        pc2bytes6 = new Array(0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002, 0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002),\n        pc2bytes7 = new Array(0, 0x10000, 0x800, 0x10800, 0x20000000, 0x20010000, 0x20000800, 0x20010800, 0x20000, 0x30000, 0x20800, 0x30800, 0x20020000, 0x20030000, 0x20020800, 0x20030800),\n        pc2bytes8 = new Array(0, 0x40000, 0, 0x40000, 0x2, 0x40002, 0x2, 0x40002, 0x2000000, 0x2040000, 0x2000000, 0x2040000, 0x2000002, 0x2040002, 0x2000002, 0x2040002),\n        pc2bytes9 = new Array(0, 0x10000000, 0x8, 0x10000008, 0, 0x10000000, 0x8, 0x10000008, 0x400, 0x10000400, 0x408, 0x10000408, 0x400, 0x10000400, 0x408, 0x10000408),\n        pc2bytes10 = new Array(0, 0x20, 0, 0x20, 0x100000, 0x100020, 0x100000, 0x100020, 0x2000, 0x2020, 0x2000, 0x2020, 0x102000, 0x102020, 0x102000, 0x102020),\n        pc2bytes11 = new Array(0, 0x1000000, 0x200, 0x1000200, 0x200000, 0x1200000, 0x200200, 0x1200200, 0x4000000, 0x5000000, 0x4000200, 0x5000200, 0x4200000, 0x5200000, 0x4200200, 0x5200200),\n        pc2bytes12 = new Array(0, 0x1000, 0x8000000, 0x8001000, 0x80000, 0x81000, 0x8080000, 0x8081000, 0x10, 0x1010, 0x8000010, 0x8001010, 0x80010, 0x81010, 0x8080010, 0x8081010),\n        pc2bytes13 = new Array(0, 0x4, 0x100, 0x104, 0, 0x4, 0x100, 0x104, 0x1, 0x5, 0x101, 0x105, 0x1, 0x5, 0x101, 0x105); // How many iterations (1 for des, 3 for triple des)\n\n    var iterations = key.length > 8 ? 3 : 1; // Changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n    // Stores the return keys\n\n    var keys = new Array(32 * iterations); // Now define the left shifts which need to be done\n\n    var shifts = new Array(0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0); // Other variables\n\n    var lefttemp,\n        righttemp,\n        m = 0,\n        n = 0,\n        temp;\n\n    for (var j = 0; j < iterations; j++) {\n      // Either 1 or 3 iterations\n      left = key.charCodeAt(m++) << 24 | key.charCodeAt(m++) << 16 | key.charCodeAt(m++) << 8 | key.charCodeAt(m++);\n      right = key.charCodeAt(m++) << 24 | key.charCodeAt(m++) << 16 | key.charCodeAt(m++) << 8 | key.charCodeAt(m++);\n      temp = (left >>> 4 ^ right) & 0x0f0f0f0f;\n      right ^= temp;\n      left ^= temp << 4;\n      temp = (right >>> -16 ^ left) & 0x0000ffff;\n      left ^= temp;\n      right ^= temp << -16;\n      temp = (left >>> 2 ^ right) & 0x33333333;\n      right ^= temp;\n      left ^= temp << 2;\n      temp = (right >>> -16 ^ left) & 0x0000ffff;\n      left ^= temp;\n      right ^= temp << -16;\n      temp = (left >>> 1 ^ right) & 0x55555555;\n      right ^= temp;\n      left ^= temp << 1;\n      temp = (right >>> 8 ^ left) & 0x00ff00ff;\n      left ^= temp;\n      right ^= temp << 8;\n      temp = (left >>> 1 ^ right) & 0x55555555;\n      right ^= temp;\n      left ^= temp << 1; // The right side needs to be shifted and to get the last four bits of the left side\n\n      temp = left << 8 | right >>> 20 & 0x000000f0; // Left needs to be put upside down\n\n      left = right << 24 | right << 8 & 0xff0000 | right >>> 8 & 0xff00 | right >>> 24 & 0xf0;\n      right = temp; // Now go through and perform these shifts on the left and right keys\n\n      for (var i = 0; i < shifts.length; i++) {\n        // Shift the keys either one or two bits to the left\n        if (shifts[i]) {\n          left = left << 2 | left >>> 26;\n          right = right << 2 | right >>> 26;\n        } else {\n          left = left << 1 | left >>> 27;\n          right = right << 1 | right >>> 27;\n        }\n\n        left &= -0xf;\n        right &= -0xf; // Now apply PC-2, in such a way that E is easier when encrypting or decrypting\n        // This conversion will look like PC-2 except only the last 6 bits of each byte are used\n        // Rather than 48 consecutive bits and the order of lines will be according to\n        // How the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n\n        lefttemp = pc2bytes0[left >>> 28] | pc2bytes1[left >>> 24 & 0xf] | pc2bytes2[left >>> 20 & 0xf] | pc2bytes3[left >>> 16 & 0xf] | pc2bytes4[left >>> 12 & 0xf] | pc2bytes5[left >>> 8 & 0xf] | pc2bytes6[left >>> 4 & 0xf];\n        righttemp = pc2bytes7[right >>> 28] | pc2bytes8[right >>> 24 & 0xf] | pc2bytes9[right >>> 20 & 0xf] | pc2bytes10[right >>> 16 & 0xf] | pc2bytes11[right >>> 12 & 0xf] | pc2bytes12[right >>> 8 & 0xf] | pc2bytes13[right >>> 4 & 0xf];\n        temp = (righttemp >>> 16 ^ lefttemp) & 0x0000ffff;\n        keys[n++] = lefttemp ^ temp;\n        keys[n++] = righttemp ^ temp << 16;\n      }\n    } // For each iterations\n    // Return the keys we've created\n\n\n    return keys;\n  } // End of des_createKeys\n  // //////////////////////////// TEST //////////////////////////////\n\n\n  function stringToHex(s) {\n    var r = '0x';\n    var hexes = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f');\n\n    for (var i = 0; i < s.length; i++) {\n      r += hexes[s.charCodeAt(i) >> 4] + hexes[s.charCodeAt(i) & 0xf];\n    }\n\n    return r;\n  }\n\n  function hexToString(h) {\n    var r = '';\n\n    for (var i = h.substr(0, 2) == '0x' ? 2 : 0; i < h.length; i += 2) {\n      r += String.fromCharCode(parseInt(h.substr(i, 2), 16));\n    }\n\n    return r;\n  } // Var key = \"this is a 24 byte key !!\";\n  // Var message = \"This is a test message\";\n  // Var ciphertext = des (key, message, 1, 0);\n  // Document.writeln (\"DES Test: \" + stringToHex (ciphertext));\n  // export common js / node else browser\n\n\n  if ( true && typeof module.exports !== 'undefined') {\n    var desExport = {\n      des: des,\n      des_createKeys: des_createKeys,\n      stringToHex: stringToHex,\n      hexToString: hexToString\n    };\n    module.exports = desExport;\n  } else {\n    window.des = des;\n    window.des_createKeys = des_createKeys;\n    window.stringToHex = stringToHex;\n    window.hexToString = hexToString;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvb3B0X2JvaWxlcnBsYXRlcy92My9kZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvb3B0X2JvaWxlcnBsYXRlcy92My9kZXMuanM/MDM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyBQYXVsIFRlcm8sIEp1bHkgMjAwMVxuLy8gaHR0cDovL3d3dy50ZXJvLmNvLnVrL2Rlcy9cbi8vXG4vLyBPcHRpbWlzZWQgZm9yIHBlcmZvcm1hbmNlIHdpdGggbGFyZ2UgYmxvY2tzIGJ5IE1pY2hhZWwgSGF5d29ydGgsIE5vdmVtYmVyIDIwMDFcbi8vIGh0dHA6Ly93d3cubmV0ZGVhbGluZy5jb21cbi8vXG4vLyBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiBBTkRcbi8vIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRVxuLy8gSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0Vcbi8vIEFSRSBESVNDTEFJTUVELiAgSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFXG4vLyBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTFxuLy8gREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFNcbi8vIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKVxuLy8gSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1Rcbi8vIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVlcbi8vIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0Zcbi8vIFNVQ0ggREFNQUdFLlxuKCAoKSA9PiB7XG4gICAgLy8gRGVzXG4gICAgLy8gVGhpcyB0YWtlcyB0aGUga2V5LCB0aGUgbWVzc2FnZSwgYW5kIHdoZXRoZXIgdG8gZW5jcnlwdCBvciBkZWNyeXB0XG4gICAgZnVuY3Rpb24gZGVzKCBrZXksIG1lc3NhZ2UsIGVuY3J5cHQsIG1vZGUsIGl2LCBwYWRkaW5nICkge1xuICAgICAgICAvLyBEZWNsYXJpbmcgdGhpcyBsb2NhbGx5IHNwZWVkcyB0aGluZ3MgdXAgYSBiaXRcbiAgICAgICAgdmFyIHNwZnVuY3Rpb24xID0gbmV3IEFycmF5ICggMHgxMDEwNDAwLDAsMHgxMDAwMCwweDEwMTA0MDQsMHgxMDEwMDA0LDB4MTA0MDQsMHg0LDB4MTAwMDAsMHg0MDAsMHgxMDEwNDAwLDB4MTAxMDQwNCwweDQwMCwweDEwMDA0MDQsMHgxMDEwMDA0LDB4MTAwMDAwMCwweDQsMHg0MDQsMHgxMDAwNDAwLDB4MTAwMDQwMCwweDEwNDAwLDB4MTA0MDAsMHgxMDEwMDAwLDB4MTAxMDAwMCwweDEwMDA0MDQsMHgxMDAwNCwweDEwMDAwMDQsMHgxMDAwMDA0LDB4MTAwMDQsMCwweDQwNCwweDEwNDA0LDB4MTAwMDAwMCwweDEwMDAwLDB4MTAxMDQwNCwweDQsMHgxMDEwMDAwLDB4MTAxMDQwMCwweDEwMDAwMDAsMHgxMDAwMDAwLDB4NDAwLDB4MTAxMDAwNCwweDEwMDAwLDB4MTA0MDAsMHgxMDAwMDA0LDB4NDAwLDB4NCwweDEwMDA0MDQsMHgxMDQwNCwweDEwMTA0MDQsMHgxMDAwNCwweDEwMTAwMDAsMHgxMDAwNDA0LDB4MTAwMDAwNCwweDQwNCwweDEwNDA0LDB4MTAxMDQwMCwweDQwNCwweDEwMDA0MDAsMHgxMDAwNDAwLDAsMHgxMDAwNCwweDEwNDAwLDAsMHgxMDEwMDA0ICk7XG4gICAgICAgIHZhciBzcGZ1bmN0aW9uMiA9IG5ldyBBcnJheSAoIC0weDdmZWY3ZmUwLC0weDdmZmY4MDAwLDB4ODAwMCwweDEwODAyMCwweDEwMDAwMCwweDIwLC0weDdmZWZmZmUwLC0weDdmZmY3ZmUwLC0weDdmZmZmZmUwLC0weDdmZWY3ZmUwLC0weDdmZWY4MDAwLC0weDgwMDAwMDAwLC0weDdmZmY4MDAwLDB4MTAwMDAwLDB4MjAsLTB4N2ZlZmZmZTAsMHgxMDgwMDAsMHgxMDAwMjAsLTB4N2ZmZjdmZTAsMCwtMHg4MDAwMDAwMCwweDgwMDAsMHgxMDgwMjAsLTB4N2ZmMDAwMDAsMHgxMDAwMjAsLTB4N2ZmZmZmZTAsMCwweDEwODAwMCwweDgwMjAsLTB4N2ZlZjgwMDAsLTB4N2ZmMDAwMDAsMHg4MDIwLDAsMHgxMDgwMjAsLTB4N2ZlZmZmZTAsMHgxMDAwMDAsLTB4N2ZmZjdmZTAsLTB4N2ZmMDAwMDAsLTB4N2ZlZjgwMDAsMHg4MDAwLC0weDdmZjAwMDAwLC0weDdmZmY4MDAwLDB4MjAsLTB4N2ZlZjdmZTAsMHgxMDgwMjAsMHgyMCwweDgwMDAsLTB4ODAwMDAwMDAsMHg4MDIwLC0weDdmZWY4MDAwLDB4MTAwMDAwLC0weDdmZmZmZmUwLDB4MTAwMDIwLC0weDdmZmY3ZmUwLC0weDdmZmZmZmUwLDB4MTAwMDIwLDB4MTA4MDAwLDAsLTB4N2ZmZjgwMDAsMHg4MDIwLC0weDgwMDAwMDAwLC0weDdmZWZmZmUwLC0weDdmZWY3ZmUwLDB4MTA4MDAwICk7XG4gICAgICAgIHZhciBzcGZ1bmN0aW9uMyA9IG5ldyBBcnJheSAoIDB4MjA4LDB4ODAyMDIwMCwwLDB4ODAyMDAwOCwweDgwMDAyMDAsMCwweDIwMjA4LDB4ODAwMDIwMCwweDIwMDA4LDB4ODAwMDAwOCwweDgwMDAwMDgsMHgyMDAwMCwweDgwMjAyMDgsMHgyMDAwOCwweDgwMjAwMDAsMHgyMDgsMHg4MDAwMDAwLDB4OCwweDgwMjAyMDAsMHgyMDAsMHgyMDIwMCwweDgwMjAwMDAsMHg4MDIwMDA4LDB4MjAyMDgsMHg4MDAwMjA4LDB4MjAyMDAsMHgyMDAwMCwweDgwMDAyMDgsMHg4LDB4ODAyMDIwOCwweDIwMCwweDgwMDAwMDAsMHg4MDIwMjAwLDB4ODAwMDAwMCwweDIwMDA4LDB4MjA4LDB4MjAwMDAsMHg4MDIwMjAwLDB4ODAwMDIwMCwwLDB4MjAwLDB4MjAwMDgsMHg4MDIwMjA4LDB4ODAwMDIwMCwweDgwMDAwMDgsMHgyMDAsMCwweDgwMjAwMDgsMHg4MDAwMjA4LDB4MjAwMDAsMHg4MDAwMDAwLDB4ODAyMDIwOCwweDgsMHgyMDIwOCwweDIwMjAwLDB4ODAwMDAwOCwweDgwMjAwMDAsMHg4MDAwMjA4LDB4MjA4LDB4ODAyMDAwMCwweDIwMjA4LDB4OCwweDgwMjAwMDgsMHgyMDIwMCApO1xuICAgICAgICB2YXIgc3BmdW5jdGlvbjQgPSBuZXcgQXJyYXkgKCAweDgwMjAwMSwweDIwODEsMHgyMDgxLDB4ODAsMHg4MDIwODAsMHg4MDAwODEsMHg4MDAwMDEsMHgyMDAxLDAsMHg4MDIwMDAsMHg4MDIwMDAsMHg4MDIwODEsMHg4MSwwLDB4ODAwMDgwLDB4ODAwMDAxLDB4MSwweDIwMDAsMHg4MDAwMDAsMHg4MDIwMDEsMHg4MCwweDgwMDAwMCwweDIwMDEsMHgyMDgwLDB4ODAwMDgxLDB4MSwweDIwODAsMHg4MDAwODAsMHgyMDAwLDB4ODAyMDgwLDB4ODAyMDgxLDB4ODEsMHg4MDAwODAsMHg4MDAwMDEsMHg4MDIwMDAsMHg4MDIwODEsMHg4MSwwLDAsMHg4MDIwMDAsMHgyMDgwLDB4ODAwMDgwLDB4ODAwMDgxLDB4MSwweDgwMjAwMSwweDIwODEsMHgyMDgxLDB4ODAsMHg4MDIwODEsMHg4MSwweDEsMHgyMDAwLDB4ODAwMDAxLDB4MjAwMSwweDgwMjA4MCwweDgwMDA4MSwweDIwMDEsMHgyMDgwLDB4ODAwMDAwLDB4ODAyMDAxLDB4ODAsMHg4MDAwMDAsMHgyMDAwLDB4ODAyMDgwICk7XG4gICAgICAgIHZhciBzcGZ1bmN0aW9uNSA9IG5ldyBBcnJheSAoIDB4MTAwLDB4MjA4MDEwMCwweDIwODAwMDAsMHg0MjAwMDEwMCwweDgwMDAwLDB4MTAwLDB4NDAwMDAwMDAsMHgyMDgwMDAwLDB4NDAwODAxMDAsMHg4MDAwMCwweDIwMDAxMDAsMHg0MDA4MDEwMCwweDQyMDAwMTAwLDB4NDIwODAwMDAsMHg4MDEwMCwweDQwMDAwMDAwLDB4MjAwMDAwMCwweDQwMDgwMDAwLDB4NDAwODAwMDAsMCwweDQwMDAwMTAwLDB4NDIwODAxMDAsMHg0MjA4MDEwMCwweDIwMDAxMDAsMHg0MjA4MDAwMCwweDQwMDAwMTAwLDAsMHg0MjAwMDAwMCwweDIwODAxMDAsMHgyMDAwMDAwLDB4NDIwMDAwMDAsMHg4MDEwMCwweDgwMDAwLDB4NDIwMDAxMDAsMHgxMDAsMHgyMDAwMDAwLDB4NDAwMDAwMDAsMHgyMDgwMDAwLDB4NDIwMDAxMDAsMHg0MDA4MDEwMCwweDIwMDAxMDAsMHg0MDAwMDAwMCwweDQyMDgwMDAwLDB4MjA4MDEwMCwweDQwMDgwMTAwLDB4MTAwLDB4MjAwMDAwMCwweDQyMDgwMDAwLDB4NDIwODAxMDAsMHg4MDEwMCwweDQyMDAwMDAwLDB4NDIwODAxMDAsMHgyMDgwMDAwLDAsMHg0MDA4MDAwMCwweDQyMDAwMDAwLDB4ODAxMDAsMHgyMDAwMTAwLDB4NDAwMDAxMDAsMHg4MDAwMCwwLDB4NDAwODAwMDAsMHgyMDgwMTAwLDB4NDAwMDAxMDAgKTtcbiAgICAgICAgdmFyIHNwZnVuY3Rpb242ID0gbmV3IEFycmF5ICggMHgyMDAwMDAxMCwweDIwNDAwMDAwLDB4NDAwMCwweDIwNDA0MDEwLDB4MjA0MDAwMDAsMHgxMCwweDIwNDA0MDEwLDB4NDAwMDAwLDB4MjAwMDQwMDAsMHg0MDQwMTAsMHg0MDAwMDAsMHgyMDAwMDAxMCwweDQwMDAxMCwweDIwMDA0MDAwLDB4MjAwMDAwMDAsMHg0MDEwLDAsMHg0MDAwMTAsMHgyMDAwNDAxMCwweDQwMDAsMHg0MDQwMDAsMHgyMDAwNDAxMCwweDEwLDB4MjA0MDAwMTAsMHgyMDQwMDAxMCwwLDB4NDA0MDEwLDB4MjA0MDQwMDAsMHg0MDEwLDB4NDA0MDAwLDB4MjA0MDQwMDAsMHgyMDAwMDAwMCwweDIwMDA0MDAwLDB4MTAsMHgyMDQwMDAxMCwweDQwNDAwMCwweDIwNDA0MDEwLDB4NDAwMDAwLDB4NDAxMCwweDIwMDAwMDEwLDB4NDAwMDAwLDB4MjAwMDQwMDAsMHgyMDAwMDAwMCwweDQwMTAsMHgyMDAwMDAxMCwweDIwNDA0MDEwLDB4NDA0MDAwLDB4MjA0MDAwMDAsMHg0MDQwMTAsMHgyMDQwNDAwMCwwLDB4MjA0MDAwMTAsMHgxMCwweDQwMDAsMHgyMDQwMDAwMCwweDQwNDAxMCwweDQwMDAsMHg0MDAwMTAsMHgyMDAwNDAxMCwwLDB4MjA0MDQwMDAsMHgyMDAwMDAwMCwweDQwMDAxMCwweDIwMDA0MDEwICk7XG4gICAgICAgIHZhciBzcGZ1bmN0aW9uNyA9IG5ldyBBcnJheSAoIDB4MjAwMDAwLDB4NDIwMDAwMiwweDQwMDA4MDIsMCwweDgwMCwweDQwMDA4MDIsMHgyMDA4MDIsMHg0MjAwODAwLDB4NDIwMDgwMiwweDIwMDAwMCwwLDB4NDAwMDAwMiwweDIsMHg0MDAwMDAwLDB4NDIwMDAwMiwweDgwMiwweDQwMDA4MDAsMHgyMDA4MDIsMHgyMDAwMDIsMHg0MDAwODAwLDB4NDAwMDAwMiwweDQyMDAwMDAsMHg0MjAwODAwLDB4MjAwMDAyLDB4NDIwMDAwMCwweDgwMCwweDgwMiwweDQyMDA4MDIsMHgyMDA4MDAsMHgyLDB4NDAwMDAwMCwweDIwMDgwMCwweDQwMDAwMDAsMHgyMDA4MDAsMHgyMDAwMDAsMHg0MDAwODAyLDB4NDAwMDgwMiwweDQyMDAwMDIsMHg0MjAwMDAyLDB4MiwweDIwMDAwMiwweDQwMDAwMDAsMHg0MDAwODAwLDB4MjAwMDAwLDB4NDIwMDgwMCwweDgwMiwweDIwMDgwMiwweDQyMDA4MDAsMHg4MDIsMHg0MDAwMDAyLDB4NDIwMDgwMiwweDQyMDAwMDAsMHgyMDA4MDAsMCwweDIsMHg0MjAwODAyLDAsMHgyMDA4MDIsMHg0MjAwMDAwLDB4ODAwLDB4NDAwMDAwMiwweDQwMDA4MDAsMHg4MDAsMHgyMDAwMDIgKTtcbiAgICAgICAgdmFyIHNwZnVuY3Rpb244ID0gbmV3IEFycmF5ICggMHgxMDAwMTA0MCwweDEwMDAsMHg0MDAwMCwweDEwMDQxMDQwLDB4MTAwMDAwMDAsMHgxMDAwMTA0MCwweDQwLDB4MTAwMDAwMDAsMHg0MDA0MCwweDEwMDQwMDAwLDB4MTAwNDEwNDAsMHg0MTAwMCwweDEwMDQxMDAwLDB4NDEwNDAsMHgxMDAwLDB4NDAsMHgxMDA0MDAwMCwweDEwMDAwMDQwLDB4MTAwMDEwMDAsMHgxMDQwLDB4NDEwMDAsMHg0MDA0MCwweDEwMDQwMDQwLDB4MTAwNDEwMDAsMHgxMDQwLDAsMCwweDEwMDQwMDQwLDB4MTAwMDAwNDAsMHgxMDAwMTAwMCwweDQxMDQwLDB4NDAwMDAsMHg0MTA0MCwweDQwMDAwLDB4MTAwNDEwMDAsMHgxMDAwLDB4NDAsMHgxMDA0MDA0MCwweDEwMDAsMHg0MTA0MCwweDEwMDAxMDAwLDB4NDAsMHgxMDAwMDA0MCwweDEwMDQwMDAwLDB4MTAwNDAwNDAsMHgxMDAwMDAwMCwweDQwMDAwLDB4MTAwMDEwNDAsMCwweDEwMDQxMDQwLDB4NDAwNDAsMHgxMDAwMDA0MCwweDEwMDQwMDAwLDB4MTAwMDEwMDAsMHgxMDAwMTA0MCwwLDB4MTAwNDEwNDAsMHg0MTAwMCwweDQxMDAwLDB4MTA0MCwweDEwNDAsMHg0MDA0MCwweDEwMDAwMDAwLDB4MTAwNDEwMDAgKTtcblxuICAgICAgICAvLyBDcmVhdGUgdGhlIDE2IG9yIDQ4IHN1YmtleXMgd2Ugd2lsbCBuZWVkXG4gICAgICAgIHZhciBrZXlzID0gZGVzX2NyZWF0ZUtleXMgKCBrZXkgKTtcbiAgICAgICAgdmFyIG09MCwgaSwgaiwgdGVtcCwgdGVtcDIsIHJpZ2h0MSwgcmlnaHQyLCBsZWZ0LCByaWdodCwgbG9vcGluZztcbiAgICAgICAgdmFyIGNiY2xlZnQsIGNiY2xlZnQyLCBjYmNyaWdodCwgY2JjcmlnaHQyO1xuICAgICAgICB2YXIgZW5kbG9vcCwgbG9vcGluYztcbiAgICAgICAgdmFyIGxlbiA9IG1lc3NhZ2UubGVuZ3RoO1xuICAgICAgICB2YXIgY2h1bmsgPSAwO1xuICAgICAgICAvLyBTZXQgdXAgdGhlIGxvb3BzIGZvciBzaW5nbGUgYW5kIHRyaXBsZSBkZXNcbiAgICAgICAgdmFyIGl0ZXJhdGlvbnMgPSBrZXlzLmxlbmd0aCA9PSAzMiA/IDMgOiA5OyAvLyBTaW5nbGUgb3IgdHJpcGxlIGRlc1xuICAgICAgICBpZiAoIGl0ZXJhdGlvbnMgPT0gMyApIHtcbiAgICAgICAgICAgIGxvb3BpbmcgPSBlbmNyeXB0ID8gbmV3IEFycmF5ICggMCwgMzIsIDIgKSA6IG5ldyBBcnJheSAoIDMwLCAtMiwgLTIgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxvb3BpbmcgPSBlbmNyeXB0ID8gbmV3IEFycmF5ICggMCwgMzIsIDIsIDYyLCAzMCwgLTIsIDY0LCA5NiwgMiApIDogbmV3IEFycmF5ICggOTQsIDYyLCAtMiwgMzIsIDY0LCAyLCAzMCwgLTIsIC0yICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBQYWQgdGhlIG1lc3NhZ2UgZGVwZW5kaW5nIG9uIHRoZSBwYWRkaW5nIHBhcmFtZXRlclxuICAgICAgICBpZiAoIHBhZGRpbmcgPT0gMiApIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gJyAgICAgICAgJztcbiAgICAgICAgfSAvLyBQYWQgdGhlIG1lc3NhZ2Ugd2l0aCBzcGFjZXNcbiAgICAgICAgZWxzZSBpZiAoIHBhZGRpbmcgPT0gMSApIHtcbiAgICAgICAgICAgIHRlbXAgPSA4LSggbGVuJTggKTsgbWVzc2FnZSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlICggdGVtcCx0ZW1wLHRlbXAsdGVtcCx0ZW1wLHRlbXAsdGVtcCx0ZW1wICk7IGlmICggdGVtcD09OCApIHtcbiAgICAgICAgICAgICAgICBsZW4rPTg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gLy8gUEtDUzcgcGFkZGluZ1xuICAgICAgICBlbHNlIGlmICggIXBhZGRpbmcgKSB7XG4gICAgICAgICAgICBtZXNzYWdlICs9ICdcXDBcXDBcXDBcXDBcXDBcXDBcXDBcXDAnO1xuICAgICAgICB9IC8vIFBhZCB0aGUgbWVzc2FnZSBvdXQgd2l0aCBudWxsIGJ5dGVzXG5cbiAgICAgICAgLy8gU3RvcmUgdGhlIHJlc3VsdCBoZXJlXG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgdmFyIHRlbXByZXN1bHQgPSAnJztcblxuICAgICAgICBpZiAoIG1vZGUgPT0gMSApIHsgLy8gQ0JDIG1vZGVcbiAgICAgICAgICAgIGNiY2xlZnQgPSAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDI0ICkgfCAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDE2ICkgfCAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDggKSB8IGl2LmNoYXJDb2RlQXQoIG0rKyApO1xuICAgICAgICAgICAgY2JjcmlnaHQgPSAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDI0ICkgfCAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDE2ICkgfCAoIGl2LmNoYXJDb2RlQXQoIG0rKyApIDw8IDggKSB8IGl2LmNoYXJDb2RlQXQoIG0rKyApO1xuICAgICAgICAgICAgbT0wO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggNjQgYml0IGNodW5rIG9mIHRoZSBtZXNzYWdlXG4gICAgICAgIHdoaWxlICggbSA8IGxlbiApIHtcbiAgICAgICAgICAgIGxlZnQgPSAoIG1lc3NhZ2UuY2hhckNvZGVBdCggbSsrICkgPDwgMjQgKSB8ICggbWVzc2FnZS5jaGFyQ29kZUF0KCBtKysgKSA8PCAxNiApIHwgKCBtZXNzYWdlLmNoYXJDb2RlQXQoIG0rKyApIDw8IDggKSB8IG1lc3NhZ2UuY2hhckNvZGVBdCggbSsrICk7XG4gICAgICAgICAgICByaWdodCA9ICggbWVzc2FnZS5jaGFyQ29kZUF0KCBtKysgKSA8PCAyNCApIHwgKCBtZXNzYWdlLmNoYXJDb2RlQXQoIG0rKyApIDw8IDE2ICkgfCAoIG1lc3NhZ2UuY2hhckNvZGVBdCggbSsrICkgPDwgOCApIHwgbWVzc2FnZS5jaGFyQ29kZUF0KCBtKysgKTtcblxuICAgICAgICAgICAgLy8gRm9yIENpcGhlciBCbG9jayBDaGFpbmluZyBtb2RlLCB4b3IgdGhlIG1lc3NhZ2Ugd2l0aCB0aGUgcHJldmlvdXMgcmVzdWx0XG4gICAgICAgICAgICBpZiAoIG1vZGUgPT0gMSApIHtcbiAgICAgICAgICAgICAgICBpZiAoIGVuY3J5cHQgKSB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQgXj0gY2JjbGVmdDsgcmlnaHQgXj0gY2JjcmlnaHQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2JjbGVmdDIgPSBjYmNsZWZ0OyBjYmNyaWdodDIgPSBjYmNyaWdodDsgY2JjbGVmdCA9IGxlZnQ7IGNiY3JpZ2h0ID0gcmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBGaXJzdCBlYWNoIDY0IGJ1dCBjaHVuayBvZiB0aGUgbWVzc2FnZSBtdXN0IGJlIHBlcm11dGVkIGFjY29yZGluZyB0byBJUFxuICAgICAgICAgICAgdGVtcCA9ICggKCBsZWZ0ID4+PiA0ICkgXiByaWdodCApICYgMHgwZjBmMGYwZjsgcmlnaHQgXj0gdGVtcDsgbGVmdCBePSAoIHRlbXAgPDwgNCApO1xuICAgICAgICAgICAgdGVtcCA9ICggKCBsZWZ0ID4+PiAxNiApIF4gcmlnaHQgKSAmIDB4MDAwMGZmZmY7IHJpZ2h0IF49IHRlbXA7IGxlZnQgXj0gKCB0ZW1wIDw8IDE2ICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIHJpZ2h0ID4+PiAyICkgXiBsZWZ0ICkgJiAweDMzMzMzMzMzOyBsZWZ0IF49IHRlbXA7IHJpZ2h0IF49ICggdGVtcCA8PCAyICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIHJpZ2h0ID4+PiA4ICkgXiBsZWZ0ICkgJiAweDAwZmYwMGZmOyBsZWZ0IF49IHRlbXA7IHJpZ2h0IF49ICggdGVtcCA8PCA4ICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIGxlZnQgPj4+IDEgKSBeIHJpZ2h0ICkgJiAweDU1NTU1NTU1OyByaWdodCBePSB0ZW1wOyBsZWZ0IF49ICggdGVtcCA8PCAxICk7XG5cbiAgICAgICAgICAgIGxlZnQgPSAoICggbGVmdCA8PCAxICkgfCAoIGxlZnQgPj4+IDMxICkgKTtcbiAgICAgICAgICAgIHJpZ2h0ID0gKCAoIHJpZ2h0IDw8IDEgKSB8ICggcmlnaHQgPj4+IDMxICkgKTtcblxuICAgICAgICAgICAgLy8gRG8gdGhpcyBlaXRoZXIgMSBvciAzIHRpbWVzIGZvciBlYWNoIGNodW5rIG9mIHRoZSBtZXNzYWdlXG4gICAgICAgICAgICBmb3IgKCBqPTA7IGo8aXRlcmF0aW9uczsgais9MyApIHtcbiAgICAgICAgICAgICAgICBlbmRsb29wID0gbG9vcGluZ1sgaisxIF07XG4gICAgICAgICAgICAgICAgbG9vcGluYyA9IGxvb3BpbmdbIGorMiBdO1xuICAgICAgICAgICAgICAgIC8vIE5vdyBnbyB0aHJvdWdoIGFuZCBwZXJmb3JtIHRoZSBlbmNyeXB0aW9uIG9yIGRlY3J5cHRpb25cbiAgICAgICAgICAgICAgICBmb3IgKCBpPWxvb3BpbmdbIGogXTsgaSE9ZW5kbG9vcDsgaSs9bG9vcGluYyApIHsgLy8gRm9yIGVmZmljaWVuY3lcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQxID0gcmlnaHQgXiBrZXlzWyBpIF07XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0MiA9ICggKCByaWdodCA+Pj4gNCApIHwgKCByaWdodCA8PCAyOCApICkgXiBrZXlzWyBpKzEgXTtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIHJlc3VsdCBpcyBhdHRhaW5lZCBieSBwYXNzaW5nIHRoZXNlIGJ5dGVzIHRocm91Z2ggdGhlIFMgc2VsZWN0aW9uIGZ1bmN0aW9uc1xuICAgICAgICAgICAgICAgICAgICB0ZW1wID0gbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgbGVmdCA9IHJpZ2h0O1xuICAgICAgICAgICAgICAgICAgICByaWdodCA9IHRlbXAgXiAoIHNwZnVuY3Rpb24yWyAoIHJpZ2h0MSA+Pj4gMjQgKSAmIDB4M2YgXSB8IHNwZnVuY3Rpb240WyAoIHJpZ2h0MSA+Pj4gMTYgKSAmIDB4M2YgXSB8XG4gICAgICAgICAgICAgICAgICBzcGZ1bmN0aW9uNlsgKCByaWdodDEgPj4+IDggKSAmIDB4M2YgXSB8IHNwZnVuY3Rpb244WyByaWdodDEgJiAweDNmIF0gfFxuICAgICAgICAgICAgICAgICAgc3BmdW5jdGlvbjFbICggcmlnaHQyID4+PiAyNCApICYgMHgzZiBdIHwgc3BmdW5jdGlvbjNbICggcmlnaHQyID4+PiAxNiApICYgMHgzZiBdIHxcbiAgICAgICAgICAgICAgICAgIHNwZnVuY3Rpb241WyAoIHJpZ2h0MiA+Pj4gOCApICYgMHgzZiBdIHwgc3BmdW5jdGlvbjdbIHJpZ2h0MiAmIDB4M2YgXSApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZW1wID0gbGVmdDsgbGVmdCA9IHJpZ2h0OyByaWdodCA9IHRlbXA7IC8vIFVucmV2ZXJzZSBsZWZ0IGFuZCByaWdodFxuICAgICAgICAgICAgfSAvLyBGb3IgZWl0aGVyIDEgb3IgMyBpdGVyYXRpb25zXG5cbiAgICAgICAgICAgIC8vIE1vdmUgdGhlbiBlYWNoIG9uZSBiaXQgdG8gdGhlIHJpZ2h0XG4gICAgICAgICAgICBsZWZ0ID0gKCAoIGxlZnQgPj4+IDEgKSB8ICggbGVmdCA8PCAzMSApICk7XG4gICAgICAgICAgICByaWdodCA9ICggKCByaWdodCA+Pj4gMSApIHwgKCByaWdodCA8PCAzMSApICk7XG5cbiAgICAgICAgICAgIC8vIE5vdyBwZXJmb3JtIElQLTEsIHdoaWNoIGlzIElQIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb25cbiAgICAgICAgICAgIHRlbXAgPSAoICggbGVmdCA+Pj4gMSApIF4gcmlnaHQgKSAmIDB4NTU1NTU1NTU7IHJpZ2h0IF49IHRlbXA7IGxlZnQgXj0gKCB0ZW1wIDw8IDEgKTtcbiAgICAgICAgICAgIHRlbXAgPSAoICggcmlnaHQgPj4+IDggKSBeIGxlZnQgKSAmIDB4MDBmZjAwZmY7IGxlZnQgXj0gdGVtcDsgcmlnaHQgXj0gKCB0ZW1wIDw8IDggKTtcbiAgICAgICAgICAgIHRlbXAgPSAoICggcmlnaHQgPj4+IDIgKSBeIGxlZnQgKSAmIDB4MzMzMzMzMzM7IGxlZnQgXj0gdGVtcDsgcmlnaHQgXj0gKCB0ZW1wIDw8IDIgKTtcbiAgICAgICAgICAgIHRlbXAgPSAoICggbGVmdCA+Pj4gMTYgKSBeIHJpZ2h0ICkgJiAweDAwMDBmZmZmOyByaWdodCBePSB0ZW1wOyBsZWZ0IF49ICggdGVtcCA8PCAxNiApO1xuICAgICAgICAgICAgdGVtcCA9ICggKCBsZWZ0ID4+PiA0ICkgXiByaWdodCApICYgMHgwZjBmMGYwZjsgcmlnaHQgXj0gdGVtcDsgbGVmdCBePSAoIHRlbXAgPDwgNCApO1xuXG4gICAgICAgICAgICAvLyBGb3IgQ2lwaGVyIEJsb2NrIENoYWluaW5nIG1vZGUsIHhvciB0aGUgbWVzc2FnZSB3aXRoIHRoZSBwcmV2aW91cyByZXN1bHRcbiAgICAgICAgICAgIGlmICggbW9kZSA9PSAxICkge1xuICAgICAgICAgICAgICAgIGlmICggZW5jcnlwdCApIHtcbiAgICAgICAgICAgICAgICAgICAgY2JjbGVmdCA9IGxlZnQ7IGNiY3JpZ2h0ID0gcmlnaHQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdCBePSBjYmNsZWZ0MjsgcmlnaHQgXj0gY2JjcmlnaHQyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRlbXByZXN1bHQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSAoICggbGVmdD4+PjI0ICksICggKCBsZWZ0Pj4+MTYgKSAmIDB4ZmYgKSwgKCAoIGxlZnQ+Pj44ICkgJiAweGZmICksICggbGVmdCAmIDB4ZmYgKSwgKCByaWdodD4+PjI0ICksICggKCByaWdodD4+PjE2ICkgJiAweGZmICksICggKCByaWdodD4+PjggKSAmIDB4ZmYgKSwgKCByaWdodCAmIDB4ZmYgKSApO1xuXG4gICAgICAgICAgICBjaHVuayArPSA4O1xuICAgICAgICAgICAgaWYgKCBjaHVuayA9PSA1MTIgKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHRlbXByZXN1bHQ7IHRlbXByZXN1bHQgPSAnJzsgY2h1bmsgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IC8vIEZvciBldmVyeSA4IGNoYXJhY3RlcnMsIG9yIDY0IGJpdHMgaW4gdGhlIG1lc3NhZ2VcblxuICAgICAgICAvLyBSZXR1cm4gdGhlIHJlc3VsdCBhcyBhbiBhcnJheVxuICAgICAgICByZXR1cm4gcmVzdWx0ICsgdGVtcHJlc3VsdDtcbiAgICB9IC8vIEVuZCBvZiBkZXNcblxuXG4gICAgLy8gRGVzX2NyZWF0ZUtleXNcbiAgICAvLyBUaGlzIHRha2VzIGFzIGlucHV0IGEgNjQgYml0IGtleSAoZXZlbiB0aG91Z2ggb25seSA1NiBiaXRzIGFyZSB1c2VkKVxuICAgIC8vIEFzIGFuIGFycmF5IG9mIDIgaW50ZWdlcnMsIGFuZCByZXR1cm5zIDE2IDQ4IGJpdCBrZXlzXG4gICAgZnVuY3Rpb24gZGVzX2NyZWF0ZUtleXMoIGtleSApIHtcbiAgICAgICAgLy8gRGVjbGFyaW5nIHRoaXMgbG9jYWxseSBzcGVlZHMgdGhpbmdzIHVwIGEgYml0IC0gT2ggdGhlIGlyb255XG4gICAgICAgIHZhciBsZWZ0LCByaWdodCxcbiAgICAgICAgICAgIHBjMmJ5dGVzMCA9IG5ldyBBcnJheSAoIDAsMHg0LDB4MjAwMDAwMDAsMHgyMDAwMDAwNCwweDEwMDAwLDB4MTAwMDQsMHgyMDAxMDAwMCwweDIwMDEwMDA0LDB4MjAwLDB4MjA0LDB4MjAwMDAyMDAsMHgyMDAwMDIwNCwweDEwMjAwLDB4MTAyMDQsMHgyMDAxMDIwMCwweDIwMDEwMjA0ICksXG4gICAgICAgICAgICBwYzJieXRlczEgPSBuZXcgQXJyYXkgKCAwLDB4MSwweDEwMDAwMCwweDEwMDAwMSwweDQwMDAwMDAsMHg0MDAwMDAxLDB4NDEwMDAwMCwweDQxMDAwMDEsMHgxMDAsMHgxMDEsMHgxMDAxMDAsMHgxMDAxMDEsMHg0MDAwMTAwLDB4NDAwMDEwMSwweDQxMDAxMDAsMHg0MTAwMTAxICksXG4gICAgICAgICAgICBwYzJieXRlczIgPSBuZXcgQXJyYXkgKCAwLDB4OCwweDgwMCwweDgwOCwweDEwMDAwMDAsMHgxMDAwMDA4LDB4MTAwMDgwMCwweDEwMDA4MDgsMCwweDgsMHg4MDAsMHg4MDgsMHgxMDAwMDAwLDB4MTAwMDAwOCwweDEwMDA4MDAsMHgxMDAwODA4ICksXG4gICAgICAgICAgICBwYzJieXRlczMgPSBuZXcgQXJyYXkgKCAwLDB4MjAwMDAwLDB4ODAwMDAwMCwweDgyMDAwMDAsMHgyMDAwLDB4MjAyMDAwLDB4ODAwMjAwMCwweDgyMDIwMDAsMHgyMDAwMCwweDIyMDAwMCwweDgwMjAwMDAsMHg4MjIwMDAwLDB4MjIwMDAsMHgyMjIwMDAsMHg4MDIyMDAwLDB4ODIyMjAwMCApLFxuICAgICAgICAgICAgcGMyYnl0ZXM0ID0gbmV3IEFycmF5ICggMCwweDQwMDAwLDB4MTAsMHg0MDAxMCwwLDB4NDAwMDAsMHgxMCwweDQwMDEwLDB4MTAwMCwweDQxMDAwLDB4MTAxMCwweDQxMDEwLDB4MTAwMCwweDQxMDAwLDB4MTAxMCwweDQxMDEwICksXG4gICAgICAgICAgICBwYzJieXRlczUgPSBuZXcgQXJyYXkgKCAwLDB4NDAwLDB4MjAsMHg0MjAsMCwweDQwMCwweDIwLDB4NDIwLDB4MjAwMDAwMCwweDIwMDA0MDAsMHgyMDAwMDIwLDB4MjAwMDQyMCwweDIwMDAwMDAsMHgyMDAwNDAwLDB4MjAwMDAyMCwweDIwMDA0MjAgKSxcbiAgICAgICAgICAgIHBjMmJ5dGVzNiA9IG5ldyBBcnJheSAoIDAsMHgxMDAwMDAwMCwweDgwMDAwLDB4MTAwODAwMDAsMHgyLDB4MTAwMDAwMDIsMHg4MDAwMiwweDEwMDgwMDAyLDAsMHgxMDAwMDAwMCwweDgwMDAwLDB4MTAwODAwMDAsMHgyLDB4MTAwMDAwMDIsMHg4MDAwMiwweDEwMDgwMDAyICksXG4gICAgICAgICAgICBwYzJieXRlczcgPSBuZXcgQXJyYXkgKCAwLDB4MTAwMDAsMHg4MDAsMHgxMDgwMCwweDIwMDAwMDAwLDB4MjAwMTAwMDAsMHgyMDAwMDgwMCwweDIwMDEwODAwLDB4MjAwMDAsMHgzMDAwMCwweDIwODAwLDB4MzA4MDAsMHgyMDAyMDAwMCwweDIwMDMwMDAwLDB4MjAwMjA4MDAsMHgyMDAzMDgwMCApLFxuICAgICAgICAgICAgcGMyYnl0ZXM4ID0gbmV3IEFycmF5ICggMCwweDQwMDAwLDAsMHg0MDAwMCwweDIsMHg0MDAwMiwweDIsMHg0MDAwMiwweDIwMDAwMDAsMHgyMDQwMDAwLDB4MjAwMDAwMCwweDIwNDAwMDAsMHgyMDAwMDAyLDB4MjA0MDAwMiwweDIwMDAwMDIsMHgyMDQwMDAyICksXG4gICAgICAgICAgICBwYzJieXRlczkgPSBuZXcgQXJyYXkgKCAwLDB4MTAwMDAwMDAsMHg4LDB4MTAwMDAwMDgsMCwweDEwMDAwMDAwLDB4OCwweDEwMDAwMDA4LDB4NDAwLDB4MTAwMDA0MDAsMHg0MDgsMHgxMDAwMDQwOCwweDQwMCwweDEwMDAwNDAwLDB4NDA4LDB4MTAwMDA0MDggKSxcbiAgICAgICAgICAgIHBjMmJ5dGVzMTAgPSBuZXcgQXJyYXkgKCAwLDB4MjAsMCwweDIwLDB4MTAwMDAwLDB4MTAwMDIwLDB4MTAwMDAwLDB4MTAwMDIwLDB4MjAwMCwweDIwMjAsMHgyMDAwLDB4MjAyMCwweDEwMjAwMCwweDEwMjAyMCwweDEwMjAwMCwweDEwMjAyMCApLFxuICAgICAgICAgICAgcGMyYnl0ZXMxMSA9IG5ldyBBcnJheSAoIDAsMHgxMDAwMDAwLDB4MjAwLDB4MTAwMDIwMCwweDIwMDAwMCwweDEyMDAwMDAsMHgyMDAyMDAsMHgxMjAwMjAwLDB4NDAwMDAwMCwweDUwMDAwMDAsMHg0MDAwMjAwLDB4NTAwMDIwMCwweDQyMDAwMDAsMHg1MjAwMDAwLDB4NDIwMDIwMCwweDUyMDAyMDAgKSxcbiAgICAgICAgICAgIHBjMmJ5dGVzMTIgPSBuZXcgQXJyYXkgKCAwLDB4MTAwMCwweDgwMDAwMDAsMHg4MDAxMDAwLDB4ODAwMDAsMHg4MTAwMCwweDgwODAwMDAsMHg4MDgxMDAwLDB4MTAsMHgxMDEwLDB4ODAwMDAxMCwweDgwMDEwMTAsMHg4MDAxMCwweDgxMDEwLDB4ODA4MDAxMCwweDgwODEwMTAgKSxcbiAgICAgICAgICAgIHBjMmJ5dGVzMTMgPSBuZXcgQXJyYXkgKCAwLDB4NCwweDEwMCwweDEwNCwwLDB4NCwweDEwMCwweDEwNCwweDEsMHg1LDB4MTAxLDB4MTA1LDB4MSwweDUsMHgxMDEsMHgxMDUgKTtcblxuICAgICAgICAvLyBIb3cgbWFueSBpdGVyYXRpb25zICgxIGZvciBkZXMsIDMgZm9yIHRyaXBsZSBkZXMpXG4gICAgICAgIHZhciBpdGVyYXRpb25zID0ga2V5Lmxlbmd0aCA+IDggPyAzIDogMTsgLy8gQ2hhbmdlZCBieSBQYXVsIDE2LzYvMjAwNyB0byB1c2UgVHJpcGxlIERFUyBmb3IgOSsgYnl0ZSBrZXlzXG4gICAgICAgIC8vIFN0b3JlcyB0aGUgcmV0dXJuIGtleXNcbiAgICAgICAgdmFyIGtleXMgPSBuZXcgQXJyYXkgKCAzMiAqIGl0ZXJhdGlvbnMgKTtcbiAgICAgICAgLy8gTm93IGRlZmluZSB0aGUgbGVmdCBzaGlmdHMgd2hpY2ggbmVlZCB0byBiZSBkb25lXG4gICAgICAgIHZhciBzaGlmdHMgPSBuZXcgQXJyYXkgKCAwLCAwLCAxLCAxLCAxLCAxLCAxLCAxLCAwLCAxLCAxLCAxLCAxLCAxLCAxLCAwICk7XG4gICAgICAgIC8vIE90aGVyIHZhcmlhYmxlc1xuICAgICAgICB2YXIgbGVmdHRlbXAsIHJpZ2h0dGVtcCwgbT0wLCBuPTAsIHRlbXA7XG5cbiAgICAgICAgZm9yICggdmFyIGo9MDsgajxpdGVyYXRpb25zOyBqKysgKSB7IC8vIEVpdGhlciAxIG9yIDMgaXRlcmF0aW9uc1xuICAgICAgICAgICAgbGVmdCA9ICgga2V5LmNoYXJDb2RlQXQoIG0rKyApIDw8IDI0ICkgfCAoIGtleS5jaGFyQ29kZUF0KCBtKysgKSA8PCAxNiApIHwgKCBrZXkuY2hhckNvZGVBdCggbSsrICkgPDwgOCApIHwga2V5LmNoYXJDb2RlQXQoIG0rKyApO1xuICAgICAgICAgICAgcmlnaHQgPSAoIGtleS5jaGFyQ29kZUF0KCBtKysgKSA8PCAyNCApIHwgKCBrZXkuY2hhckNvZGVBdCggbSsrICkgPDwgMTYgKSB8ICgga2V5LmNoYXJDb2RlQXQoIG0rKyApIDw8IDggKSB8IGtleS5jaGFyQ29kZUF0KCBtKysgKTtcblxuICAgICAgICAgICAgdGVtcCA9ICggKCBsZWZ0ID4+PiA0ICkgXiByaWdodCApICYgMHgwZjBmMGYwZjsgcmlnaHQgXj0gdGVtcDsgbGVmdCBePSAoIHRlbXAgPDwgNCApO1xuICAgICAgICAgICAgdGVtcCA9ICggKCByaWdodCA+Pj4gLTE2ICkgXiBsZWZ0ICkgJiAweDAwMDBmZmZmOyBsZWZ0IF49IHRlbXA7IHJpZ2h0IF49ICggdGVtcCA8PCAtMTYgKTtcbiAgICAgICAgICAgIHRlbXAgPSAoICggbGVmdCA+Pj4gMiApIF4gcmlnaHQgKSAmIDB4MzMzMzMzMzM7IHJpZ2h0IF49IHRlbXA7IGxlZnQgXj0gKCB0ZW1wIDw8IDIgKTtcbiAgICAgICAgICAgIHRlbXAgPSAoICggcmlnaHQgPj4+IC0xNiApIF4gbGVmdCApICYgMHgwMDAwZmZmZjsgbGVmdCBePSB0ZW1wOyByaWdodCBePSAoIHRlbXAgPDwgLTE2ICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIGxlZnQgPj4+IDEgKSBeIHJpZ2h0ICkgJiAweDU1NTU1NTU1OyByaWdodCBePSB0ZW1wOyBsZWZ0IF49ICggdGVtcCA8PCAxICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIHJpZ2h0ID4+PiA4ICkgXiBsZWZ0ICkgJiAweDAwZmYwMGZmOyBsZWZ0IF49IHRlbXA7IHJpZ2h0IF49ICggdGVtcCA8PCA4ICk7XG4gICAgICAgICAgICB0ZW1wID0gKCAoIGxlZnQgPj4+IDEgKSBeIHJpZ2h0ICkgJiAweDU1NTU1NTU1OyByaWdodCBePSB0ZW1wOyBsZWZ0IF49ICggdGVtcCA8PCAxICk7XG5cbiAgICAgICAgICAgIC8vIFRoZSByaWdodCBzaWRlIG5lZWRzIHRvIGJlIHNoaWZ0ZWQgYW5kIHRvIGdldCB0aGUgbGFzdCBmb3VyIGJpdHMgb2YgdGhlIGxlZnQgc2lkZVxuICAgICAgICAgICAgdGVtcCA9ICggbGVmdCA8PCA4ICkgfCAoICggcmlnaHQgPj4+IDIwICkgJiAweDAwMDAwMGYwICk7XG4gICAgICAgICAgICAvLyBMZWZ0IG5lZWRzIHRvIGJlIHB1dCB1cHNpZGUgZG93blxuICAgICAgICAgICAgbGVmdCA9ICggcmlnaHQgPDwgMjQgKSB8ICggKCByaWdodCA8PCA4ICkgJiAweGZmMDAwMCApIHwgKCAoIHJpZ2h0ID4+PiA4ICkgJiAweGZmMDAgKSB8ICggKCByaWdodCA+Pj4gMjQgKSAmIDB4ZjAgKTtcbiAgICAgICAgICAgIHJpZ2h0ID0gdGVtcDtcblxuICAgICAgICAgICAgLy8gTm93IGdvIHRocm91Z2ggYW5kIHBlcmZvcm0gdGhlc2Ugc2hpZnRzIG9uIHRoZSBsZWZ0IGFuZCByaWdodCBrZXlzXG4gICAgICAgICAgICBmb3IgKCB2YXIgaT0wOyBpIDwgc2hpZnRzLmxlbmd0aDsgaSsrICkge1xuICAgICAgICAgICAgICAgIC8vIFNoaWZ0IHRoZSBrZXlzIGVpdGhlciBvbmUgb3IgdHdvIGJpdHMgdG8gdGhlIGxlZnRcbiAgICAgICAgICAgICAgICBpZiAoIHNoaWZ0c1sgaSBdICkge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0ID0gKCBsZWZ0IDw8IDIgKSB8ICggbGVmdCA+Pj4gMjYgKTsgcmlnaHQgPSAoIHJpZ2h0IDw8IDIgKSB8ICggcmlnaHQgPj4+IDI2ICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdCA9ICggbGVmdCA8PCAxICkgfCAoIGxlZnQgPj4+IDI3ICk7IHJpZ2h0ID0gKCByaWdodCA8PCAxICkgfCAoIHJpZ2h0ID4+PiAyNyApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZWZ0ICY9IC0weGY7IHJpZ2h0ICY9IC0weGY7XG5cbiAgICAgICAgICAgICAgICAvLyBOb3cgYXBwbHkgUEMtMiwgaW4gc3VjaCBhIHdheSB0aGF0IEUgaXMgZWFzaWVyIHdoZW4gZW5jcnlwdGluZyBvciBkZWNyeXB0aW5nXG4gICAgICAgICAgICAgICAgLy8gVGhpcyBjb252ZXJzaW9uIHdpbGwgbG9vayBsaWtlIFBDLTIgZXhjZXB0IG9ubHkgdGhlIGxhc3QgNiBiaXRzIG9mIGVhY2ggYnl0ZSBhcmUgdXNlZFxuICAgICAgICAgICAgICAgIC8vIFJhdGhlciB0aGFuIDQ4IGNvbnNlY3V0aXZlIGJpdHMgYW5kIHRoZSBvcmRlciBvZiBsaW5lcyB3aWxsIGJlIGFjY29yZGluZyB0b1xuICAgICAgICAgICAgICAgIC8vIEhvdyB0aGUgUyBzZWxlY3Rpb24gZnVuY3Rpb25zIHdpbGwgYmUgYXBwbGllZDogUzIsIFM0LCBTNiwgUzgsIFMxLCBTMywgUzUsIFM3XG4gICAgICAgICAgICAgICAgbGVmdHRlbXAgPSBwYzJieXRlczBbIGxlZnQgPj4+IDI4IF0gfCBwYzJieXRlczFbICggbGVmdCA+Pj4gMjQgKSAmIDB4ZiBdIHxcbiAgICAgICAgICAgICAgICAgIHBjMmJ5dGVzMlsgKCBsZWZ0ID4+PiAyMCApICYgMHhmIF0gfCBwYzJieXRlczNbICggbGVmdCA+Pj4gMTYgKSAmIDB4ZiBdIHxcbiAgICAgICAgICAgICAgICAgIHBjMmJ5dGVzNFsgKCBsZWZ0ID4+PiAxMiApICYgMHhmIF0gfCBwYzJieXRlczVbICggbGVmdCA+Pj4gOCApICYgMHhmIF0gfFxuICAgICAgICAgICAgICAgICAgcGMyYnl0ZXM2WyAoIGxlZnQgPj4+IDQgKSAmIDB4ZiBdO1xuICAgICAgICAgICAgICAgIHJpZ2h0dGVtcCA9IHBjMmJ5dGVzN1sgcmlnaHQgPj4+IDI4IF0gfCBwYzJieXRlczhbICggcmlnaHQgPj4+IDI0ICkgJiAweGYgXSB8XG4gICAgICAgICAgICAgICAgICAgIHBjMmJ5dGVzOVsgKCByaWdodCA+Pj4gMjAgKSAmIDB4ZiBdIHwgcGMyYnl0ZXMxMFsgKCByaWdodCA+Pj4gMTYgKSAmIDB4ZiBdIHxcbiAgICAgICAgICAgICAgICAgICAgcGMyYnl0ZXMxMVsgKCByaWdodCA+Pj4gMTIgKSAmIDB4ZiBdIHwgcGMyYnl0ZXMxMlsgKCByaWdodCA+Pj4gOCApICYgMHhmIF0gfFxuICAgICAgICAgICAgICAgICAgICBwYzJieXRlczEzWyAoIHJpZ2h0ID4+PiA0ICkgJiAweGYgXTtcbiAgICAgICAgICAgICAgICB0ZW1wID0gKCAoIHJpZ2h0dGVtcCA+Pj4gMTYgKSBeIGxlZnR0ZW1wICkgJiAweDAwMDBmZmZmO1xuICAgICAgICAgICAgICAgIGtleXNbIG4rKyBdID0gbGVmdHRlbXAgXiB0ZW1wOyBrZXlzWyBuKysgXSA9IHJpZ2h0dGVtcCBeICggdGVtcCA8PCAxNiApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IC8vIEZvciBlYWNoIGl0ZXJhdGlvbnNcbiAgICAgICAgLy8gUmV0dXJuIHRoZSBrZXlzIHdlJ3ZlIGNyZWF0ZWRcbiAgICAgICAgcmV0dXJuIGtleXM7XG4gICAgfSAvLyBFbmQgb2YgZGVzX2NyZWF0ZUtleXNcblxuXG4gICAgLy8gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBURVNUIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIGZ1bmN0aW9uIHN0cmluZ1RvSGV4KCBzICkge1xuICAgICAgICB2YXIgciA9ICcweCc7XG4gICAgICAgIHZhciBoZXhlcyA9IG5ldyBBcnJheSAoICcwJywnMScsJzInLCczJywnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnYScsJ2InLCdjJywnZCcsJ2UnLCdmJyApO1xuICAgICAgICBmb3IgKCB2YXIgaT0wOyBpPHMubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgICAgICByICs9IGhleGVzWyBzLmNoYXJDb2RlQXQoIGkgKSA+PiA0IF0gKyBoZXhlc1sgcy5jaGFyQ29kZUF0KCBpICkgJiAweGYgXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoZXhUb1N0cmluZyggaCApIHtcbiAgICAgICAgdmFyIHIgPSAnJztcbiAgICAgICAgZm9yICggdmFyIGk9ICggaC5zdWJzdHIoIDAsIDIgKT09JzB4JyApPzI6MDsgaTxoLmxlbmd0aDsgaSs9MiApIHtcbiAgICAgICAgICAgIHIgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSAoIHBhcnNlSW50ICggaC5zdWJzdHIgKCBpLCAyICksIDE2ICkgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcjtcbiAgICB9XG5cbiAgICAvLyBWYXIga2V5ID0gXCJ0aGlzIGlzIGEgMjQgYnl0ZSBrZXkgISFcIjtcbiAgICAvLyBWYXIgbWVzc2FnZSA9IFwiVGhpcyBpcyBhIHRlc3QgbWVzc2FnZVwiO1xuICAgIC8vIFZhciBjaXBoZXJ0ZXh0ID0gZGVzIChrZXksIG1lc3NhZ2UsIDEsIDApO1xuICAgIC8vIERvY3VtZW50LndyaXRlbG4gKFwiREVTIFRlc3Q6IFwiICsgc3RyaW5nVG9IZXggKGNpcGhlcnRleHQpKTtcblxuICAgIC8vIGV4cG9ydCBjb21tb24ganMgLyBub2RlIGVsc2UgYnJvd3NlclxuICAgIGlmICggdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzICE9PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgdmFyIGRlc0V4cG9ydCA9IHtcbiAgICAgICAgICAgIGRlczogZGVzLFxuICAgICAgICAgICAgZGVzX2NyZWF0ZUtleXM6IGRlc19jcmVhdGVLZXlzLFxuICAgICAgICAgICAgc3RyaW5nVG9IZXg6IHN0cmluZ1RvSGV4LFxuICAgICAgICAgICAgaGV4VG9TdHJpbmc6IGhleFRvU3RyaW5nXG4gICAgICAgIH07XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZGVzRXhwb3J0O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5kZXMgPSBkZXM7XG4gICAgICAgIHdpbmRvdy5kZXNfY3JlYXRlS2V5cyA9IGRlc19jcmVhdGVLZXlzO1xuICAgICAgICB3aW5kb3cuc3RyaW5nVG9IZXggPSBzdHJpbmdUb0hleDtcbiAgICAgICAgd2luZG93LmhleFRvU3RyaW5nID0gaGV4VG9TdHJpbmc7XG4gICAgfVxufSApKCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBZ0JBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/des.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/jQueryUiWidget.js":
/*!*********************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/jQueryUiWidget.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\r\n* This is being included becaue form conditions is a jQuery ui dependent if we get rid of that dependancy we can get rid of this. \r\n*jQuery UI - v1.12.1 - 2018-07-17\r\n* http://jqueryui.com\r\n* Includes: widget.js\r\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\n(function (factory) {\n  // Commented out the if/else for our webpack build since these dependencies are right here in the file\n  // And do not need to be loaded as external dependencies\n  //\tif ( typeof define === \"function\" && define.amd ) {\n  //\n  //\t\t// AMD. Register as an anonymous module.\n  //\t\tdefine([ \"jquery\" ], factory );\n  //\t} else {\n  //\n  //\t\t// Browser globals\n  //\t\tfactory( jQuery );\n  //\t}\n  // Browser globals\n  factory(jQuery);\n})(function ($) {\n  $.ui = $.ui || {};\n  var version = $.ui.version = \"1.12.1\";\n  /*!\r\n   * jQuery UI Widget 1.12.1\r\n   * http://jqueryui.com\r\n   *\r\n   * Copyright jQuery Foundation and other contributors\r\n   * Released under the MIT license.\r\n   * http://jquery.org/license\r\n   */\n  //>>label: Widget\n  //>>group: Core\n  //>>description: Provides a factory for creating stateful widgets with a common API.\n  //>>docs: http://api.jqueryui.com/jQuery.widget/\n  //>>demos: http://jqueryui.com/widget/\n\n  var widgetUuid = 0;\n  var widgetSlice = Array.prototype.slice;\n\n  $.cleanData = function (orig) {\n    return function (elems) {\n      var events, elem, i;\n\n      for (i = 0; (elem = elems[i]) != null; i++) {\n        try {\n          // Only trigger remove when necessary to save time\n          events = $._data(elem, \"events\");\n\n          if (events && events.remove) {\n            $(elem).triggerHandler(\"remove\");\n          } // Http://bugs.jquery.com/ticket/8235\n\n        } catch (e) {}\n      }\n\n      orig(elems);\n    };\n  }($.cleanData);\n\n  $.widget = function (name, base, prototype) {\n    var existingConstructor, constructor, basePrototype; // ProxiedPrototype allows the provided prototype to remain unmodified\n    // so that it can be used as a mixin for multiple widgets (#8876)\n\n    var proxiedPrototype = {};\n    var namespace = name.split(\".\")[0];\n    name = name.split(\".\")[1];\n    var fullName = namespace + \"-\" + name;\n\n    if (!prototype) {\n      prototype = base;\n      base = $.Widget;\n    }\n\n    if ($.isArray(prototype)) {\n      prototype = $.extend.apply(null, [{}].concat(prototype));\n    } // Create selector for plugin\n\n\n    $.expr[\":\"][fullName.toLowerCase()] = function (elem) {\n      return !!$.data(elem, fullName);\n    };\n\n    $[namespace] = $[namespace] || {};\n    existingConstructor = $[namespace][name];\n\n    constructor = $[namespace][name] = function (options, element) {\n      // Allow instantiation without \"new\" keyword\n      if (!this._createWidget) {\n        return new constructor(options, element);\n      } // Allow instantiation without initializing for simple inheritance\n      // must use \"new\" keyword (the code above always passes args)\n\n\n      if (arguments.length) {\n        this._createWidget(options, element);\n      }\n    }; // Extend with the existing constructor to carry over any static properties\n\n\n    $.extend(constructor, existingConstructor, {\n      version: prototype.version,\n      // Copy the object used to create the prototype in case we need to\n      // redefine the widget later\n      _proto: $.extend({}, prototype),\n      // Track widgets that inherit from this widget in case this widget is\n      // redefined after a widget inherits from it\n      _childConstructors: []\n    });\n    basePrototype = new base(); // We need to make the options hash a property directly on the new instance\n    // otherwise we'll modify the options hash on the prototype that we're\n    // inheriting from\n\n    basePrototype.options = $.widget.extend({}, basePrototype.options);\n    $.each(prototype, function (prop, value) {\n      if (!$.isFunction(value)) {\n        proxiedPrototype[prop] = value;\n        return;\n      }\n\n      proxiedPrototype[prop] = function () {\n        function _super() {\n          return base.prototype[prop].apply(this, arguments);\n        }\n\n        function _superApply(args) {\n          return base.prototype[prop].apply(this, args);\n        }\n\n        return function () {\n          var __super = this._super;\n          var __superApply = this._superApply;\n          var returnValue;\n          this._super = _super;\n          this._superApply = _superApply;\n          returnValue = value.apply(this, arguments);\n          this._super = __super;\n          this._superApply = __superApply;\n          return returnValue;\n        };\n      }();\n    });\n    constructor.prototype = $.widget.extend(basePrototype, {\n      // TODO: remove support for widgetEventPrefix\n      // always use the name + a colon as the prefix, e.g., draggable:start\n      // don't prefix for widgets that aren't DOM-based\n      widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name\n    }, proxiedPrototype, {\n      constructor: constructor,\n      namespace: namespace,\n      widgetName: name,\n      widgetFullName: fullName\n    }); // If this widget is being redefined then we need to find all widgets that\n    // are inheriting from it and redefine all of them so that they inherit from\n    // the new version of this widget. We're essentially trying to replace one\n    // level in the prototype chain.\n\n    if (existingConstructor) {\n      $.each(existingConstructor._childConstructors, function (i, child) {\n        var childPrototype = child.prototype; // Redefine the child widget using the same prototype that was\n        // originally used, but inherit from the new version of the base\n\n        $.widget(childPrototype.namespace + \".\" + childPrototype.widgetName, constructor, child._proto);\n      }); // Remove the list of existing child constructors from the old constructor\n      // so the old child constructors can be garbage collected\n\n      delete existingConstructor._childConstructors;\n    } else {\n      base._childConstructors.push(constructor);\n    }\n\n    $.widget.bridge(name, constructor);\n    return constructor;\n  };\n\n  $.widget.extend = function (target) {\n    var input = widgetSlice.call(arguments, 1);\n    var inputIndex = 0;\n    var inputLength = input.length;\n    var key;\n    var value;\n\n    for (; inputIndex < inputLength; inputIndex++) {\n      for (key in input[inputIndex]) {\n        value = input[inputIndex][key];\n\n        if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {\n          // Clone objects\n          if ($.isPlainObject(value)) {\n            target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) : // Don't extend strings, arrays, etc. with objects\n            $.widget.extend({}, value); // Copy everything else by reference\n          } else {\n            target[key] = value;\n          }\n        }\n      }\n    }\n\n    return target;\n  };\n\n  $.widget.bridge = function (name, object) {\n    var fullName = object.prototype.widgetFullName || name;\n\n    $.fn[name] = function (options) {\n      var isMethodCall = typeof options === \"string\";\n      var args = widgetSlice.call(arguments, 1);\n      var returnValue = this;\n\n      if (isMethodCall) {\n        // If this is an empty collection, we need to have the instance method\n        // return undefined instead of the jQuery instance\n        if (!this.length && options === \"instance\") {\n          returnValue = undefined;\n        } else {\n          this.each(function () {\n            var methodValue;\n            var instance = $.data(this, fullName);\n\n            if (options === \"instance\") {\n              returnValue = instance;\n              return false;\n            }\n\n            if (!instance) {\n              return $.error(\"cannot call methods on \" + name + \" prior to initialization; \" + \"attempted to call method '\" + options + \"'\");\n            }\n\n            if (!$.isFunction(instance[options]) || options.charAt(0) === \"_\") {\n              return $.error(\"no such method '\" + options + \"' for \" + name + \" widget instance\");\n            }\n\n            methodValue = instance[options].apply(instance, args);\n\n            if (methodValue !== instance && methodValue !== undefined) {\n              returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;\n              return false;\n            }\n          });\n        }\n      } else {\n        // Allow multiple hashes to be passed on init\n        if (args.length) {\n          options = $.widget.extend.apply(null, [options].concat(args));\n        }\n\n        this.each(function () {\n          var instance = $.data(this, fullName);\n\n          if (instance) {\n            instance.option(options || {});\n\n            if (instance._init) {\n              instance._init();\n            }\n          } else {\n            $.data(this, fullName, new object(options, this));\n          }\n        });\n      }\n\n      return returnValue;\n    };\n  };\n\n  $.Widget = function ()\n  /* options, element */\n  {};\n\n  $.Widget._childConstructors = [];\n  $.Widget.prototype = {\n    widgetName: \"widget\",\n    widgetEventPrefix: \"\",\n    defaultElement: \"<div>\",\n    options: {\n      classes: {},\n      disabled: false,\n      // Callbacks\n      create: null\n    },\n    _createWidget: function (options, element) {\n      element = $(element || this.defaultElement || this)[0];\n      this.element = $(element);\n      this.uuid = widgetUuid++;\n      this.eventNamespace = \".\" + this.widgetName + this.uuid;\n      this.bindings = $();\n      this.hoverable = $();\n      this.focusable = $();\n      this.classesElementLookup = {};\n\n      if (element !== this) {\n        $.data(element, this.widgetFullName, this);\n\n        this._on(true, this.element, {\n          remove: function (event) {\n            if (event.target === element) {\n              this.destroy();\n            }\n          }\n        });\n\n        this.document = $(element.style ? // Element within the document\n        element.ownerDocument : // Element is window or document\n        element.document || element);\n        this.window = $(this.document[0].defaultView || this.document[0].parentWindow);\n      }\n\n      this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);\n\n      this._create();\n\n      if (this.options.disabled) {\n        this._setOptionDisabled(this.options.disabled);\n      }\n\n      this._trigger(\"create\", null, this._getCreateEventData());\n\n      this._init();\n    },\n    _getCreateOptions: function () {\n      return {};\n    },\n    _getCreateEventData: $.noop,\n    _create: $.noop,\n    _init: $.noop,\n    destroy: function () {\n      var that = this;\n\n      this._destroy();\n\n      $.each(this.classesElementLookup, function (key, value) {\n        that._removeClass(value, key);\n      }); // We can probably remove the unbind calls in 2.0\n      // all event bindings should go through this._on()\n\n      this.element.off(this.eventNamespace).removeData(this.widgetFullName);\n      this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"); // Clean up events and states\n\n      this.bindings.off(this.eventNamespace);\n    },\n    _destroy: $.noop,\n    widget: function () {\n      return this.element;\n    },\n    option: function (key, value) {\n      var options = key;\n      var parts;\n      var curOption;\n      var i;\n\n      if (arguments.length === 0) {\n        // Don't return a reference to the internal hash\n        return $.widget.extend({}, this.options);\n      }\n\n      if (typeof key === \"string\") {\n        // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n        options = {};\n        parts = key.split(\".\");\n        key = parts.shift();\n\n        if (parts.length) {\n          curOption = options[key] = $.widget.extend({}, this.options[key]);\n\n          for (i = 0; i < parts.length - 1; i++) {\n            curOption[parts[i]] = curOption[parts[i]] || {};\n            curOption = curOption[parts[i]];\n          }\n\n          key = parts.pop();\n\n          if (arguments.length === 1) {\n            return curOption[key] === undefined ? null : curOption[key];\n          }\n\n          curOption[key] = value;\n        } else {\n          if (arguments.length === 1) {\n            return this.options[key] === undefined ? null : this.options[key];\n          }\n\n          options[key] = value;\n        }\n      }\n\n      this._setOptions(options);\n\n      return this;\n    },\n    _setOptions: function (options) {\n      var key;\n\n      for (key in options) {\n        this._setOption(key, options[key]);\n      }\n\n      return this;\n    },\n    _setOption: function (key, value) {\n      if (key === \"classes\") {\n        this._setOptionClasses(value);\n      }\n\n      this.options[key] = value;\n\n      if (key === \"disabled\") {\n        this._setOptionDisabled(value);\n      }\n\n      return this;\n    },\n    _setOptionClasses: function (value) {\n      var classKey, elements, currentElements;\n\n      for (classKey in value) {\n        currentElements = this.classesElementLookup[classKey];\n\n        if (value[classKey] === this.options.classes[classKey] || !currentElements || !currentElements.length) {\n          continue;\n        } // We are doing this to create a new jQuery object because the _removeClass() call\n        // on the next line is going to destroy the reference to the current elements being\n        // tracked. We need to save a copy of this collection so that we can add the new classes\n        // below.\n\n\n        elements = $(currentElements.get());\n\n        this._removeClass(currentElements, classKey); // We don't use _addClass() here, because that uses this.options.classes\n        // for generating the string of classes. We want to use the value passed in from\n        // _setOption(), this is the new value of the classes option which was passed to\n        // _setOption(). We pass this value directly to _classes().\n\n\n        elements.addClass(this._classes({\n          element: elements,\n          keys: classKey,\n          classes: value,\n          add: true\n        }));\n      }\n    },\n    _setOptionDisabled: function (value) {\n      this._toggleClass(this.widget(), this.widgetFullName + \"-disabled\", null, !!value); // If the widget is becoming disabled, then nothing is interactive\n\n\n      if (value) {\n        this._removeClass(this.hoverable, null, \"ui-state-hover\");\n\n        this._removeClass(this.focusable, null, \"ui-state-focus\");\n      }\n    },\n    enable: function () {\n      return this._setOptions({\n        disabled: false\n      });\n    },\n    disable: function () {\n      return this._setOptions({\n        disabled: true\n      });\n    },\n    _classes: function (options) {\n      var full = [];\n      var that = this;\n      options = $.extend({\n        element: this.element,\n        classes: this.options.classes || {}\n      }, options);\n\n      function processClassString(classes, checkOption) {\n        var current, i;\n\n        for (i = 0; i < classes.length; i++) {\n          current = that.classesElementLookup[classes[i]] || $();\n\n          if (options.add) {\n            current = $($.unique(current.get().concat(options.element.get())));\n          } else {\n            current = $(current.not(options.element).get());\n          }\n\n          that.classesElementLookup[classes[i]] = current;\n          full.push(classes[i]);\n\n          if (checkOption && options.classes[classes[i]]) {\n            full.push(options.classes[classes[i]]);\n          }\n        }\n      }\n\n      this._on(options.element, {\n        \"remove\": \"_untrackClassesElement\"\n      });\n\n      if (options.keys) {\n        processClassString(options.keys.match(/\\S+/g) || [], true);\n      }\n\n      if (options.extra) {\n        processClassString(options.extra.match(/\\S+/g) || []);\n      }\n\n      return full.join(\" \");\n    },\n    _untrackClassesElement: function (event) {\n      var that = this;\n      $.each(that.classesElementLookup, function (key, value) {\n        if ($.inArray(event.target, value) !== -1) {\n          that.classesElementLookup[key] = $(value.not(event.target).get());\n        }\n      });\n    },\n    _removeClass: function (element, keys, extra) {\n      return this._toggleClass(element, keys, extra, false);\n    },\n    _addClass: function (element, keys, extra) {\n      return this._toggleClass(element, keys, extra, true);\n    },\n    _toggleClass: function (element, keys, extra, add) {\n      add = typeof add === \"boolean\" ? add : extra;\n      var shift = typeof element === \"string\" || element === null,\n          options = {\n        extra: shift ? keys : extra,\n        keys: shift ? element : keys,\n        element: shift ? this.element : element,\n        add: add\n      };\n      options.element.toggleClass(this._classes(options), add);\n      return this;\n    },\n    _on: function (suppressDisabledCheck, element, handlers) {\n      var delegateElement;\n      var instance = this; // No suppressDisabledCheck flag, shuffle arguments\n\n      if (typeof suppressDisabledCheck !== \"boolean\") {\n        handlers = element;\n        element = suppressDisabledCheck;\n        suppressDisabledCheck = false;\n      } // No element argument, shuffle and use this.element\n\n\n      if (!handlers) {\n        handlers = element;\n        element = this.element;\n        delegateElement = this.widget();\n      } else {\n        element = delegateElement = $(element);\n        this.bindings = this.bindings.add(element);\n      }\n\n      $.each(handlers, function (event, handler) {\n        function handlerProxy() {\n          // Allow widgets to customize the disabled handling\n          // - disabled as an array instead of boolean\n          // - disabled class as method for disabling individual parts\n          if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass(\"ui-state-disabled\"))) {\n            return;\n          }\n\n          return (typeof handler === \"string\" ? instance[handler] : handler).apply(instance, arguments);\n        } // Copy the guid so direct unbinding works\n\n\n        if (typeof handler !== \"string\") {\n          handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++;\n        }\n\n        var match = event.match(/^([\\w:-]*)\\s*(.*)$/);\n        var eventName = match[1] + instance.eventNamespace;\n        var selector = match[2];\n\n        if (selector) {\n          delegateElement.on(eventName, selector, handlerProxy);\n        } else {\n          element.on(eventName, handlerProxy);\n        }\n      });\n    },\n    _off: function (element, eventName) {\n      eventName = (eventName || \"\").split(\" \").join(this.eventNamespace + \" \") + this.eventNamespace;\n      element.off(eventName).off(eventName); // Clear the stack to avoid memory leaks (#10056)\n\n      this.bindings = $(this.bindings.not(element).get());\n      this.focusable = $(this.focusable.not(element).get());\n      this.hoverable = $(this.hoverable.not(element).get());\n    },\n    _delay: function (handler, delay) {\n      function handlerProxy() {\n        return (typeof handler === \"string\" ? instance[handler] : handler).apply(instance, arguments);\n      }\n\n      var instance = this;\n      return setTimeout(handlerProxy, delay || 0);\n    },\n    _hoverable: function (element) {\n      this.hoverable = this.hoverable.add(element);\n\n      this._on(element, {\n        mouseenter: function (event) {\n          this._addClass($(event.currentTarget), null, \"ui-state-hover\");\n        },\n        mouseleave: function (event) {\n          this._removeClass($(event.currentTarget), null, \"ui-state-hover\");\n        }\n      });\n    },\n    _focusable: function (element) {\n      this.focusable = this.focusable.add(element);\n\n      this._on(element, {\n        focusin: function (event) {\n          this._addClass($(event.currentTarget), null, \"ui-state-focus\");\n        },\n        focusout: function (event) {\n          this._removeClass($(event.currentTarget), null, \"ui-state-focus\");\n        }\n      });\n    },\n    _trigger: function (type, event, data) {\n      var prop, orig;\n      var callback = this.options[type];\n      data = data || {};\n      event = $.Event(event);\n      event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase(); // The original event may come from any element\n      // so we need to reset the target on the new event\n\n      event.target = this.element[0]; // Copy original event properties over to the new event\n\n      orig = event.originalEvent;\n\n      if (orig) {\n        for (prop in orig) {\n          if (!(prop in event)) {\n            event[prop] = orig[prop];\n          }\n        }\n      }\n\n      this.element.trigger(event, data);\n      return !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n    }\n  };\n  $.each({\n    show: \"fadeIn\",\n    hide: \"fadeOut\"\n  }, function (method, defaultEffect) {\n    $.Widget.prototype[\"_\" + method] = function (element, options, callback) {\n      if (typeof options === \"string\") {\n        options = {\n          effect: options\n        };\n      }\n\n      var hasOptions;\n      var effectName = !options ? method : options === true || typeof options === \"number\" ? defaultEffect : options.effect || defaultEffect;\n      options = options || {};\n\n      if (typeof options === \"number\") {\n        options = {\n          duration: options\n        };\n      }\n\n      hasOptions = !$.isEmptyObject(options);\n      options.complete = callback;\n\n      if (options.delay) {\n        element.delay(options.delay);\n      }\n\n      if (hasOptions && $.effects && $.effects.effect[effectName]) {\n        element[method](options);\n      } else if (effectName !== method && element[effectName]) {\n        element[effectName](options.duration, options.easing, callback);\n      } else {\n        element.queue(function (next) {\n          $(this)[method]();\n\n          if (callback) {\n            callback.call(element[0]);\n          }\n\n          next();\n        });\n      }\n    };\n  });\n  var widget = $.widget;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/jQueryUiWidget.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.common.js":
/*!*****************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.common.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Ontraport's public facing landing page scripts. These functions are designed to be available both in app\n * and in public facing files\n */\n(function ($, context) {\n  // Don't overwrite our global object\n  var op = context.op || (context.op = {});\n  /**\n  * Border hook used by both the templateprocessor and webcomponents. It takes a settings object discribing borders\n  * and appliest them to the incoming elements.\n  * @param {object} element DOM object\n  * @param {object} settings object describing border and shadow settings.\n  * @param {object} blockSettings block settings object handy for determining if elements exist in a dynamic element.\n  */\n\n  op.border = function (element, settings = {}, blockData) {\n    var _nonZeroBorderRadiusTest = function (styleValues) {\n      return styleValues['border-top-left-radius'] && styleValues['border-top-left-radius'] !== '0px' || styleValues['border-top-right-radius'] && styleValues['border-top-right-radius'] !== '0px' || styleValues['border-bottom-left-radius'] && styleValues['border-bottom-left-radius'] !== '0px' || styleValues['border-bottom-right-radius'] && styleValues['border-bottom-right-radius'] !== '0px';\n    };\n\n    var styleSheetOptions = {},\n        borderClass = 'opt-border'; // If a custom border class is passed in, also pass it along to the stylesheet attribute handler\n\n    if (settings.blockUserDefinedData) {\n      styleSheetOptions.blockUserDefinedData = settings.blockUserDefinedData[0];\n    }\n\n    if (settings['custom-border-class']) {\n      borderClass = settings['custom-border-class'];\n      styleSheetOptions.namespace = settings['custom-border-class'];\n    } // Remove the following classes from the element\n\n\n    var classesToRemove = ['border-arrow--top', 'border-arrow--bottom', 'z-depth-00', 'z-depth-10', 'z-depth-20', 'z-depth-30', 'z-depth-40', 'z-depth-50', 'z-depth-10--hover', 'z-depth-20--hover', 'z-depth-30--hover', 'z-depth-40--hover', 'z-depth-50--hover'];\n    classesToRemove.forEach(function (className) {\n      this.classList.remove(className);\n    }, element); // Remove all classes that container \"color-border\" in them (all border classes)\n\n    var removeColorClasses = [];\n\n    for (var i = 0, l = element.classList.length, c; i < l; i++) {\n      c = element.classList[i];\n\n      if (c.includes('color-border')) {\n        removeColorClasses.push(c);\n      }\n    } // Wrap this in a length check for f'n IE ll\n\n\n    if (removeColorClasses.length) {\n      element.classList.remove(...removeColorClasses);\n    } // Apply the \"zindex\" as an attr so the ajent and editor can apply the zindex in a decending order\n\n\n    var zIndex = settings.applyZindex && settings['z-index'];\n    element.removeAttribute('data-zindex');\n\n    if (zIndex) {\n      element.setAttribute('data-zindex', zIndex);\n    } // Apply box shadow if present\n\n\n    if (settings['box-shadow']) {\n      element.classList.add(settings['box-shadow']);\n    } // Apply hover box shadow if present\n\n\n    if (settings['box-shadow-hover']) {\n      element.classList.add(settings['box-shadow-hover'] + '--hover');\n    } // Special logic for block borders. Sets content box shadow (on the container around the rows)\n\n\n    var $contentContainer = $(element).find('> .container');\n\n    if ($contentContainer.length && (settings['content-box-shadow'] || settings['content-box-shadow-hover'])) {\n      $contentContainer.removeClass(classesToRemove.join(' '));\n\n      if (settings['content-box-shadow']) {\n        $contentContainer.addClass(settings['content-box-shadow']);\n      }\n\n      if (settings['content-box-shadow-hover']) {\n        $contentContainer.addClass(settings['content-box-shadow-hover'] + '--hover');\n      }\n    }\n\n    $contentContainer = null; // Apply border arrow if present\n\n    if (settings['border-arrow']) {\n      // Only append the element if we have a background we can mimic.\n      if (settings.background && settings.background.background_type == 'colors' && settings.background.colors && settings.background.colors.color_type == 'solid') {\n        var borderArrow = document.createElement('div');\n        borderArrow.classList.add('border-arrow--' + settings['border-arrow']);\n        var target = element.querySelector('[class*=\"-overlay\"]'); // Switch order of attrs, so the border is the last one, only target bg-color-overlay\n\n        if (target) {\n          target.appendChild(borderArrow);\n        }\n\n        target = null;\n      }\n    }\n\n    element.classList.add(borderClass);\n    var styleValues = $.extend(true, {}, settings),\n        borderDirections = ['border', 'border-top', 'border-bottom', 'border-left', 'border-right']; // Loop over each border direction (all, top, bottom, left right) and add theme classes if needed\n\n    for (var i = 0, l = borderDirections.length; i < l; i++) {\n      var borderDir = borderDirections[i],\n          borderColor = styleValues[borderDir + '-color'],\n          borderColorHover = styleValues[borderDir + '-color-hover'],\n          borderColorFocus = styleValues[borderDir + '-color-focus'];\n\n      if (borderColor !== undefined && borderColor !== 'transparent' && borderColor.indexOf('#') === -1) {\n        element.classList.add(borderColor + '-' + borderDir);\n\n        if (borderArrow) {\n          borderArrow.classList.add(borderColor + '-' + borderDir);\n        }\n\n        delete styleValues[borderDir + '-color']; //\n        // Add value to for border arrow\n      }\n\n      if (borderColorHover !== undefined) {\n        if (borderColorHover !== 'transparent' && borderColorHover.indexOf('#') === -1) {\n          element.classList.add(borderColorHover + '-' + borderDir + '--hover');\n\n          if (borderArrow) {\n            borderArrow.classList.add(borderColorHover + '-' + borderDir + '--hover');\n          }\n\n          delete styleValues[borderDir + '-color-hover'];\n        } else if (borderDir !== 'border') {\n          // If style is an individual direction and is not class based, make it important since theme hover classes also use important\n          styleValues[borderDir + '-color-hover'] = styleValues[borderDir + '-color-hover'] + ' !important';\n        }\n      }\n\n      if (borderColorFocus !== undefined) {\n        if (borderColorFocus !== 'transparent' && borderColorFocus.indexOf('#') === -1) {\n          element.classList.add(borderColorFocus + '-' + borderDir + '--focus');\n\n          if (borderArrow) {\n            borderArrow.classList.add(borderColorFocus + '-' + borderDir + '--focus');\n          }\n\n          delete styleValues[borderDir + '-color-focus'];\n        } else if (borderDir !== 'border') {\n          // If style is an individual direction and is not class based, make it important since theme focus classes also use important\n          styleValues[borderDir + '-color-focus'] = styleValues[borderDir + '-color-focus'] + ' !important';\n        }\n      }\n    }\n\n    var selectorCarat = ' > ',\n        styleObj = {},\n        hideOverflow = false; // If contained in the 'el__style' wrapper, we are dealing with an element, not a column or block\n    // Remove the immediate selector so that the stylesheet hook will concat the element opt-id\n\n    if (element.closest('.el__style') || element.classList.contains('opt-element') || element.closest('.opt-element')) {\n      // If element has opt-id, make the selector empty string so that the opt-id and opt-border classes touch in the selector\n      // If element does not have an opt-id make selector a space that the selector targets the opt-border class INSIDE the opt-id\n      selectorCarat = element.hasAttribute('opt-id') ? '' : ' ';\n    } else if (_nonZeroBorderRadiusTest(styleValues)) {\n      // Make a style sheet entry that applies border radius to the background. This way we don't need overflow hidden to cover the bg element.\n      styleObj[' .js-opt-bg-img'] = ['border-top-left-radius', 'border-top-right-radius', 'border-bottom-left-radius', 'border-bottom-right-radius']; // If we have border radius and we are dealing with a column, hide the overflow\n\n      if (element.classList.contains('col__style')) {\n        hideOverflow = true;\n      }\n    }\n\n    styleObj[selectorCarat + '.' + borderClass] = ['border-style', 'border-color', 'border-width', 'border-top-left-radius', 'border-top-right-radius', 'border-bottom-left-radius', 'border-bottom-right-radius'];\n\n    if (hideOverflow) {\n      styleObj[selectorCarat + '.' + borderClass].push('overflow');\n      styleValues.overflow = 'hidden';\n    } // Increase the selector weight for individual border directions so they are equal to the selector weight of the theme classes (so they will override any \"all border\" theme styles)\n\n\n    styleObj[selectorCarat + '.' + borderClass + '.' + borderClass] = ['border-top-color', 'border-top-width', 'border-right-color', 'border-right-width', 'border-bottom-color', 'border-bottom-width', 'border-left-color', 'border-left-width'];\n    styleObj[selectorCarat + '.' + borderClass + ':hover'] = [['border-color', 'border-color-hover'], ['border-top-color', 'border-top-color-hover'], ['border-right-color', 'border-right-color-hover'], ['border-bottom-color', 'border-bottom-color-hover'], ['border-left-color', 'border-left-color-hover']];\n    let focusSelector = selectorCarat + '.' + borderClass + ':focus'; // Timestamp fields don't get focus because they are disabled, so leverage the open class\n\n    if (settings.isTimestamp) {\n      focusSelector = '.opt-date-time__picker--open .' + borderClass;\n    }\n\n    styleObj[focusSelector] = [['border-color', 'border-color-focus'], ['border-top-color', 'border-top-color-focus'], ['border-right-color', 'border-right-color-focus'], ['border-bottom-color', 'border-bottom-color-focus'], ['border-left-color', 'border-left-color-focus']]; // Border arrow styles\n    //\n\n    styleObj[selectorCarat + '.' + borderClass + '.' + borderClass + ' > .bg-color-overlay > .border-arrow--bottom'] = ['border-style', 'border-color', 'border-width', // Border left, top\n    'border-bottom-width', ['border-left-color', 'border-bottom-color'], ['border-top-color', 'border-bottom-color']];\n    op.stylesheet(element, styleValues, styleObj, styleSheetOptions, blockData);\n  };\n  /*\n  * Make gradient CSS rules.\n  * @param gradients {object} gradient meta data used to construct the css rules of the form:\n  *        {\n  *           op-gradient-lr-aa00ff-7c4dff: {\n  *               direction: \"lr\",\n  *               color1: \"#aa00ff\",\n  *               color2: \"#7c4dff\",\n  *               hover: false\n  *           }\n  *        }\n  * @param themeColors {object} theme color object defining all the theme colors\n  * @return renderedCSS {string} string of css rules sutable for adding to html. Of the form:\n  *        \".op-gradient-lr-aa00ff-7c4dff { background:linear-gradient(to right, #aa00ff, #7c4dff)}\"\n  */\n\n\n  op.makeGradientCSS = function (gradients, themeColors) {\n    // Mapping of short gradient direction values to their long CSS rule values\n    let GRADIENT_DIRECTIONS = {\n      tb: 'to bottom',\n      lr: 'to right',\n      tlbr: 'to bottom right',\n      trbl: 'to bottom left',\n      radial: 'radial'\n    };\n    let renderedCSS = '';\n\n    for (var gradientClass in gradients) {\n      var gradientObj = gradients[gradientClass],\n          gradientDirection = GRADIENT_DIRECTIONS[gradientObj.direction];\n\n      var generatedGradientObj = op._generateGradientCssRule(gradientObj.color1, gradientObj.color2, themeColors); // Make sure that space before the { is present!\n\n\n      var gradientCSS = '';\n\n      if (gradientDirection === 'radial') {\n        gradientCSS = ' { background:radial-gradient(' + generatedGradientObj.color1 + ', ' + generatedGradientObj.color2 + ')}';\n      } else {\n        gradientCSS = ' { background:linear-gradient(' + gradientDirection + ', ' + generatedGradientObj.color1 + ', ' + generatedGradientObj.color2 + ')}';\n      } // Add hover pseudo-selector:\n      // .op-gradient-lr-primary-dark--hover:hover\n\n\n      if (gradientObj.hover) {\n        gradientClass += ':hover';\n      } // Final String:\n      // .op-gradient-lr-primary-dark { linear-gradient(to right, #FF0000, #000000) }\n\n\n      renderedCSS += '.' + gradientClass + gradientCSS;\n    }\n\n    return renderedCSS;\n  },\n  /**\n  * @brief Generate the appropriate colors for gradients.\n  * @param color1 String: A string color. This could be a hex color (i.e. #FFFAAA) or a theme color name (i.e. primary-color)\n  * @param color2 String: A string color. This could be a hex color (i.e. #FFFAAA) or a theme color name (i.e. primary-color)\n  * @param themeColors Object: An object containing all the theme colors. This will be used to translate \"primary-color\" to a hex color.\n  * @returns {Object} An object that contains the two colors to be used in the gradient.\n  *\n  * {\n  *      color1: hex color value\n  *      colro2: hex color value\n  * }\n  *\n  *          color1 and color2 have to be hex color values\n  * @private\n  */\n  op._generateGradientCssRule = function (color1, color2, themeColors) {\n    var isColor1Transparent = color1 === 'transparent',\n        isColor2Transparent = color2 === 'transparent',\n        isColor1Hex = color1.indexOf('#') !== -1,\n        isColor2Hex = color2.indexOf('#') !== -1,\n        // It's something like 'primary-color or 'dark-color'\n    isColor1ThemedAndNotTransparent = !isColor1Transparent && !isColor1Hex,\n        isColor2ThemedAndNotTransparent = !isColor2Transparent && !isColor2Hex; // We have to do special handling for transparent\n    // Transparent isn't included in the themeData.theme_colors object.\n    // And you can't just specify the colors to be 'transparent' because\n    // Safari is a fool\n    // https://css-tricks.com/thing-know-gradients-transparent-black/\n    // If one color is transparent and the other isn't, then the transparent color\n    // Should be come the RGBA version of the other color\n\n    if (isColor1Transparent && isColor2Transparent) {\n      // If both colors are transparent, just use transparent white for both\n      color1 = op.hexToRgba('#FFFFFF', 0);\n      color2 = color1;\n    } else if (isColor1ThemedAndNotTransparent && isColor2ThemedAndNotTransparent) {\n      color1 = themeColors[color1];\n      color2 = themeColors[color2];\n    } else if (isColor1Transparent && isColor2ThemedAndNotTransparent) {\n      color2 = themeColors[color2];\n      color1 = op.hexToRgba(color2, 0);\n    } else if (isColor2Transparent && isColor1ThemedAndNotTransparent) {\n      color1 = themeColors[color1];\n      color2 = op.hexToRgba(color1, 0);\n    } else if (isColor1Hex && isColor2Transparent) {\n      color2 = op.hexToRgba(color1, 0);\n    } else if (isColor2Hex && isColor1Transparent) {\n      color1 = op.hexToRgba(color2, 0);\n    } else if (isColor1Hex && isColor2ThemedAndNotTransparent) {\n      color2 = themeColors[color2];\n    } else if (isColor2Hex && isColor1ThemedAndNotTransparent) {\n      color1 = themeColors[color1];\n    }\n\n    return {\n      color1: color1,\n      color2: color2\n    };\n  };\n  /**\n  * @brief Convert a color hex string to a rgba value.\n  *\n  * There is an exact copy of the function in temlateprocessor/hooks/column.js.\n  * I just didn't want to make a dependency to it, so I included it there too.\n  *\n  * #d4e157 => rgba(212, 225, 87, 1)\n  *\n  * Alpha value defaults to 1 if none is specified\n  * https://stackoverflow.com/questions/21646738/convert-hex-to-rgba\n  * @param hex\n  * @param alpha (optional)\n  * @returns {string}\n  * @private\n  */\n\n  op.hexToRgba = function (hex, alpha) {\n    var alpha = alpha === undefined ? 1 : alpha,\n        ret;\n\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n      ret = hex.substring(1).split(''); // Handle hex shorthand inputs\n\n      if (ret.length === 3) {\n        ret = [ret[0], ret[0], ret[1], ret[1], ret[2], ret[2]];\n      }\n\n      ret = '0x' + ret.join('');\n      return 'rgba(' + [ret >> 16 & 255, ret >> 8 & 255, ret & 255].join(',') + ',' + alpha + ')';\n    } else {\n      return 'rgba(0,0,0,0)';\n    }\n  }, // Dup of the template processor get attribute helper. So little code here I thought it prudent to\n  // Duplicate it as opposed to setting up another dependancy. This is required byt the stylesheet method.\n  op.getAttribute = function (attrName) {\n    return function (element) {\n      var ret = [];\n\n      if (element !== undefined) {\n        return element.getAttribute(attrName);\n      }\n\n      for (var i = 0, l = this.length, v; i < l; i++) {\n        v = this[i].getAttribute(attrName);\n\n        if (v && v.indexOf('{field') === -1) {\n          ret.push(v);\n        }\n      }\n\n      return ret;\n    };\n  };\n  op.getId = op.getAttribute('opt-id');\n  /**\n  * Create a style tag for the target element\n  * @author Jesse Baird<jesse@ontraport.com>\n  * @param  {[type]} element   DOM element\n  * @param  {[type]} data      object { background: 'pink', 'border-color'}\n  * // Baffaling paramter name\n  * @param  {[type]} decBlocks {\n  *                             '': [ 'background', ['color', 'dataPropNameThatsNotColor']]\n  *\n  *                             }\n  *  * @param {object} blockSettings block settings object handy for determining if elements exist in a dynamic element.\n  * @return {[type]}           [description]\n  *\n  */\n\n  op.stylesheet = function (element, data, decBlocks, options, blockData) {\n    var _blockData$, _blockData$$settings;\n\n    var closestBlock = element.closest('[opt-type=\"block-v3\"]'),\n        blockId = closestBlock ? this.getId(closestBlock) : '',\n        selectorPrefix = blockId ? '.opt-id-' + blockId : '',\n        styleTagId = blockId ? 's' + blockId : 'border-style',\n        closestColumn = element.closest('[opt-type=\"column\"]'),\n        elContainer = element.closest('.el__style'),\n        isDynamicBlock = false,\n        elId; // Determine if we are working with a dynamic block or an element inside a dynamic block\n\n    if (blockData && Array.isArray(blockData) && ((_blockData$ = blockData[0]) === null || _blockData$ === void 0 ? void 0 : (_blockData$$settings = _blockData$.settings) === null || _blockData$$settings === void 0 ? void 0 : _blockData$$settings.dynamicBlockSettings) || closestBlock && closestBlock.getAttribute('data-dc')) {\n      isDynamicBlock = true;\n    } // If element is an actual opt-element (not column or block), get its ID\n\n\n    if (elContainer !== null) {\n      elId = this.getId(element); // If elId is null, the element target passed into this hook is not the actually opt-element. For example, inputs.\n\n      if (elId === null) {\n        elId = this.getId(elContainer.querySelector('[opt-id]'));\n      }\n\n      styleTagId += '-' + elId;\n      selectorPrefix += ' [opt-id=\"' + elId + '\"]';\n    } else if (closestColumn !== null) {\n      var colId = this.getId(closestColumn);\n      styleTagId += '-' + colId;\n      selectorPrefix += ' [opt-id=\"' + colId + '\"]';\n    } // If a namespace is passed in, append it to the style tag ID\n\n\n    if (options && options.namespace) {\n      styleTagId += '-' + options.namespace;\n    } // If block was not present, grab parent and try to build a valid selector. One place this occurs is favorites\n\n\n    if (closestBlock === null) {\n      closestBlock = element.parentElement; // Convert class list to an array, and look for a class starting with 'opt-id-'. If present, use this as the selector prefix\n\n      var classArr = [].slice.call(closestBlock.classList),\n          closestEl;\n      classArr = classArr.filter(function (singleClass) {\n        return singleClass.indexOf('opt-id-') === 0;\n      }); // If there is not class starting with opt-id, look for the presets-wrapper or favorites-wrapper\n      // For presets and favorites, if we don't add this extra selector, then the styles for each\n      // Preset and favorite will overwrite each other\n\n      if (classArr.length === 0) {\n        closestEl = closestBlock.closest('.opt-palette-style__presets-wrapper');\n\n        if (closestEl) {\n          classArr.push('opt-palette-style__presets-wrapper');\n        }\n      }\n\n      if (classArr.length === 0) {\n        closestEl = closestBlock.closest('.opt-palette-style__favorites-wrapper');\n\n        if (closestEl) {\n          classArr.push('opt-palette-style__favorites-wrapper');\n        }\n      }\n\n      if (classArr.length) {\n        selectorPrefix = '.' + classArr[0];\n      }\n\n      if (element.hasAttribute('opt-id')) {\n        selectorPrefix += ' [opt-id=\"' + element.getAttribute('opt-id') + '\"]';\n      } else {\n        // Inputs pass in their inner elements to the border & stylesheet hooks, so look outward for the outer element to get opt-id\n        var outerEl = element.closest('.opt-element');\n\n        if (outerEl && outerEl.hasAttribute('opt-id')) {\n          selectorPrefix += ' [opt-id=\"' + outerEl.getAttribute('opt-id') + '\"]';\n        }\n\n        outerEl = null;\n      }\n    }\n\n    var rules = [],\n        styleText = '',\n        selector;\n\n    for (selector in decBlocks) {\n      rules = [];\n      decBlocks[selector].forEach(function (rules, data, prop) {\n        var value = data[prop]; // In the case of [ 'css', 'dataobjectprp']\n\n        if (typeof prop == 'object') {\n          value = data[prop[1]];\n          prop = prop[0];\n        }\n\n        if (value) {\n          if (selector === ' .js-opt-bg-img') {\n            if (prop.indexOf('border-') > -1 && prop.indexOf('-radius') > -1) {\n              let borderRadiusNumberVal = +value.replace('px', '');\n              let borderTopWidth = data['border-top-width'] || data['border-width'];\n              let borderRightWidth = data['border-right-width'] || data['border-width'];\n              let borderBotWidth = data['border-bottom-width'] || data['border-width'];\n              let borderLeftWidth = data['border-left-width'] || data['border-width']; // Grab the direction from the radius two middle words ex: \"border-top-left-radius\"\n              // will be top-left, top-right, bottom-left, or bottom-right\n\n              let words = prop.split('-'),\n                  topOrBottom = words[1],\n                  leftOrRight = words[2],\n                  borderWidthMap = {\n                top: +borderTopWidth.replace('px', ''),\n                bottom: +borderBotWidth.replace('px', ''),\n                left: +borderLeftWidth.replace('px', ''),\n                right: +borderRightWidth.replace('px', '')\n              },\n                  horizontalBorderWidth = borderWidthMap[topOrBottom],\n                  verticalBorderWidth = borderWidthMap[leftOrRight]; // Find the larger border width of the two.  if they're equal either will do\n\n              let largerBorderWidth = horizontalBorderWidth > verticalBorderWidth ? horizontalBorderWidth : verticalBorderWidth;\n\n              if (borderRadiusNumberVal > largerBorderWidth) {\n                borderRadiusNumberVal = borderRadiusNumberVal - largerBorderWidth;\n                value = borderRadiusNumberVal + 'px';\n              } else {\n                value = '0px';\n              }\n            }\n          } // We have a rule with a value\n\n\n          rules.push(prop + ': ' + value);\n        }\n      }.bind(this, rules, data)); // If we have rules for this selector, then create a selector for it\n      // OUTPUT: .opt-id-df59c721-1da1-93d6-3936-9fa14d1cc0ae{border: 3px solid green;border-top: 3px solid blue}\n\n      if (rules.length) {\n        var _options$blockUserDef, _options$blockUserDef2;\n\n        rules = rules.join(';');\n\n        if (isDynamicBlock || (options === null || options === void 0 ? void 0 : (_options$blockUserDef = options.blockUserDefinedData) === null || _options$blockUserDef === void 0 ? void 0 : (_options$blockUserDef2 = _options$blockUserDef.settings) === null || _options$blockUserDef2 === void 0 ? void 0 : _options$blockUserDef2.dynamicBlockSettings)) {\n          selectorPrefix = selectorPrefix.replace(`.opt-id-${blockId}`, `[data-template-id=\"${blockId}\"]`);\n        }\n\n        styleText += '\\n' + selectorPrefix + selector + '{' + rules + '}';\n      }\n    } // Remove any existing style tags for this element\n    // NOTE add leading \"s\" to prevent the error \" is not a valid selector\" selectors can't lead with a digit\n\n\n    var existing = closestBlock.querySelector('#' + styleTagId);\n\n    if (existing) {\n      existing.remove();\n    } // If we have style text, then append it to the dom\n\n\n    if (styleText !== '') {\n      var styleTag = document.createElement('style');\n      styleTag.setAttribute('id', styleTagId);\n\n      if (options && options.isMobile) {\n        var mobileBreakpoint = op.mobileBreakpoint || 600;\n        styleText = '@media ( max-width: ' + mobileBreakpoint + 'px ) { ' + styleText + ' }';\n      }\n\n      styleTag.innerHTML = styleText;\n      closestBlock.insertBefore(styleTag, closestBlock.firstChild);\n    }\n  };\n  /**\n  * Adjust the dimensions of the target to fit the container better. This is used for making videos fit in its container\n  * and for parallax effects.\n  * @param options Object in the format:\n  * {\n  *\n  *     containerWidth: Number the width of the container, where the container could be the block or the viewport\n  *     containerHeight: Number the height of the container, where the container could be the block or the viewport\n  *     targetWidth: Number the width of the target, where the target could be the an <image>, <video> or <iframe> element\n  *     targetHeight: Number the height of the target, where the target could be the an <image>, <video> or <iframe> element\n  *     targetTagName: String The DOM tag name of the target. This could be the a <image>, <video> or <iframe>\n  *     stretchFactor Number. Multiply the height and width of the target by this much so that it's big enough to\n  *     give a parallax effect or stretch the video the right amount.\n  * }\n  *\n  * @returns {Object} Returns adjusted height and width properties. If no adjustments needed to be made\n  * and we want the target to just take their natural size, then return null.\n  */\n\n\n  op.adjustDimensions = function (options) {\n    // A = h/w\n    // a => aspect ratio\n    // h => height\n    // w => width\n    // Get height of target\n    // Get height of container\n    var containerWidth = options.containerWidth,\n        containerHeight = options.containerHeight,\n        targetWidth = options.targetWidth,\n        targetHeight = options.targetHeight,\n        targetTagName = options.targetTagName,\n        stretchFactor = options.stretchFactor;\n    var targetAspectRatio = targetHeight / targetWidth,\n        newTargetHeight = targetHeight,\n        newTargetWidth = targetWidth; // Video elements are special. They do not always need to have their height and width adjusted.\n    // They do not need their height and width adjust if they are sufficiently large to cover the container.\n    // Yet, if they are not sufficiently large, then they'll need their width and height updated.\n    // Image elements and iframes which contain videos should always have their width and height updated.\n\n    var isVideoElement = targetTagName === 'VIDEO'; // Keep track of whether the dimensions need to get stretched.\n    // There are cases where the target is big enough to cover the container and does not need to get stretched, so\n    // you don't want to apply the newly calculated stretched value.\n    // These flags help handle the case where the video is tall enough to cover a wide, skinny block, but was not wide\n    // enough. In this case we only wanted to apply the horizontal adjustment to video.\n\n    var needToUpdateHeight = false,\n        needToUpdateWidth = false;\n\n    if (newTargetHeight < containerHeight * stretchFactor) {\n      // If stretching the target height is still too short to cover the container\n      // then make the target the same height as the container, but set the width such that it maintains\n      // the target aspect ratio\n      newTargetHeight = containerHeight;\n      newTargetWidth = newTargetHeight / targetAspectRatio;\n      needToUpdateHeight = true;\n      needToUpdateWidth = true;\n    } // We don't really care to apply the stretchFactor to the width.\n    // For all our calculations, we care that the  height is stretched enough to give the parallax effect.\n    // But we want the width to at least cover the container.\n\n\n    if (newTargetWidth < containerWidth) {\n      // If the target width is still too skinny to cover the container\n      // then make the target the same width as the container, but set the height such that it maintains\n      // the target aspect ratio\n      newTargetWidth = containerWidth;\n      newTargetHeight = newTargetWidth * targetAspectRatio;\n      needToUpdateWidth = true;\n    } // Multiply dimensions by this to stretch the target out just a little bit to make sure we can get a parallax effect\n    // or have the video stretch the right amount.\n\n\n    newTargetHeight = newTargetHeight * stretchFactor;\n    newTargetWidth = newTargetWidth * stretchFactor; // Apply new dimensions to the target\n    // If the new values are 0, then do not apply them and allow other styling to manage this.\n\n    var ret = null;\n\n    if (needToUpdateHeight || !isVideoElement) {\n      ret = {\n        height: newTargetHeight\n      };\n    }\n\n    if (needToUpdateWidth || !isVideoElement) {\n      ret = ret || {};\n      ret.width = newTargetWidth;\n    }\n\n    return ret;\n  };\n  /**\n  * Position the video based off its its own size and its container.\n  * This should stretch and move the video based of the aspect ratio of its container.\n  * @param $block jQuery element - the block that contains the video background\n  * @param videoContainer DOM element - the DOM element that contains the video for the background\n  */\n\n\n  op.positionVideo = function ($block, videoContainer) {\n    if ($block == null || videoContainer == null) {\n      return;\n    } // Get height of video\n    // Get height of block\n    // Find center of each\n\n\n    var blockHeight = $block.height(),\n        blockWidth = $block.width(),\n        blockVerticalCenter = blockHeight / 2,\n        blockHorizontalCenter = blockWidth / 2;\n    let video = videoContainer.querySelector('video, iframe');\n\n    if (!video) {\n      return;\n    }\n\n    let videoHeight = video.clientHeight,\n        videoWidth = video.clientWidth,\n        videoVerticalCenter,\n        videoHorizontalCenter;\n    var moveYDelta = 0,\n        moveXDelta = 0,\n        isParallax = videoContainer.closest('.parallax') != null,\n        isFixedParallax = videoContainer.closest('.parallax.parallax--fixed') != null; // Multiply dimensions by this to stretch the target out just a little bit to make sure we can get a parallax effect\n    // or to make a video stretch just enough to fit in a container.\n\n    var stretchFactor = 1; // For non-fixed parallax, we want to stretch the video by 1.5 so that it's big enough to give the parallax effect.\n\n    if (isParallax && !isFixedParallax) {\n      stretchFactor = 1.5;\n    } // For fixed parallax, we make the window the container, to stretch the video to the window dimensions.\n\n\n    if (isParallax && isFixedParallax) {\n      blockHeight = window.innerHeight;\n    }\n\n    var newDimensions = null;\n\n    if (videoWidth !== 0 && videoHeight !== 0) {\n      newDimensions = op.adjustDimensions({\n        containerWidth: blockWidth,\n        containerHeight: blockHeight,\n        targetWidth: videoWidth,\n        targetHeight: videoHeight,\n        targetTagName: video.tagName,\n        stretchFactor: stretchFactor\n      });\n    }\n\n    if (newDimensions && newDimensions.width !== 0 && newDimensions.height !== 0) {\n      video.style.width = newDimensions.width + 'px';\n      video.style.height = newDimensions.height + 'px';\n    } // After adjusting the dimensions, recalculate and apply the video aspect ratio\n\n\n    op.applyVideoAspectRatio(video); // Update our vars for video height and width and centers\n\n    videoHeight = video.clientHeight;\n    videoWidth = video.clientWidth;\n    videoVerticalCenter = videoHeight / 2;\n    videoHorizontalCenter = videoWidth / 2; // If video height is greater than block height, then move video upwards\n    // Want the center of the video to be at center of block,\n    // Distance to move video is video center minus block center\n\n    if (videoHeight > blockHeight) {\n      moveYDelta = videoVerticalCenter - blockVerticalCenter;\n    }\n\n    if (videoWidth > blockWidth) {\n      moveXDelta = videoHorizontalCenter - blockHorizontalCenter;\n    }\n\n    if (moveYDelta !== 0 || moveXDelta !== 0) {\n      video.style.transform = 'translate(-' + moveXDelta + 'px,-' + moveYDelta + 'px)';\n    }\n  };\n  /**\n  * Calculate and apply the aspect ratio to the video's container.\n  *\n  * OPv3 uses Materialize's video-container class, which assumes videos are 16:9 aspect ratio. It styles\n  * the container with padding-bottom: 56.25% (i.e. 9/16 = .5625).\n  *\n  * Not all videos are 16:9, so we gotta make a calculation and apply styles accordingly.\n  * @param videoElement\n  * @private\n  */\n\n\n  op.applyVideoAspectRatio = function (videoElement) {\n    var height = videoElement.videoHeight,\n        width = videoElement.videoWidth,\n        container = videoElement.parentNode,\n        isVideoElement = $(videoElement).closest('.opt-element').length !== 0,\n        aspectRatio; // Handles cases where the video element is a iframe or video element\n    // !height || !width handles cases where the values are 0 or undefined\n\n    if (!height || !width) {\n      height = videoElement.clientHeight;\n      width = videoElement.clientWidth;\n    }\n\n    aspectRatio = height / width; // If the video's aspect ratio doesn't match the magical 16:9 one, then calculate and apply it.\n    // This should handle portrait and landscape videos.\n\n    if (aspectRatio !== .5625) {\n      // Video elements do not have their width/height set, so that they can just fit themselves naturally\n      if (!isVideoElement) {\n        // Non-video elements (i.e. video background)\n        // This makes the video container fill the container that it's in.\n        container.style.width = '100%';\n        container.style.height = '100%';\n      }\n\n      container.style.paddingBottom = (aspectRatio * 100).toFixed(2, 10) + '%';\n    } else {\n      // If the video does match 16:9, then apply the Materialize class and\n      // Get rid of any padding-bottom styles\n      container.style.paddingBottom = '';\n    }\n  };\n  /**\n  * Initialize <video> elements on the page\n  * Right now, it calculates the aspect ratio of the video and adjust the video containers.\n  * Need to wait for the video to be loaded before we have the necessary dimensions.\n  */\n\n\n  op.initVideos = function () {\n    var $videoElements = $('.opt-element .video-background-container video');\n    $videoElements.each(function (index, videoElement) {\n      // We need to wait for the video to be loaded before we can get accurate dimensions\n      // 4 means the video has enough metadata\n      if (videoElement.readyState !== 4) {\n        videoElement.addEventListener('loadedmetadata', op.applyVideoAspectRatio.bind(this, videoElement));\n      } else {\n        op.applyVideoAspectRatio(videoElement);\n      }\n    });\n    $videoElements = null;\n  };\n  /**\n  * Apply custom classes and inline styles to a materialize drop down field.\n  * The customization is stored on default <select> markup as an opt- attribute.\n  * After the materialize dropdowns are initialized this function runs agains all\n  * of them parsing in the customization and adding the classes and inline style it contains.\n  */\n\n\n  op.styleSelect = function ($select) {\n    var customization = JSON.parse($select.attr('opt-dropdown-styles')),\n        customStyles = null,\n        $elContainer = null,\n        $els = null;\n\n    for (var selector in customization) {\n      customStyles = customization[selector];\n      $elContainer = $select.closest('.opt-input__container');\n      $els = $elContainer.find('.' + selector);\n\n      for (var i = 0, l = customStyles.classes.length; i < l; i++) {\n        $els.addClass(customStyles.classes[i]);\n      }\n\n      $els.css(customStyles.styles);\n    }\n  };\n  /**\n  * Checks for mobile device by checking user agent and screen size.\n  * Fun fact: Switching on/off device toggle in Chrome Dev tools changes user agent to mobile version so it can be\n  * tested on the computer.\n  *\n  * @returns {Boolean} true if mobile device, false if not.\n  */\n\n\n  op.isMobileDevice = function () {\n    // Checking if user agent sent by browser contains 'mobi' (for mobile), or the screen width is small enough\n    // to be considered mobile.\n    const mobileUserAgentMobi = navigator.userAgent.toLowerCase().match(/(mobi|android)/g);\n\n    if (mobileUserAgentMobi) {\n      if (mobileUserAgentMobi.length > 0 || window.innerWidth <= 600) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n  * This is essentially a copy of the getCultureDefinition method on ontraport.common.\n  *\n  * It's copied here since the custom element doesn't have access to ontraport.common\n  * @param currencySettings\n  * @returns {*}\n  */\n\n\n  op.getCultureDefinition = function (currencySettings) {\n    var culture = Globalize.culture(); // Apply currency symbol\n\n    culture.numberFormat.currency.symbol = currencySettings.currency.currency_symbol; // Apply currency format (symbol left/right)\n\n    var currencyFormat = '',\n        currencyCode = currencySettings.currency.currency_code;\n\n    switch (currencySettings.currency_format) {\n      case 'symbol-left':\n        currencyFormat = ['($n)', '$n'];\n        break;\n\n      case 'symbol-left-country-code':\n        currencyFormat = ['($' + currencyCode + ' n)', '$' + currencyCode + ' n'];\n        break;\n\n      case 'symbol-right':\n        currencyFormat = ['-n $', 'n $'];\n        break;\n\n      case 'symbol-right-country-code':\n        currencyFormat = ['-n $' + currencyCode, 'n $' + currencyCode];\n        break;\n\n      default:\n        // Symbol left is default\n        currencyFormat = ['($n)', '$n'];\n        break;\n    }\n\n    culture.numberFormat.currency.pattern = currencyFormat; // Apply number format (comma, decimal placement)\n\n    switch (currencySettings.number_format) {\n      case 'comma-decimal':\n        culture.numberFormat.currency[','] = ',';\n        culture.numberFormat.currency['.'] = '.';\n        break;\n\n      case 'decimal-comma':\n        culture.numberFormat.currency[','] = '.';\n        culture.numberFormat.currency['.'] = ',';\n        break;\n    }\n\n    return culture;\n  };\n\n  return op;\n})(jQuery, window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.common.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.init.js":
/*!***************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.init.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// See if we found some global block grdients that need to be added to the page and add them\nif (op.gbGradients && Object.keys(op.gbGradients).length) {\n  op.addGbGradientCss(op.gbGradients);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvb3B0X2JvaWxlcnBsYXRlcy92My9vcHQuaW5pdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3d3dy9qcy0zLjIuMi9vbnRyYXBvcnQvb3B0X2Fzc2V0cy9vcHRfYm9pbGVycGxhdGVzL3YzL29wdC5pbml0LmpzPzc1YTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VlIGlmIHdlIGZvdW5kIHNvbWUgZ2xvYmFsIGJsb2NrIGdyZGllbnRzIHRoYXQgbmVlZCB0byBiZSBhZGRlZCB0byB0aGUgcGFnZSBhbmQgYWRkIHRoZW1cbmlmICggb3AuZ2JHcmFkaWVudHMgJiYgT2JqZWN0LmtleXMoIG9wLmdiR3JhZGllbnRzICkubGVuZ3RoICkge1xuICAgIG9wLmFkZEdiR3JhZGllbnRDc3MoIG9wLmdiR3JhZGllbnRzICk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.init.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.lazyload.ts":
/*!*******************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.lazyload.ts ***!
  \*******************************************************************************/
/*! exports provided: OpLazyLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OpLazyLoad\", function() { return OpLazyLoad; });\n/**\n * @author lorenzo@ontraport.com\n * @class  OpLazyLoad\n * Ontraport Pages lazy loader! Right now all we lazy load are images. Be happy we have big plans to lazy load other large assets. In a nut shell, the\n *         lazy loader observes images and downloads them once they enter the viewport. This means Pages don't request assets from the server that the user\n *         isn't viewing/using.\n *\n *         The lazy loader works in conjunction with the Pages editor. The editor hides images (via css) and builds placeholders for them that\n *         match their dimensions (yes, placeholders are responsive). The placeholders make sure image dimensions are accounted for before\n *         images enter the viewport and are downloaded. This is done so pages don't 'jump' or 'shift around' as images entery the viewport, are downloaded,\n *         and become visible.\n *\n *         Here is the algorithm:\n *         1) Get all the images\n *         2) Attach an intersection observer to each image\n *         3) On viewport intersection bind a load event to the image\n *         4) On load fade in the image remove the placeholder\n */\nclass OpLazyLoad {\n    /**\n     * CONSTRUCTOR -----------------------------------------------------------------------------------------------------\n     * If intersection observation is supported by the browser, on document load get all the lazy load images and attach an\n     *        intersection observer to them. Else, load all the images.\n     */\n    constructor() {\n        document.addEventListener('DOMContentLoaded', () => {\n            this.bindImages(this.getLazyImage());\n        });\n    }\n    /*\n     *  INSTANCE METHODS------------------------------------------------------------------------------------------------\n     */\n    /*\n     * Find images to lazy load.\n     */\n    getLazyImage(templateUuid) {\n        let lazyImages;\n        // Create a qualifier for dynamic blocks, we only want to select the images in a dynamic block's object record blocks.\n        let templateChildren = (templateUuid) ? `[data-template-id=\"${templateUuid}\"]` : '';\n        // Create an array es5 style for IE11, when we transpile down to es5 this can be changed to Array.from()\n        lazyImages = [].slice.call(document.querySelectorAll(`${templateChildren}.opt-row:not([data-dc]) .opt-lazy-img__img:not(.opt-lazy-img__img--bound)`), 0);\n        lazyImages.forEach((lazyImage) => {\n            // ONTRA-20844, Firefox 69 does not correctly calcualate the padding-bottom of the no height image if only\n            // the width attribute is set. So here, grab the attr and set the style property.\n            lazyImage.style.width = lazyImage.getAttribute('width') + 'px';\n        });\n        return lazyImages;\n    }\n    bindImages(lazyImages) {\n        if (!lazyImages.length) {\n            return;\n        }\n        // If the browser supports the intersection observer and we are not in the editor then lazy load.\n        // ONTRA-19918. IntersectionObserver does not work consistently with Safari, so do not lazy load images\n        // with Safari.\n        const isSafari = (Object.prototype.toString.call(HTMLElement).indexOf('Constructor') > 0 ||\n            window.webkitAudioContext !== undefined);\n        if ('IntersectionObserver' in window && !isSafari) {\n            // Dont rebind if we are adding dynamic images\n            if (!this.lazyImageObserver) {\n                this.lazyImageObserver = new IntersectionObserver(this.intersectionCallback.bind(this));\n            }\n            lazyImages.forEach((lazyImage) => {\n                // Set up observation\n                this.lazyImageObserver && this.lazyImageObserver.observe(lazyImage);\n                lazyImage.classList.add('opt-lazy-img__img--bound');\n            });\n        }\n        else {\n            // Fall back, we immediately set the src to the data-src value and all the images are loaded.\n            lazyImages.forEach((img) => {\n                this.imgLoadCallback(img);\n                img.classList.add('opt-lazy-img__img--bound');\n            });\n        }\n    }\n    /**\n     * The image has been moved into the viewport. Bind a load event, once downloaded fade the image in and remove the\n     * dimension placeholder.\n     */\n    imgLoadCallback(img) {\n        var _a, _b;\n        let imgWrapper = img.closest('.img-container');\n        if (!imgWrapper) {\n            console.error('opt.lazyload.ts failed to find .img-container');\n            return false;\n        }\n        let hoverImg = imgWrapper.querySelector('.hover-img');\n        let imgDataSrc = img.dataset.src || '';\n        let imgDataSrcset = img.dataset.srcset || '';\n        let hoverImgDatasrc = ((_a = hoverImg) === null || _a === void 0 ? void 0 : _a.dataset.src) || '';\n        let hoverImgDatasrcset = ((_b = hoverImg) === null || _b === void 0 ? void 0 : _b.dataset.srcset) || '';\n        // Attach the load, event listener before we assign the source\n        // prevents us from missing the load event firing before the handler is attached.\n        img.addEventListener('load', function (imgWrapper, ev) {\n            let placeholder = imgWrapper.querySelector('.opt-lazy-img__placeholder');\n            img.classList.remove('opt-lazy-img__img', 'opt-lazy-img__img--bound');\n            this.style.paddingBottom = '';\n            imgWrapper.style.maxWidth = '';\n            imgWrapper.style.maxHeight = '';\n            imgWrapper.classList.remove('opt-lazy-img');\n            placeholder.remove();\n            // If IE11, sigh.. IE11 doesn't max width % restriction on width px value. So we flip flop the width and\n            // max-width. This is a bit of a slap on patch, but IE11 is scheduled to get beheaded.\n            if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1) {\n                img.style.maxWidth = img.style.width;\n                img.style.width = '100%';\n            }\n        }.bind(img, imgWrapper));\n        // Set the data src on the image element.\n        img.src = imgDataSrc;\n        img.srcset = imgDataSrcset;\n        // Remove the data-src attrs because they are no longer needed and they interfere with showing/hiding hover\n        // images.\n        img.removeAttribute('data-src');\n        if (hoverImg && hoverImgDatasrc) {\n            hoverImg.removeAttribute('data-src');\n            hoverImg.src = hoverImgDatasrc;\n            hoverImg.srcset = hoverImgDatasrcset;\n        }\n        else if (hoverImg && hoverImg.parentElement) {\n            hoverImg.parentElement && hoverImg.parentElement.removeChild(hoverImg);\n        }\n    }\n    /*\n     * When an intersection occurs this method gets called. Remove the intersection observer from the observed img and\n     * run the image load logic.\n     */\n    intersectionCallback(entries, observer) {\n        entries.forEach((entry) => {\n            let img = entry.target;\n            // If the img is visible in the viewport load the image\n            if (entry.isIntersecting === true) {\n                this.lazyImageObserver && this.lazyImageObserver.unobserve(img);\n                this.imgLoadCallback(img);\n            }\n        });\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.lazyload.ts\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.js":
/*!**********************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.js ***!
  \**********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _opt_lazyload_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./opt.lazyload.ts */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.lazyload.ts\");\n/* harmony import */ var _opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./opt.optionalScripts.ts */ \"./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.optionalScripts.ts\");\n\n\n\n // SLIDER -------------------------------------------------------------------------------------------------\n\n/*\n * @brief Overloading the materialize slider because we don't use images in slider, we replaced them with\n *        an opt-type='background-v3' element\n */\n\n(function ($) {\n  const methods = {\n    init: function (options) {\n      const defaults = {\n        indicators: true,\n        height: 400,\n        transition: 500,\n        interval: 6000\n      };\n      return this.each(function () {\n        // If no options have been specified and we have stored options in this.initOptions,\n        // then use the stored options\n        if (options === undefined && this.initOptions !== undefined) {\n          options = this.initOptions;\n        }\n\n        if (options && options.height === 'fullscreen') {\n          options.height = $(window).height();\n        }\n\n        options = $.extend(defaults, options); // Save initOptions, so that it can be reused later, if needed\n\n        this.initOptions = options; // For each slider, we want to keep track of\n        // Which slide is active and its associated content\n\n        var $this = $(this),\n            $slider = $this.find('ul.slides').first(),\n            // We have to support the fact that some of the slides have their visibility turned off in the editor\n        $slides = $slider.find('> li:visible'),\n            $active_index = $slides.filter('.active').index(),\n            $arrowLeft = $this.find('.slider__arrow--left'),\n            $arrowRight = $this.find('.slider__arrow--right'),\n            themeClasses = ['primary-color-text', 'complementary-color-text', 'dark-color-text', 'light-color-text', 'white-color-text'],\n            themeBackgroundClasses = themeClasses.map(function (el) {\n          return el.replace('-text', '-background');\n        }),\n            themeHoverClasses = themeClasses.map(function (el) {\n          return el + '--hover';\n        }),\n            $active,\n            $indicators,\n            $interval,\n            arrowClick;\n\n        if ($active_index != -1) {\n          $active = $slides.eq($active_index);\n        } // Transitions the caption depending on alignment\n\n\n        function captionTransition($active, duration) {\n          var transitionStart = $active.attr('slideAnimationStartPosition'),\n              $caption = $active.find('.caption');\n\n          if (transitionStart === 'top') {\n            $caption.velocity({\n              opacity: 0,\n              translateY: -100\n            }, {\n              duration: duration,\n              queue: false\n            });\n          } else if (transitionStart === 'right') {\n            $caption.velocity({\n              opacity: 0,\n              translateX: 100\n            }, {\n              duration: duration,\n              queue: false\n            });\n          } else if (transitionStart === 'bottom') {\n            $caption.velocity({\n              opacity: 0,\n              translateY: 100\n            }, {\n              duration: duration,\n              queue: false\n            });\n          } else if (transitionStart === 'left') {\n            $caption.velocity({\n              opacity: 0,\n              translateX: -100\n            }, {\n              duration: duration,\n              queue: false\n            });\n          }\n\n          $caption = null;\n        } // Because some slides can be hidden we need to search only the visible slides to get index\n\n\n        function getActiveIndex() {\n          var activeIndex;\n          $slides.filter(':visible').each(function (index, el) {\n            if (el.classList.contains('active')) {\n              activeIndex = index;\n            }\n          });\n          return activeIndex !== undefined ? activeIndex : -1;\n        } // This function will transition the slide to any index of the next slide\n\n\n        function moveToSlide(index) {\n          // Wrap around indices.\n          if (index >= $slides.length) {\n            index = 0;\n          } else if (index < 0) {\n            index = $slides.length - 1;\n          }\n\n          $active_index = getActiveIndex(); // Only do if index changes\n\n          if ($active_index != index) {\n            $active = $slides.eq($active_index);\n            $slides.removeClass('active');\n            $active.velocity({\n              opacity: 0\n            }, {\n              duration: options.transition,\n              queue: false,\n              easing: 'easeOutQuad',\n              complete: function () {\n                $slides.not('.active').velocity({\n                  opacity: 0,\n                  translateX: 0,\n                  translateY: 0\n                }, {\n                  duration: 0,\n                  queue: false\n                });\n              }\n            });\n            captionTransition($active, options.transition); // Update indicators\n\n            if (options.indicators) {\n              $indicators.removeClass('active');\n            }\n\n            $slides.eq(index).velocity({\n              opacity: 1\n            }, {\n              duration: options.transition,\n              queue: false,\n              easing: 'easeOutQuad'\n            });\n            $slides.eq(index).find('.caption').velocity({\n              opacity: 1,\n              translateX: 0,\n              translateY: 0\n            }, {\n              duration: options.transition,\n              delay: options.transition,\n              queue: false,\n              easing: 'easeOutQuad'\n            });\n            $slides.eq(index).addClass('active'); // Update indicators\n\n            if (options.indicators) {\n              $indicators.eq(index).addClass('active');\n            }\n          }\n        }\n        /*\n         * @brief Reset the interval! This happens when the slide show starts and when ever a user initiates an event that loads a new slide before the previous interval\n         *        was up.\n         */\n\n\n        function resetInterval() {\n          if (!options.interval) {\n            return;\n          } // Reset interval\n\n\n          clearInterval($interval);\n          $interval = setInterval(function () {\n            $active_index = getActiveIndex();\n\n            if ($slides.length == $active_index + 1) {\n              $active_index = 0; // Loop to start\n            } else {\n              $active_index += 1;\n            }\n\n            moveToSlide($active_index);\n          }, options.transition + options.interval);\n        }\n        /*\n         * @brief Detect if a string is a hex color\n         */\n\n\n        function isHexColor(colorString) {\n          return colorString.indexOf('#') === 0 && colorString.length === 7;\n        } // Set height of slider\n        // If fullscreen, do nothing\n\n\n        if (!$this.hasClass('fullscreen')) {\n          $this.height(options.height);\n        } // Keep track if any of the slides has a video background\n\n\n        var hasVideoBackground = false; // Set initial positions of captions\n\n        $slides.each(function () {\n          captionTransition($(this), 0);\n\n          if (this.querySelector('.video-background-wrapper') !== null) {\n            hasVideoBackground = true;\n          }\n        }); // Dynamically add indicators\n\n        if (options.indicators) {\n          $indicators = $('<ul class=\"indicators\"></ul>');\n          var color = '',\n              rowId = $this.closest('.opt-row').attr('id'),\n              optId = $this.attr('opt-id'); // Default indicator selected color to the page primary color\n\n          $this.find('.indicator-selected-styles').remove();\n\n          if (!options.indicatorColorSelected) {\n            options.indicatorColorSelected = 'primary-color-text';\n          }\n\n          if (isHexColor(options.indicatorColorSelected)) {\n            color = options.indicatorColorSelected;\n          } else {\n            // This is a little tricky, to write a 'selected' style to overload materializes default indicator color we need a theme bg color value.\n            // Once we have the color we can build a style theme the 'selected' indicator. We get the color by creating a temp div appendining it to\n            // The dom getting its color value then removing it.\n            var $colorDummy = $('<div class=\"theme-color-dummy ' + options.indicatorColorSelected + '\" ></div>'),\n                color = '';\n            $('body').append($colorDummy);\n            color = getComputedStyle($colorDummy[0]).color;\n            $colorDummy.remove();\n          }\n\n          $indicators.prepend($('<style class=\"indicator-selected-styles\"></style>').text('#' + rowId + ' [opt-id=\"' + optId + '\"] .indicator-item.active { background-color: ' + color + ' !important }'));\n          $slides.each(function (index) {\n            var $indicator = $('<li class=\"indicator-item\"></li>'); // Set indicator colors.\n\n            if (options.indicatorColor) {\n              if (isHexColor(options.indicatorColor)) {\n                $indicator.attr('style', 'background-color:' + options.indicatorColor);\n              } else {\n                $indicator.removeClass(themeBackgroundClasses.join());\n                $indicator.addClass(options.indicatorColor + '-background');\n              }\n            } else {\n              // Default to the theme light color\n              $indicator.addClass('light-color-background');\n            } // Handle clicks on indicators\n\n\n            $indicator.click(function () {\n              var curr_index = $(this).index();\n              moveToSlide(curr_index - 1); // Reset interval\n\n              resetInterval();\n            });\n            $indicators.append($indicator);\n          });\n          $this.append($indicators);\n          $indicators = $this.find('ul.indicators').find('li.indicator-item');\n        }\n\n        if (options.arrows) {\n          // Handle clicks on slides\n          $arrowLeft.css('display', '');\n          $arrowRight.css('display', '');\n\n          arrowClick = function (getActiveIndex) {\n            return function (ev) {\n              var curr_index = getActiveIndex();\n\n              if (ev.delegateTarget.classList.contains('slider__arrow--right')) {\n                moveToSlide(curr_index + 1);\n              } else {\n                moveToSlide(curr_index + -1);\n              }\n\n              resetInterval();\n            };\n          }(getActiveIndex);\n\n          $arrowLeft.on('click', arrowClick);\n          $arrowRight.on('click', arrowClick); // Set the arrow colors\n\n          $arrowLeft.removeClass(themeClasses.join(' ') + ' ' + themeHoverClasses.join(' '));\n          $arrowRight.removeClass(themeClasses.join(' ') + ' ' + themeHoverClasses.join(' '));\n\n          if (options.arrowColor) {\n            $arrowLeft.attr('style', '');\n            $arrowRight.attr('style', '');\n\n            if (isHexColor(options.arrowColor)) {\n              $arrowLeft.css('color', options.arrowColor);\n              $arrowRight.css('color', options.arrowColor);\n            } else {\n              $arrowLeft.addClass(options.arrowColor);\n              $arrowRight.addClass(options.arrowColor);\n            }\n          }\n\n          if (options.arrowColorHover) {\n            $this.find('.slider__arrow-hover').remove();\n\n            if (isHexColor(options.arrowColorHover)) {\n              $this.prepend($('<style class=\"slider__arrow-hover\"></style>').text('.slider .slider__arrow i:hover { color: ' + options.arrowColorHover + ' }'));\n            } else {\n              $arrowLeft.addClass(options.arrowColorHover + '--hover');\n              $arrowRight.addClass(options.arrowColorHover + '--hover');\n            }\n          }\n        } else {\n          // Hides the arrows\n          $arrowLeft.css('display', 'none');\n          $arrowRight.css('display', 'none');\n\n          if (arrowClick) {\n            // If arrow click exists we are in the editor and the user has remove the slide show arrows so upbind the click handlers.\n            $arrowLeft.off('click', arrowClick);\n            $arrowRight.off('click', arrowClick);\n          }\n        }\n\n        if ($active) {\n          $active.show();\n        } else {\n          $slides.first().addClass('active').velocity({\n            opacity: 1\n          }, {\n            duration: options.transition,\n            queue: false,\n            easing: 'easeOutQuad'\n          });\n          $active_index = 0;\n          $active = $slides.eq($active_index); // Update indicators\n\n          if (options.indicators) {\n            $indicators.eq($active_index).addClass('active');\n          }\n        } // Adjust height to current slide\n\n\n        $active.find('.slide__style').each(function () {\n          $active.find('.caption').velocity({\n            opacity: 1,\n            translateX: 0,\n            translateY: 0\n          }, {\n            duration: options.transition,\n            queue: false,\n            easing: 'easeOutQuad'\n          });\n        }); // Auto scroll\n\n        resetInterval(); // HammerJS, Swipe navigation\n        // Touch Event\n\n        var panning = false;\n        var swipeLeft = false;\n        var swipeRight = false;\n        $this.hammer({\n          prevent_default: false\n        }).on('pan', function (e) {\n          if (e.gesture.pointerType === 'touch') {\n            // Reset interval\n            clearInterval($interval);\n            var direction = e.gesture.direction;\n            var x = e.gesture.deltaX;\n            var velocityX = e.gesture.velocityX;\n            var velocityY = e.gesture.velocityY;\n            var $curr_slide = $slides.filter('.active');\n\n            if (Math.abs(velocityX) > Math.abs(velocityY)) {\n              $curr_slide.velocity({\n                translateX: x\n              }, {\n                duration: 50,\n                queue: false,\n                easing: 'easeOutQuad'\n              });\n            } // Swipe Left\n\n\n            if (direction === 4 && (x > $this.innerWidth() / 2 || velocityX < -0.65)) {\n              swipeRight = true;\n            } // Swipe Right\n            else if (direction === 2 && (x < -1 * $this.innerWidth() / 2 || velocityX > 0.65)) {\n                swipeLeft = true;\n              } // Make Slide Behind active slide visible\n\n\n            var next_slide;\n\n            if (swipeLeft) {\n              next_slide = $curr_slide.next();\n\n              if (next_slide.length === 0) {\n                next_slide = $slides.first();\n              }\n\n              next_slide.velocity({\n                opacity: 1\n              }, {\n                duration: 300,\n                queue: false,\n                easing: 'easeOutQuad'\n              });\n            }\n\n            if (swipeRight) {\n              next_slide = $curr_slide.prev();\n\n              if (next_slide.length === 0) {\n                next_slide = $slides.last();\n              }\n\n              next_slide.velocity({\n                opacity: 1\n              }, {\n                duration: 300,\n                queue: false,\n                easing: 'easeOutQuad'\n              });\n            }\n          }\n        }).on('panend', function (e) {\n          if (e.gesture.pointerType === 'touch') {\n            var $curr_slide = $slides.filter('.active');\n            panning = false;\n            var curr_index = getActiveIndex();\n\n            if (!swipeRight && !swipeLeft || $slides.length <= 1) {\n              // Return to original spot\n              $curr_slide.velocity({\n                translateX: 0\n              }, {\n                duration: 300,\n                queue: false,\n                easing: 'easeOutQuad'\n              });\n            } else if (swipeLeft) {\n              moveToSlide(curr_index + 1);\n              $curr_slide.velocity({\n                translateX: -1 * $this.innerWidth()\n              }, {\n                duration: 300,\n                queue: false,\n                easing: 'easeOutQuad',\n                complete: function () {\n                  $curr_slide.velocity({\n                    opacity: 0,\n                    translateX: 0\n                  }, {\n                    duration: 0,\n                    queue: false\n                  });\n                }\n              });\n            } else if (swipeRight) {\n              moveToSlide(curr_index - 1);\n              $curr_slide.velocity({\n                translateX: $this.innerWidth()\n              }, {\n                duration: 300,\n                queue: false,\n                easing: 'easeOutQuad',\n                complete: function () {\n                  $curr_slide.velocity({\n                    opacity: 0,\n                    translateX: 0\n                  }, {\n                    duration: 0,\n                    queue: false\n                  });\n                }\n              });\n            }\n\n            swipeLeft = false;\n            swipeRight = false; // Restart interval\n\n            resetInterval();\n          }\n        });\n        $this.on('sliderPause', function () {\n          clearInterval($interval);\n        });\n        $this.on('sliderStart', function () {\n          resetInterval();\n        });\n        $this.on('sliderNext', function () {\n          $active_index = getActiveIndex();\n          moveToSlide($active_index + 1);\n        });\n        $this.on('sliderPrev', function () {\n          $active_index = getActiveIndex();\n          moveToSlide($active_index - 1);\n        });\n        $this.on('sliderRemove', function () {\n          clearInterval($interval); // Remove all the event handlers\n\n          $this.off();\n          $slider = null;\n          $slides = null;\n          $arrowLeft = null;\n          $arrowRight = null;\n        });\n\n        if (hasVideoBackground) {\n          // Reposition background videos when the slide get resized, as needed\n          window.addEventListener('resize', op.throttle(function (_$slides) {\n            _$slides.each(function (index, slide) {\n              op.positionVideo($(slide), slide.querySelector('.video-background-wrapper'));\n            });\n          }.bind(this, $slides), 250));\n        }\n      });\n    },\n    pause: function () {\n      $(this).trigger('sliderPause');\n    },\n    start: function () {\n      $(this).trigger('sliderStart');\n    },\n    next: function () {\n      $(this).trigger('sliderNext');\n    },\n    prev: function () {\n      $(this).trigger('sliderPrev');\n    },\n    remove: function () {\n      $(this).trigger('sliderRemove');\n    }\n  };\n\n  $.fn.slider = function (methodOrOptions) {\n    if (methods[methodOrOptions]) {\n      return methods[methodOrOptions].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof methodOrOptions === 'object' || !methodOrOptions) {\n      // Default to \"init\"\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + methodOrOptions + ' does not exist on jQuery.tooltip');\n    }\n  }; // Plugin end\n\n})(jQuery); // STICKY BLOCKS--------------------------------------------------------------------------------------------------------\n\n\n(function ($) {\n  /*\n   * @brief Update the materialize push pin compensate for the height of the pinned element.\n   */\n  $.fn.pushpin = function (options) {\n    // Defaults\n    var defaults = {\n      top: 0,\n      bottom: Infinity,\n      offset: 0\n    }; // Remove pushpin event and classes\n\n    if (options === 'remove') {\n      this.each(function () {\n        var id = $(this).data('pushpin-id');\n\n        if (id) {\n          $(window).off('scroll.' + id);\n          $(this).removeData('pushpin-id').removeClass('pin-top pinned pin-bottom').css({\n            top: '',\n            transition: ''\n          });\n        }\n      });\n      return false;\n    }\n\n    options = $.extend(defaults, options);\n    return this.each(function () {\n      this.stickyBlockOptions = options;\n\n      this.updateStickyBlockSize = () => {\n        const wrapper = this.closest('.sticky-wrapper');\n\n        if (!wrapper) {\n          return;\n        }\n\n        this.stickyBlockOptions.top = wrapper.offsetTop;\n        this.stickyBlockOptions.bottom = wrapper.offsetTop + this.parentElement.clientHeight - this.offsetHeight;\n        this.$original_offset = wrapper.offsetTop;\n      };\n\n      var $uniqueId = Materialize.guid(),\n          $this = $(this),\n          oldScrollValue = 0,\n          scrollDirection;\n      this.$original_offset = $(this).offset().top;\n\n      function removePinClasses(object) {\n        object.removeClass('pin-top');\n        object.removeClass('pinned');\n        object.removeClass('pin-bottom');\n      }\n\n      function updateElements(objects, scrolled) {\n        scrollDirection = scrolled > oldScrollValue ? 'down' : 'up';\n        oldScrollValue = scrolled;\n        objects.each(function () {\n          var $this = $(this);\n          this.updateStickyBlockSize(); // Add position fixed (because its between top and bottom)\n\n          if (scrolled > 0 && options.top <= scrolled && options.bottom >= scrolled) {\n            if (!$this.hasClass('pinned')) {\n              removePinClasses($this);\n              $this.css('top', options.offset);\n              $this.addClass('pinned');\n              $this.parent().css({\n                'padding-top': $this.height()\n              });\n            }\n\n            if (options.hide) {\n              $this.css({\n                transition: 'top .3s ease-in-out'\n              });\n              var offSetMax = $this.height() + 50,\n                  scrolledOffset = scrolled - options.top;\n\n              if (scrollDirection === 'up') {\n                var transition = parseInt($this.css('top')) > 0 ? '' : 'top .3s ease-in-out';\n                $this.css({\n                  top: 0,\n                  transition: transition\n                });\n              } else {\n                // Scrolling down\n                if (scrolledOffset > offSetMax) {\n                  $this.css({\n                    top: -1 * offSetMax\n                  });\n                } else {\n                  $this.css({\n                    // Subtract an extra 50 for box shadows\n                    transition: '',\n                    top: -1 * scrolledOffset\n                  });\n                }\n              }\n            }\n          } // Add pin-top (when scrolled position is above top)\n\n\n          if (scrolled < options.top && !$this.hasClass('pin-top')) {\n            removePinClasses($this);\n            $this.css('top', 0);\n            $this.addClass('pin-top');\n            $this.parent().css({\n              'padding-top': 0\n            });\n\n            if (options.hide) {\n              $this.css({\n                transition: ''\n              });\n            }\n          } // I removed the pin-bottom check to get the 'hidden' sticky block working not sure if this will break anything.\n          // If (scrolled > options.bottom && !$this.hasClass('pin-bottom')) {\n\n\n          if (scrolled >= options.bottom) {\n            if (options.hide) {\n              $this.css({\n                transition: 'top .3s ease-in-out'\n              });\n\n              if (scrollDirection === 'down') {\n                $this.css({\n                  top: 0\n                });\n              }\n\n              if (scrollDirection === 'up') {\n                $this.css({\n                  top: options.bottom - this.$original_offset\n                });\n              }\n            } else {\n              $this.css('top', options.bottom - this.$original_offset);\n            }\n\n            removePinClasses($this);\n            $this.addClass('pin-bottom');\n            $this.parent().css({\n              'padding-top': 0\n            });\n          }\n        });\n      }\n\n      $(this).data('pushpin-id', $uniqueId);\n      updateElements($this, $(window).scrollTop());\n      $(window).on('scroll.' + $uniqueId, function () {\n        var $scrolled = $(window).scrollTop() + options.offset;\n        updateElements($this, $scrolled);\n      });\n    });\n  };\n})(jQuery); // PARALLAX ------------------------------------------------------------------------------------------------------------\n\n/*\n * @brief Overloading materialize parallax so we can offer the fixed, parallax slow, parallax medium, parallax fast that\n *        are so desperately pivotal to ontraport's success.\n */\n\n\n(function ($) {\n  $.fn.parallax = function (options) {\n    var $window = $(window),\n        window_width = $window.width(); // Parallax Scripts\n\n    return this.each(function (i) {\n      // This is the block that has the parallax\n      var $this = $(this),\n          speedModifier = .66;\n\n      if (options.speed === 'parallax_slow') {\n        speedModifier = .33;\n      } else if (options.speed === 'parallax_fast') {\n        speedModifier = 1;\n      }\n\n      $this.addClass('parallax');\n\n      if (options.speed === 'fixed') {\n        $this.addClass('parallax--fixed');\n      }\n\n      var videoSelector = 'video, iframe',\n          isVideo = $this.find(videoSelector).length > 0,\n          imageElement = $this.find('img')[0],\n          container = this;\n      var containerWidth, containerHeight, targetWidth, targetHeight; // Determine what the container dimensions should be. Page or block.\n\n      if (options.speed === 'fixed') {\n        // Fixed background will stretch the target image or video to be the size of the window.\n        // This is because the container of the block acts as a window that reveals the target underneath it\n        // as it scrolls up/down through the page.\n        // We want the target to be stretched to the size of the window so that the target will always be visible\n        // as the block reveals it. If we don't stretch it to window size, then if the target is too small, we'll\n        // see the background color underneath the target.\n        container = window;\n        containerHeight = window.innerHeight; // But ultimately for fixed background, we only need the target to be as wide as its block. Since the\n        // the width of the block acts as the window that reveals the background target.\n        // In the cases where the block width is less than the page width (like if you set your page width to be\n        // \"small\"), then forcing the target to stretch to the page width would cause unnecessary stretching.\n\n        containerWidth = this.clientWidth;\n      } else {\n        // Any other options besides fixed, should use the block as its container\n        containerHeight = this.clientHeight;\n        containerWidth = this.clientWidth;\n      } // Set the initial position of the video\n\n\n      if (isVideo) {\n        op.positionVideo($(container), this);\n      } else {\n        // It's image parallax. Stretch by different factors depending on window size.\n        // Also, we stretch differently depending on whether its fixed parallax or non-fixed parallax (slow, med, fast).\n        var parallaxStretchFactor = 1; // Use the natural dimensions of the image to better determine how much the image needs to stretch.\n\n        targetHeight = imageElement.naturalHeight;\n        targetWidth = imageElement.naturalWidth; // The image needs to be a little bigger than the container so that a parallax scroll effect is possible.\n        // Through arbitrary testing, parallax scrolling is best when the image is at least 1.5 times the container.\n        // Therefore, only stretch the image if it's not at least 1.5 times larger than the container\n        // Don't add a stretch factor for fixed parallax scrolling since it does not need to stretch past container\n\n        if (options.speed !== 'fixed' && (targetHeight < this.clientHeight * 1.5 || targetWidth < this.clientWidth * 1.5)) {\n          parallaxStretchFactor = 1.5;\n        }\n\n        var newDimensions = null;\n\n        if (targetWidth !== 0 && targetHeight !== 0) {\n          newDimensions = op.adjustDimensions({\n            containerWidth: containerWidth,\n            containerHeight: containerHeight,\n            targetWidth: targetWidth,\n            targetHeight: targetHeight,\n            targetTagName: imageElement.tagName,\n            stretchFactor: parallaxStretchFactor\n          });\n        }\n\n        if (newDimensions && newDimensions.width !== 0 && newDimensions.height !== 0) {\n          imageElement.style.width = newDimensions.width + 'px';\n          imageElement.style.height = newDimensions.height + 'px';\n        }\n      }\n\n      function updateParallax(initial) {\n        var supportedParallaxElementsSelector = 'img, video, iframe',\n            imageSelector = 'img',\n            videoSelector = 'video, iframe',\n            containerHeight = $this.height(),\n            mobileSize = +op.mobileBreakpoint || 600;\n\n        if (window_width <= mobileSize) {\n          containerHeight = containerHeight > 0 ? containerHeight : $this.find(supportedParallaxElementsSelector).height();\n        } else {\n          containerHeight = containerHeight > 0 ? containerHeight : 500;\n        } // $parallaxTarget is the img or video that is to be parallaxed\n\n\n        var $parallaxTarget = $this.find(supportedParallaxElementsSelector).first(),\n            imgHeight = $parallaxTarget.height(),\n            imgWidth = $parallaxTarget.width(),\n            viewportHeight = window.innerHeight,\n            viewportWidth = window.innerWidth,\n            parallax_dist = imgHeight - containerHeight,\n            bottom = $this.offset().top + containerHeight,\n            top = $this.offset().top,\n            scrollTop = $(window).scrollTop(),\n            windowHeight,\n            windowBottom,\n            percentScrolled,\n            parallax;\n\n        if (initial) {\n          $parallaxTarget.css('display', 'block');\n        } // If there's a video, make sure the video-background overlay covers precisely\n\n\n        if ($this.find('.video-container video').length) {\n          // Ensure the overlay covers the video inside the .parallax-image element\n          $this.find('.video-background-overlay').css('height', $this.find('.parallax-image').height() + 'px');\n        }\n\n        var $videoContainer = $this.find('.video-container'),\n            isVideo = $this.find(videoSelector).length > 0,\n            moveDeltaX = '0'; // Stretch the videos out some so that they cover the block, if needed\n        // Center the video as needed\n\n        if (isVideo) {\n          if (imgWidth > viewportWidth) {\n            // Re-center the video\n            moveDeltaX = '-' + (imgWidth / 2 - viewportWidth / 2) + 'px'; // Since we've adjusted the video's dimensions, we don't need to apply this class\n            // Which is mostly used to maintain the aspect ratio of the video to hide black bars.\n\n            $videoContainer.removeClass('video-container');\n          }\n        }\n\n        if (options.speed === 'fixed') {\n          parallax = Math.round(imgHeight - containerHeight - (top - scrollTop));\n\n          if (isVideo) {\n            $this.find(videoSelector).css('transform', 'translate3D(' + moveDeltaX + ',' + parallax + 'px, 0)');\n          } else {\n            // For images, use -50% for the X argument to center the image\n            $this.find(imageSelector).css('transform', 'translate3D( -50%,' + parallax + 'px, 0)');\n          }\n        } else {\n          windowHeight = window.innerHeight;\n          windowBottom = scrollTop + windowHeight;\n          percentScrolled = (windowBottom - top) / (containerHeight + windowHeight) * speedModifier;\n\n          if (percentScrolled < 0) {\n            percentScrolled = 0;\n          } else if (percentScrolled > 1) {\n            percentScrolled = 1;\n          }\n\n          parallax = Math.round(parallax_dist * percentScrolled);\n\n          if (bottom > scrollTop && top < scrollTop + windowHeight) {\n            if (isVideo) {\n              // Videos are already centered, so use 0 for the X argument\n              $this.find(videoSelector).first().css('transform', 'translate3D(' + moveDeltaX + ',' + parallax + 'px, 0)');\n            } else {\n              // For images, use -50% for the X argument to center the image\n              $this.find(imageSelector).first().css('transform', 'translate3D( -50%,' + parallax + 'px, 0)');\n            }\n          }\n        }\n\n        $parallaxTarget = $videoContainer = null;\n      } // Wait for image load\n\n\n      $this.find('img').one('load', function () {\n        window.requestAnimationFrame(updateParallax.bind(this, true));\n      }).each(function () {\n        if (this.complete) {\n          $(this).trigger('load');\n        }\n      });\n      $this.find('video').one('playing', function () {\n        window.requestAnimationFrame(updateParallax.bind(this, true));\n      });\n      $(window).scroll(function () {\n        window_width = $window.width();\n        window.requestAnimationFrame(updateParallax.bind(this, false));\n      });\n      $(window).resize(function () {\n        window_width = $window.width();\n        window.requestAnimationFrame(updateParallax.bind(this, false));\n      });\n    });\n  };\n})(jQuery); // JUMP TO BLOCK  ------------------------------------------------------------------------------------------------------\n\n/*\n * Provide functionality to jump to a specific block on the page.\n */\n\n\n(function ($) {\n  $.fn.scrollToBlock = function () {\n    var $scrollToBlock = this;\n\n    if ($scrollToBlock.length === 1) {\n      var scrollToPosition = $scrollToBlock.offset().top; // Check if there will be a sticky block present when scrolled to element\n\n      if ($scrollToBlock.closest('.sticky-wrapper').length) {\n        // Find the sticky block closest to the element we are scrolling to\n        var $stickyBlock = $scrollToBlock.prevAll('.opt-sticky-block').eq(0);\n\n        if ($stickyBlock.length) {\n          // Get the sticky block definition\n          var optId = $stickyBlock.attr('opt-id'),\n              stickyBlockDef = stickyBlocks.filter(function (block) {\n            return block.id === optId;\n          }); // If sticky block is not hidden, subtract its height from the scrollTop\n\n          if (stickyBlockDef.length && !stickyBlockDef[0].hide) {\n            scrollToPosition -= $stickyBlock.height() + parseInt($stickyBlock.css('padding-top'));\n          }\n        }\n      }\n\n      $('body, html').animate({\n        scrollTop: scrollToPosition\n      }, 1000);\n    }\n  };\n\n  $('a[data-url_type=\"block_link\"]').on('click', function (ev) {\n    ev.preventDefault();\n    var blockId = this.getAttribute('href');\n    $(blockId).scrollToBlock();\n  });\n})(jQuery);\n/*\n * @brief Ontraports public facing landing page scripts. These scripts are designed to only run on public facing sites.\n */\n\n\n(function ($, context) {\n  var _submitAttempts = {},\n      $documentBody = $(document.body),\n      iframe_done = false,\n      op = context.op || (context.op = {}),\n      OPreCaptchaAllowSubmit = false;\n  window.ACCOUNT_SIGNUP_ERROR = 10;\n  window.CC_VERIFY_POST = 42;\n  window.CC_VERIFY_SHOW_IFRAME = 183;\n  window.CC_VERIFY_HIDE_IFRAME = 184;\n  window.CC_VERIFY_GET_CC_DATA = 185;\n  window.LOG_LEVEL_ERROR = 0;\n  window.LOG_LEVEL_WARNING = 1;\n  window.LOG_LEVEL_DEBUG = 2;\n  window.PROTOCOL = 'https://', window.COUPON_PROCESS_DOMAIN = PROTOCOL + 'forms.ontraport.com', window.IN_DEBUG_MODE = false, window.FORM_PROCESS_DOMAIN = PROTOCOL + 'forms.ontraport.com', window.CC_VERIFY_DOMAIN = FORM_PROCESS_DOMAIN + '/v2.4/cc_verify.php'; // Initialize logging.\n\n  var script = document.createElement('script');\n  script.src = 'https://optassets.ontraport.com/opt_assets/static/js/logging.js';\n  script.async = true;\n  document.getElementsByTagName('head')[0].appendChild(script);\n  op.debug = false;\n  op.currencySettings = false; // Lazy load images\n\n  const opLazyLoad = new _opt_lazyload_ts__WEBPACK_IMPORTED_MODULE_0__[\"OpLazyLoad\"]();\n  op.opLazyLoad = opLazyLoad; // Check if the page has dynamic content\n\n  Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opDynamicContent\"])(); // Check for icons.\n\n  const hasFontAwesomeIcons = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opFontAwesomeIcons\"])(); // Check for and load facebook comments elements\n\n  const hasFbComments = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opFacebookComments\"])(); // Check for ontraforms\n\n  const hasOntraForms = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opOntraForms\"])(); // Check for recaptcha elements\n\n  const hasRecaptcha = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opRecaptcha\"])(); // Check for countdown timers\n\n  const hasCountDownTimer = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opCountDownTimer\"])(); // Check for order summaries\n\n  const hasOrderSummary = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opOrderSummary\"])(); // Check for payment info\n\n  const hasPaymentInfo = Object(_opt_optionalScripts_ts__WEBPACK_IMPORTED_MODULE_1__[\"opPaymentInfo\"])(); // @TODO: This will be invalidated by dynamic blocks. See if this code needs updating\n  // Check for recaptcha elements\n\n  const reCaptchaArray = document.querySelectorAll('.g-recaptcha');\n  /*\n   * @brief Build and or refresh sticky blocks.\n   */\n\n  op.buildStickyBlocks = function (stickyBlocks) {\n    var activeElement = document.activeElement.nodeName; // Check if there are sticky blocks on the page, if not return. IF you turn off a global sticky block the sticky block script is still backed into the page until\n    // the user republishes, we get around this by checking if any of the blockare still sticky by checking for the class.\n    //\n    // If an iframe video (youtube or wistia) is playing, don't rebuild sticky blocks.\n    // We'll also check to see if there is a iframe embedded form.\n    // OPF__embedded-form is checking for ontraforms.\n    // [class*=\"moonray-form-iframe\"] is checking for legacy forms.\n\n    if (document.querySelectorAll('.opt-sticky-block').length === 0 || activeElement === 'IFRAME' && ($(document.activeElement.parentElement).hasClass('video-container') || document.activeElement.closest('.OPF__embedded-form') || document.activeElement.closest('[class*=\"moonray-form-iframe\"]'))) {\n      return;\n    } // Loop through the stick blocks and make sure that all of the blocks are still sticky by searching for the block id and verifying it has a sticky block class. If it doesn't\n    // Remove the stickyblock from the list.\n\n\n    for (var i = stickyBlocks.length - 1; i >= 0; i--) {\n      let block = document.querySelector('.opt-id-' + stickyBlocks[i].id);\n\n      if (!block) {\n        stickyBlocks.splice(i, 1);\n      } else if (!block.classList.contains('opt-sticky-block')) {\n        stickyBlocks.splice(i, 1);\n      }\n    } // If we're on a mobile page, and there's an input active, hide sticky blocks so they don't cover the input\n\n\n    if ((activeElement === 'INPUT' || activeElement === 'TEXTAREA') && op.isMobileDevice() === true) {\n      // Hide all sticky blocks\n      $('.opt-sticky-block').addClass('opt-sticky-block--hidden');\n      return;\n    } else {\n      // If there are any hidden sticky blocks, show them\n      $('.opt-sticky-block').removeClass('opt-sticky-block--hidden');\n    }\n\n    var top, bottom, selector, $wrapper; // Clean up, Remove any sticky wrappers in case the user is resizing and we have to redeclare stickyblocks\n\n    $('.sticky-wrapper').children().unwrap();\n\n    for (var i = 0, l = stickyBlocks.length; i < l; i++) {\n      var block = stickyBlocks[i],\n          $stickyBlock = $('.opt-id-' + block.id); // Clean up\n\n      if ($stickyBlock.pushpin) {\n        $stickyBlock.pushpin('remove');\n      } // If the sticky block is not yet visible no need to initialize it yet.\n\n\n      if ($stickyBlock[0].style.display === 'none') {\n        continue;\n      } // Check the viewport size restrictions\n\n\n      var viewport = $stickyBlock.attr('data-block-viewport-display');\n\n      if (viewport !== 'all' && viewport !== op.getViewportSize()) {\n        continue;\n      }\n\n      if ($stickyBlock.data('pushpinId')) {\n        $stickyBlock.pushpin('remove');\n      }\n\n      $wrapper = $stickyBlock.closest('.sticky-wrapper');\n\n      if (!$wrapper.length) {\n        selector = '.opt-id-' + block.nextId;\n        $stickyBlock.nextUntil(selector + '[data-block-viewport-display=\"all\"],' + selector + '[data-block-viewport-display=\"' + op.getViewportSize() + '\"]').addBack().wrapAll('<div class=\\'sticky-wrapper\\' />');\n        $wrapper = $stickyBlock.closest('.sticky-wrapper');\n      }\n\n      $wrapper.height($wrapper.height());\n      top = $wrapper.offset().top;\n      bottom = $wrapper.offset().top + $stickyBlock.parent().innerHeight() - $stickyBlock.outerHeight();\n      $stickyBlock.pushpin({\n        top: top,\n        bottom: bottom,\n        hide: block.hide\n      });\n    }\n  };\n  /*\n   * Borrowed from Underscore.js 1.9.1\n   * Some functions take a variable number of arguments, or a few expected\n   * arguments at the beginning and then a variable number of values to operate\n   * on. This helper accumulates all remaining arguments past the function’s\n   * argument length (or an explicit `startIndex`), into an array that becomes\n   * the last argument. Similar to ES6’s \"rest parameter\".\n   */\n\n\n  op.restArguments = function (func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function () {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n\n      switch (startIndex) {\n        case 0:\n          return func.call(this, rest);\n\n        case 1:\n          return func.call(this, arguments[0], rest);\n\n        case 2:\n          return func.call(this, arguments[0], arguments[1], rest);\n      }\n\n      var args = Array(startIndex + 1);\n\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n  /*\n   * Borrowed from Underscore.js 1.9.1\n   * Returns a function, that, as long as it continues to be invoked, will not\n   * be triggered. The function will be called after it stops being called for\n   * N milliseconds. If `immediate` is passed, trigger the function on the\n   * leading edge, instead of the trailing.\n   */\n\n\n  op.debounce = function (func, wait, immediate) {\n    var timeout, result;\n\n    var later = function (context, args) {\n      timeout = null;\n\n      if (args) {\n        result = func.apply(context, args);\n      }\n    };\n\n    var debounced = op.restArguments(function (args) {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n\n        if (callNow) {\n          result = func.apply(this, args);\n        }\n      } else {\n        timeout = op.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function () {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  op.delay = op.restArguments(function (func, wait, args) {\n    return setTimeout(function () {\n      return func(...args);\n    }, wait);\n  });\n  /*\n   *\n   */\n\n  op.displaySettings = function (selector, displayDelay) {\n    setTimeout(function (_selector) {\n      return function () {\n        let _$block = $(_selector); // Force the block to not be visible\n\n\n        _$block.css({\n          display: '',\n          opacity: 0\n        }); // If its a sticky block rebuild all the sticky block thresholds\n\n\n        if (_$block.hasClass('opt-sticky-block')) {\n          op.buildStickyBlocks(stickyBlocks);\n        } // Push the opacity change to the bottom of the stack so we can see the opacity transition.\n\n\n        setTimeout(function () {\n          // Reveal the block\n          _$block.css({\n            opacity: 1\n          });\n\n          _$block.removeClass('conditions__display_time_seconds--hidden'); // If there are any slideshows in the block, reinitialize them.\n          // Otherwise, their contents will not render.\n          // Iterate over each slideshow element individually so that their initOption can be applied\n          // individually.\n\n\n          let $slideshows = _$block.find('.opt-element.slider');\n\n          if ($slideshows.length) {\n            for (let i = 0, l = $slideshows.length; i < l; ++i) {\n              $slideshows.eq(i).slider();\n            }\n          }\n\n          $slideshows = null;\n        }, 0);\n      };\n    }(selector), displayDelay);\n  };\n\n  op.formatCreditCard = function () {\n    var AMEX_CARD = {\n      pattern: /^3[47]/,\n      formats: [{\n        length: 15,\n        format: 'xxxx - xxxxxxx - xxxx'\n      }]\n    },\n        // This pattern covers the rest of the cards: Visa, Mastercard, Diners Club, or JCB\n    DEFAULT_CARD = {\n      formats: [{\n        length: 20,\n        format: 'xxxx - xxxx - xxxx - xxxx - xxxx'\n      }]\n    },\n        CC_DELIMITER = ' - ',\n        getCardType = function (cc_num) {\n      var cardType = DEFAULT_CARD;\n\n      if (cc_num.match(AMEX_CARD.pattern)) {\n        cardType = AMEX_CARD;\n      }\n\n      return cardType;\n    },\n        getCardFormatString = function (cc_num, card_type) {\n      for (var i in card_type.formats) {\n        var format = card_type.formats[i];\n\n        if (cc_num.length <= format.length) {\n          return format.format;\n        }\n      }\n\n      return DEFAULT_CARD.formats[0].format;\n    },\n        formatCardNumber = function (cc_num, card_type) {\n      var numAppendedChars = 0,\n          formattedNumber = '';\n\n      if (!card_type) {\n        return cc_num;\n      }\n\n      var cardFormatString = getCardFormatString(cc_num, card_type);\n\n      for (var i = 0, cardFormatIndex = 0; i < cc_num.length; i++) {\n        cardFormatIndex = i + numAppendedChars;\n\n        if (!cardFormatString || cardFormatIndex >= cardFormatString.length) {\n          return cc_num;\n        }\n\n        if (cardFormatString.charAt(cardFormatIndex) !== 'x') {\n          numAppendedChars += CC_DELIMITER.length;\n          formattedNumber += CC_DELIMITER + cc_num.charAt(i);\n        } else {\n          formattedNumber += cc_num.charAt(i);\n        }\n      }\n\n      return formattedNumber;\n    },\n        monitorCcFormat = function () {\n      var $el = $(this),\n          cc_num = $el.val().replace(/\\D/g, ''),\n          card_type = getCardType(cc_num);\n      $el.val(formatCardNumber(cc_num, card_type));\n    };\n\n    return monitorCcFormat;\n  }();\n  /*\n   * @brief Search for order bumps in the submited form. Detect which bumps have been opted into, check for editable quantity\n   *        then build the orderbump value and add it to the form payload.\n   * @param $form {jQuery} reference to the form that has been submited.\n   */\n\n\n  op.getOrderBumps = function ($form) {\n    var $orderBumps = $form.find('.opt-order-bump[offer]'),\n        payload = {},\n        checkbox,\n        quantityWrapper,\n        quantityInput,\n        quantityValue,\n        $input; // No order bumps return false.\n\n    if (!$orderBumps.length) {\n      return false;\n    }\n\n    $orderBumps.each(function (index, bump) {\n      // Check if the order bump is checke / opted in\n      checkbox = bump.querySelector('[type=\"checkbox\"]');\n\n      if (checkbox.checked) {\n        quantityValue = true;\n        quantityWrapper = bump.querySelector('.opt-order-bump__quantity');\n\n        if (quantityWrapper.style.display !== 'none') {\n          quantityInput = bump.querySelector('.opt-order-bump__quantity-input');\n          quantityValue = quantityInput.value;\n        }\n\n        payload[bump.getAttribute('opt-id')] = quantityValue;\n      }\n    }); // No order bumps are selected return false\n\n    if ($.isEmptyObject(payload)) {\n      return false;\n    } // We have selected order bumps so add the orderbumps input to the form\n\n\n    $input = $('<input name=\"orderbumps\" type=\"hidden\" />');\n    $input.val(JSON.stringify(payload));\n    $form.append($input);\n  };\n  /*\n   * Return a string representation of the viewport size. I made a helper so we have a central place\n   * to do this check and extend it. The return values should match the possible values of the opt element\n   * data-block-viewport-display values used in block_v3.js and opt.materializecss.css.\n   */\n\n\n  op.getViewportSize = function () {\n    var mobileSize = +op.mobileBreakpoint || 600,\n        width = window.outerWidth,\n        size = 'desktop';\n\n    if (width <= mobileSize) {\n      size = 'mobile';\n    }\n\n    return size;\n  }; // Data target id of the last opened material select field. We keep track of it because we need it to toggle the zindex of the containing blocks/rows\n\n\n  op.materialSelectLast = null;\n  /*\n   * @brief Material select close callback. Toggle the block and row z-index back to there original values if they have been modified because of a select opening upward.\n   */\n\n  op.materialSelectClose = function (select) {\n    var col = select.closest('.col__style'); // When materialize dropdowns are closing, make sure we remove any overflow\n    // that we hardcoded when the dropdown was opening\n\n    if (col) {\n      col.style.overflow = '';\n    } // If it is not a select that opens towards the top abort mission.\n\n\n    if (parseInt(this.dropdownEl.style.top) >= 0) {\n      return;\n    } // Get the wrapping block and rows and restore their original z-index.\n\n\n    var block = select.closest('[opt-type=\"block-v3\"]'),\n        row = select.closest('.row');\n\n    if (this.id === op.materialSelectLast) {\n      if (block.zIndexVal || block.zIndexVal === '') {\n        block.style.zIndex = block.zIndexVal;\n      }\n\n      if (row.zIndexVal || row.zIndexVal === '') {\n        row.style.zIndex = row.zIndexVal;\n      }\n\n      if (col.zIndexVal || col.zIndexVal === '') {\n        col.style.zIndex = col.zIndexVal;\n      }\n    }\n  };\n  /*\n   * @brief Material select open callback, we toggle the row and block zindex to auto so select options will open on top of rows and columns above them.\n            Note, This runs on  selectOpenStart event so we have to use the settimeout.\n            We can't run this on the end of the open because materialize hard codes a funtion onto that callback.\n            Nerds..\n   * @todo  Still have an edge case, if the select options don'e exceed the size of the row or block we don't need to do this.\n   */\n\n\n  op.materialSelectOpen = function (select) {\n    // We have to use a setTimeout so we give the select options time to render. Then we can call _getDropdownPostion to determine if the select is opening upward.\n    setTimeout(function () {\n      var p = this._getDropdownPosition(),\n          mobileSize = +op.mobileBreakpoint || 600;\n\n      op.materialSelectLast = this.id;\n      var col = select.closest('.col__style');\n\n      if (col) {\n        // Force the column style to overflow visible when the dropdown is opening,\n        // incase it was hidden if border radius was added\n        col.style.overflow = 'visible'; // If we are on mobile, the columns are stacked so we need to bump up the column z-index while dropdown is open\n\n        if (window.innerWidth <= mobileSize) {\n          if (!col.zIndexVal && col.zIndexVal !== '') {\n            col.zIndexVal = col.style.zIndex;\n          }\n\n          col.style.zIndex = '9999';\n        }\n      }\n\n      if (p.verticalAlignment === 'bottom') {\n        var block = select.closest('[opt-type=\"block-v3\"]'),\n            row = select.closest('.row');\n\n        if (!block.zIndexVal && block.zIndexVal !== '') {\n          block.zIndexVal = block.style.zIndex;\n        }\n\n        if (!row.zIndexVal && row.zIndexVal !== '') {\n          row.zIndexVal = row.style.zIndex;\n        }\n\n        block.style.zIndex = '9999';\n        row.style.zIndex = '9999';\n      }\n    }.bind(this), 50);\n  };\n  /*\n   * Borrowed from underscore js\n   * Returns a function, that, when invoked, will only be triggered at most once\n   * during a given window of time. Normally, the throttled function will run\n   * as much as it can, without ever going more than once per `wait` duration;\n   * but if you'd like to disable the execution on the leading edge, pass\n   * `{leading: false}`. To disable execution on the trailing edge, ditto.\n   */\n\n\n  op.throttle = function (func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n\n    if (!options) {\n      options = {};\n    }\n\n    var later = function () {\n      previous = options.leading === false ? 0 : Date.now();\n      timeout = null;\n      result = func.apply(context, args);\n\n      if (!timeout) {\n        context = args = null;\n      }\n    };\n\n    return function () {\n      var now = Date.now();\n\n      if (!previous && options.leading === false) {\n        previous = now;\n      }\n\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n\n        if (!timeout) {\n          context = args = null;\n        }\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  };\n  /*\n   * @brief Event handler run when order bump is checked/unchecked. This adds/removes the order bump to/from the order summary\n   * @param ev {event} event reference from the checkbox event.\n   */\n\n\n  op.updateOrderSummaryWithOrderBump = function (ev) {\n    var form = ev.target.closest('form'),\n        orderSummary = form && form.querySelector('ontraport-order-summary');\n\n    if (orderSummary) {\n      var orderBump = ev.target.closest('.opt-order-bump'),\n          obOffer = JSON.parse(orderBump.getAttribute('offer')),\n          obTaxes = JSON.parse(orderBump.getAttribute('taxes')),\n          obShipping = JSON.parse(orderBump.getAttribute('shipping')),\n          osOffer = JSON.parse(orderSummary.getAttribute('offer')),\n          osTaxes = JSON.parse(orderSummary.getAttribute('taxes')),\n          osShipping = JSON.parse(orderSummary.getAttribute('shipping')),\n          isChecked = ev.target.checked; // Make sure we preserve the existing coupon offer if present\n\n      const grid = form.querySelector('.moonray-from-offer-grid');\n\n      if (!grid) {\n        console.warning('updateOrderSummaryWithOrderBump(), failure to find the offer grid. ');\n      } else {\n        var offerElement = $(grid);\n\n        if (offerElement) {\n          let controller = offerElement.controller();\n\n          if (controller && controller.offerCopy) {\n            var currentOfferCoupon = controller.offerCopy.serialize().coupon;\n\n            if (currentOfferCoupon) {\n              osOffer.coupon = currentOfferCoupon;\n            }\n          }\n        }\n      } // Check for products with editable quantity we need to update them in the offer if the user has made changes\n\n\n      osOffer.products.forEach(product => {\n        if (product.quantityEditable == true || product.quantityEditable == 'true') {\n          product.quantity = +document.querySelector('[name*=\"' + product.uid + '\"]').value;\n        }\n      }); // If checked, add products and taxes of order bump from the order summary\n\n      if (isChecked) {\n        // Force order bump products to have their quantity be not editable when adding to the order summary.\n        // Editable quantity should be edited in the order bump\n        obOffer.products = obOffer.products.map(function (obProduct) {\n          obProduct.quantityEditable = false;\n          return obProduct;\n        });\n        osOffer.products = osOffer.products.concat(obOffer.products); // Extract the order summary's tax IDs so that we can filter those out of the order bump to prevent duplicates.\n\n        var osTaxIds = osTaxes.map(function (osTax) {\n          return osTax.id;\n        }); // Filter out the taxes that are currently present in the OS so we don't readd them\n\n        obTaxes = obTaxes.filter(function (obTax) {\n          return !osTaxIds.includes(obTax.id);\n        });\n        osTaxes = osTaxes.concat(obTaxes);\n        osShipping = osShipping.concat(obShipping); // Else not checked, so remove the products and taxes of order bump from the order summary\n      } else {\n        // Extract the order bump's product and tax IDs to know what to remove from the order summary\n        var obProductIds = obOffer.products.map(function (obProduct) {\n          return obProduct.id;\n        }),\n            obTaxIds = obTaxes.map(function (obTax) {\n          return obTax.id;\n        }),\n            obShippingIds = obShipping.map(function (obShip) {\n          return obShip.id;\n        }),\n            // This grabs all order bumps present besides the one that is selected\n        otherOrderBumps = form.querySelectorAll('.opt-order-bump[offer]:not([opt-id=\"' + orderBump.getAttribute('opt-id') + '\"])'); // This loops over all other order bumps (besides the one that was just unchecked) and if the other\n        // Order bump is checked, it compares its tax IDs to those in the obTaxIds array and removes them.\n        // This will prevent the unchecking of an order bump from removing a tax if it is also present\n        // In another order bump that is currently checked.\n\n        for (var i = 0, l = otherOrderBumps.length, otherObTaxIds, otherObShippingIds; i < l; i++) {\n          if (otherOrderBumps[i].querySelector('input[type=\"checkbox\"]').checked) {\n            otherObTaxIds = JSON.parse(otherOrderBumps[i].getAttribute('taxes')).map(function (obTax) {\n              return obTax.id;\n            });\n            obTaxIds = obTaxIds.filter(function (obTaxId) {\n              return !otherObTaxIds.includes(obTaxId);\n            });\n            otherObShippingIds = JSON.parse(otherOrderBumps[i].getAttribute('shipping')).map(function (obShip) {\n              return obShip.id;\n            });\n            obShippingIds = obShippingIds.filter(function (id) {\n              return !obShippingIds.includes(id);\n            });\n          }\n        } // Remove the order bump's products from the order summary offer\n\n\n        osOffer.products = osOffer.products.filter(function (osProduct) {\n          return !obProductIds.includes(osProduct.id);\n        }); // Remove the order bump's taxes from the order summary taxes\n\n        osTaxes = osTaxes.filter(function (osTax) {\n          return !obTaxIds.includes(osTax.id);\n        }); // Remove the order bump's shipping from the order summary shipping\n\n        osShipping = osShipping.filter(function (osShip) {\n          return !obShippingIds.includes(osShip.id);\n        });\n      }\n\n      orderSummary.setAttribute('offer', JSON.stringify(osOffer));\n      orderSummary.setAttribute('taxes', JSON.stringify(osTaxes));\n      orderSummary.setAttribute('shipping', JSON.stringify(osShipping));\n    }\n  };\n\n  op.updateOrderBumpQuantity = function (ev) {\n    var form = ev.target.closest('form'),\n        orderSummary = form && form.querySelector('ontraport-order-summary');\n\n    if (orderSummary) {\n      var orderBump = ev.target.closest('.opt-order-bump'),\n          obOffer = JSON.parse(orderBump.getAttribute('offer')),\n          newQuantity = ev.target.value,\n          editableId; // Find the editable product, update its quantity, and save the ID incase we need to update the product\n\n      obOffer.products = obOffer.products.map(function (obProduct) {\n        if (obProduct.quantityEditable) {\n          editableId = obProduct.id;\n          obProduct.quantity = newQuantity;\n        }\n\n        return obProduct;\n      });\n      orderBump.setAttribute('offer', JSON.stringify(obOffer)); // If the order bump is checked, also update the order summary's product quantity\n\n      if (orderBump.querySelector('input[type=\"checkbox\"]').checked) {\n        var osOffer = JSON.parse(orderSummary.getAttribute('offer'));\n        osOffer.products = osOffer.products.map(function (osProduct) {\n          if (osProduct.id === editableId) {\n            osProduct.quantity = newQuantity;\n          }\n\n          return osProduct;\n        });\n        orderSummary.setAttribute('offer', JSON.stringify(osOffer));\n      }\n    }\n  };\n  /*\n   * @brief Set value on a shipping field\n   */\n\n\n  op.setShippingFieldValue = function ($relatedShippingField, newVal) {\n    let $relatedShippingFieldContainer = $relatedShippingField.closest('.opt-input'); // If field in question in a dropdown, use materialize's internal update function\n\n    if ($relatedShippingField.hasClass('select-field')) {\n      let shippingFieldMaterializeDropdown = M.FormSelect.getInstance($relatedShippingField.get(0));\n\n      if (shippingFieldMaterializeDropdown) {\n        // Loop over target materialize dropdown's \"value dictionary\", which keeps an internal mapping between the select option and the generated LIs\n        let valueDictionary = shippingFieldMaterializeDropdown._valueDict;\n\n        for (let key in valueDictionary) {\n          // Once we find the option field that has the new value, use the key to find the corresponding LI\n          // and use it to trigger materialize's internal selection handler\n          if (valueDictionary[key].el.value === newVal) {\n            shippingFieldMaterializeDropdown._handleOptionClick({\n              target: $relatedShippingFieldContainer.find('#' + key),\n              preventDefault: $.noop,\n              stopPropagation: $.noop\n            });\n\n            break;\n          }\n        }\n      }\n    } else {\n      // Set target input value\n      $relatedShippingField.val(newVal); // If it is a materialize input, add the active class if value is not empty string, otherwise remove it\n\n      if ($relatedShippingFieldContainer.attr('opt-input-style') === 'default') {\n        $relatedShippingFieldContainer.find('label').toggleClass('active', newVal !== '');\n      }\n    }\n  };\n  /**\n   * This functionality is only supposed to be run once per page. Since we made initForms a function that can be invoked again,\n   * prevent this logic from running more than once by flipping a special flag in the op object and checking it before the next call\n   */\n\n\n  op.onceOnlyFormInitialization = function () {\n    if (op.oneTimeFormInitializationRan) {\n      return;\n    }\n    /*  What is this craziness?? Well, let me tell you...\n     *  So iOS will screen zoom in/out on form input elements if the font size is\n     *  anything other than 16px.  Upon zoom, the click event for the select option's\n     *  <li> will not fire!  Materialize solves this by forcing inputs to always be 16px.\n     *  We can't do that with our editor cause we're pro-font sizes, so here we are overriding\n     *  the CLOSE click handler and manually triggering the selected option.\n     *\n     *  @author jp@ontraport.com\n     */\n\n\n    (function (_handleDocumentClick) {\n      M.Dropdown.prototype._handleDocumentClick = function (e) {\n        var $target = $(e.target);\n\n        if ($target.closest('.dropdown-content').length && !this.isTouchMoving) {\n          $target.parents('li:not(.optgroup)').trigger('click');\n        }\n\n        _handleDocumentClick.call(this, e);\n      };\n    })(M.Dropdown.prototype._handleDocumentClick); // Init the elements\n\n\n    if (!$.fn.datepicker) {\n      // Sometimes the datepicker and formselector won't be inited in jquery so we do it explicitly.\n      // Not sure why this happens, we suspect it's a byproduct of the webpack build.\n      // Once jquery gets added to the webpack build we can get rid of this.\n      M.initializeJqueryWrapper(M.Datepicker, 'datepicker', 'M_Datepicker');\n      M.initializeJqueryWrapper(M.FormSelect, 'formSelect', 'M_FormSelect');\n    }\n\n    op.oneTimeFormInitializationRan = true;\n  };\n  /*\n   * @brief Init form inputs and bind submit buttons.\n   */\n\n\n  op.initForms = function (formIds) {\n    op.onceOnlyFormInitialization();\n    let v3FormElements = []; // First check if there are any v3 forms on the page\n\n    if (formIds && formIds.length) {\n      formIds.forEach(formId => {\n        const formEl = document.querySelector(`form[opt-id=\"${formId}\"]`);\n\n        if (formEl) {\n          v3FormElements.push(formEl);\n        }\n      });\n    } else {\n      v3FormElements = Array.from(document.forms).filter(form => {\n        // Get op v3 forms that are not dynamic block templates\n        return form.classList.contains('opt-row') && !form.hasAttribute('data-dc');\n      });\n    }\n\n    if (!v3FormElements.length) {\n      // No v3 forms found so jump ship\n      return false;\n    }\n\n    v3FormElements.forEach(formElement => {\n      op.initForm(formElement);\n    });\n  }; // End init forms\n\n\n  op.initForm = function (formElement) {\n    if (!formElement) {\n      return false;\n    }\n\n    let $v3Form = $(formElement);\n\n    if (!$v3Form.length || !$v3Form.attr('opt-id') || !$v3Form.is('form') || !$v3Form.hasClass('opt-row') || $v3Form.hasClass('opt-form--initialized')) {\n      return false;\n    } // Make sure all conditional redirect forms have the proper form action flag\n\n\n    if ($v3Form.is('[data-conditional-redirect]')) {\n      let conditionalFormAction = $v3Form.attr('action');\n\n      if (conditionalFormAction) {\n        $v3Form.attr('action', conditionalFormAction + '&_conditionalResponse=true');\n      }\n    }\n\n    var $expirationYear = $v3Form.find('select[name=\"payment_expire_year\"]'); // Search for year expiration fields and stub out there options\n\n    $expirationYear.each(function (el) {\n      var currentYear = new Date().getFullYear(),\n          options = '',\n          // Dont leave this undefined, otherwise the += \"<option..\" below will add it to \"undefined\"\n      year; // Remove every value-less option that isn't the first.\n      // the first value-less option will be the option that just says 'Select...' by default (but can be customized by user)\n\n      $(this).find('option[value=\"\"]:not(:first)').remove();\n\n      for (var i = 0; i <= 25; i++) {\n        year = i + currentYear; // Check for dupes before adding option.\n\n        if ($(this).find('option[value=\"' + year + '\"]').length == 0) {\n          options += '<option value=\"' + year + '\">' + year + '</option>';\n        }\n      }\n\n      $(this).append(options);\n    }); // When expiration year is changed, trigger events on it and the expiration month to get the validation to run\n\n    $expirationYear.on('change', function () {\n      var $this = $(this),\n          $expireMonth = $this.closest('form').find('select[name=\"payment_expire_month\"]');\n      $this.trigger('blur');\n      $this.trigger('input');\n      $expireMonth.trigger('blur');\n      $expireMonth.trigger('input');\n    }); // When expiration month is changed, trigger events on it and the expiration year to get the validation to run\n\n    $v3Form.find('select[name=\"payment_expire_month\"]').on('change', function () {\n      var $this = $(this),\n          $expireYear = $this.closest('form').find('select[name=\"payment_expire_year\"]');\n      $this.trigger('blur');\n      $this.trigger('input');\n      $expireYear.trigger('blur');\n      $expireYear.trigger('input');\n    });\n    $v3Form.find('input[name=\"payment_number\"]').each(function () {\n      var $el = $(this);\n      $el.on('input', op.formatCreditCard);\n    }); // This selector is used to add the new opt datetime picker library, if fulldate has been migrated we'll include that\n    // in the selector string\n\n    let eventListenerSelector = '[opt-input-type=\"timestamp\"]'; // The new opt datepicker library adds a second input that is disabled to store the date from the date picker, but\n    // with the old library there is only one input that isn't disabled.\n\n    if (!$v3Form.find('[opt-input-type=\"fulldate\"] input[disabled=\"disabled\"]').length) {\n      // If the page hasn't been re-saved to use the new date picker library then run the legacy event listener\n      $v3Form.find('[opt-input-style=\"default\"][opt-input-type=\"fulldate\"] input').on('focus', function (ev) {\n        let datePicker = M.Datepicker.getInstance(ev.target);\n\n        if (datePicker) {\n          datePicker.open();\n        }\n      });\n    } else {\n      // We're using the new opt datepicker library so the listeners are going to be the same for timestamp and fulldate input types.\n      eventListenerSelector += ', [opt-input-type=\"fulldate\"]';\n    }\n\n    $v3Form.find(eventListenerSelector).on('click', OptDateTimePicker.dateTimeFieldClickHandler).on('dateTimePickerSave', OptDateTimePicker.dateTimeFieldSaveHandler).on('dateTimePickerCancel', OptDateTimePicker.dateTimeFieldCancelHandler);\n    var $orderBumps = $v3Form.find('.opt-order-bump[offer]');\n    $orderBumps.each(function () {\n      var form = this.closest('form'),\n          orderSummary = form && form.querySelector('ontraport-order-summary');\n\n      if (orderSummary) {\n        var osTaxes = JSON.parse(orderSummary.getAttribute('taxes')),\n            obTaxes = JSON.parse(this.getAttribute('taxes')),\n            osTaxIds = osTaxes.map(function (osTax) {\n          return osTax.id;\n        }); // Remove any duplicate taxes from the order bump present in the offer summary so that they\n        // Are not double counted in the offer summary when order bump data is merged\n\n        obTaxes = obTaxes.filter(function (obTax) {\n          return !osTaxIds.includes(obTax.id);\n        });\n        this.setAttribute('taxes', JSON.stringify(obTaxes)); // Bind handlers to checkbox and quantity inputs of order bumps\n\n        $(this).find('input[type=\"checkbox\"]').on('change', op.updateOrderSummaryWithOrderBump);\n        $(this).find('.opt-order-bump__quantity-input').on('change', op.updateOrderBumpQuantity);\n      }\n    }); // Loop over each order bump and update the order summarys accordingly. This needs a seperate loop\n    // From the code above so that the taxes are filtered out from the order bumps before any are checked.\n    // If we were to combine these loops, then it is possible to check an order bump which will add the tax\n    // To the order summary, and then have another order bump remove that tax ID incorrectly.\n    // We need to make sure the grid offer model has been constructed so bind to gridOfferControllerReady.\n    // The method goes off every time a change is made to the grid (it goes off like 10 times) so the call\n    // back here makes a closure to ensure we only run the order bump logic once. More or less the native\n    // equivalent of jQuery's .one method.\n\n    $v3Form.each((i, form) => {\n      form.addEventListener('gridOfferControllerReady', function () {\n        let called = false;\n\n        const temp = ev => {\n          // Check if the callback is called\n          if (called) {\n            document.removeEventListener('gridOfferControllerReady', temp);\n            return false;\n          }\n\n          called = true; // Get all the orderbumps in the row of the order summary that triggered the ready event. Next see if we need to update any of\n          // them because they are checked.\n\n          const orderBumps = ev.target.closest('.opt-row').querySelectorAll('.opt-order-bump[offer]');\n          orderBumps.forEach(el => {\n            let $checkbox = $(el).find('input[type=\"checkbox\"]'); // If checkbox is checked, run the update OS handler.\n\n            if ($checkbox.get(0).checked) {\n              op.updateOrderSummaryWithOrderBump({\n                target: $checkbox.get(0)\n              });\n            }\n          });\n        };\n\n        return temp;\n      }());\n    });\n    $v3Form.find('.opt-element .datepicker').datepicker({\n      format: 'yyyy-mm-dd',\n      container: document.body,\n      yearRange: 100,\n      onClose: function () {\n        // After picker is closed, trigger focus on datepicker input to trigger validation\n        if (this.el && this.el.focus) {\n          this.el.focus();\n        }\n      },\n      onDraw: function (context) {\n        // When date picker is rendered, replace the onOpenEnd function since its \"scroll to menu item\" functionality does not work\n        let materializeSelect = M.FormSelect.getInstance(context.calendarEl.querySelector('.orig-select-year'));\n\n        if (materializeSelect && materializeSelect.dropdown) {\n          materializeSelect.dropdown.options.onOpenEnd = function (originalOnOpenEnd) {\n            return function (ev) {\n              // Call original \"onOpenEnd\"\n              originalOnOpenEnd();\n\n              if (this.dropdownEl) {\n                let selectedDropdownItem = this.dropdownEl.querySelector('.selected');\n\n                if (selectedDropdownItem) {\n                  // Determine where to scroll the date picker's year select to. The goal is to center the selected option in the menu\n                  // Start by getting the top position of the selected item, and offset it by the top position of the menu itself\n                  let newScrollTop = selectedDropdownItem.getBoundingClientRect().top - this.dropdownEl.getBoundingClientRect().top; // Add the current scroll position. At this point the newScrollTop should\n                  // make the selected menu item appear at the top of the menu\n\n                  newScrollTop += this.dropdownEl.scrollTop; // Now subtract half the menu height so that the selected menu item is centered\n\n                  newScrollTop -= this.dropdownEl.clientHeight / 2;\n\n                  if (newScrollTop > 0) {\n                    this.dropdownEl.scrollTop = newScrollTop;\n                  }\n                }\n              }\n            };\n          }(materializeSelect.dropdown.options.onOpenEnd);\n        }\n      }\n    });\n    const $selectField = $v3Form.find('.opt-element select:not(.moonray-form-cart-shipping-select)');\n    $selectField.formSelect({\n      dropdownOptions: {\n        onOpenStart: op.materialSelectOpen,\n        onCloseStart: op.materialSelectClose\n      }\n    }); // Dropdowns are missing the \"opt-input__field\" that gets added to all inputs from the editor,\n    // because the input gets generated dynamically by materialize. Add the missing class.\n\n    $selectField.closest('.opt-element').find('input.select-dropdown').addClass('opt-input__field'); // @TODO: Check this works\n    // Make the forms smart forms and add the form conditions plugin.\n\n    $v3Form.moonraySmartForm().formConditions({\n      processorMutator: function (condition, rulesResult) {\n        if (rulesResult && condition.tru != undefined) {\n          this._processOutcomes(condition.tru, true); // This should work for all cart / payment related conditions\n\n        } else if (rulesResult == false && condition.fal != undefined) {\n          this._processOutcomes(condition.fal, false); // Just invert\n\n        } else if (rulesResult == false) {\n          this._processOutcomes(condition.tru, false);\n        }\n      },\n      outcomeActionMutator: function (outcome, rulesResult) {\n        var ret = outcome.action; // Invert only if its a show\n\n        if (rulesResult === false) {\n          // If its a string filp the result. tax and shipping rules sets are funcs\n          if ($.type(outcome.action) == 'string') {\n            if (outcome.action == 'show') {\n              ret = 'hide';\n            } else {\n              ret = null;\n            }\n          }\n        }\n\n        return ret;\n      },\n      inputEvent: 'blur change',\n      conditions: []\n    }); // Set the form currency settings.\n\n    if (op.currencySettings && op.currencySettings !== '[currency_settings]') {\n      $v3Form.find('ontraport-order-summary').attr('currency-settings', op.currencySettings);\n    } // Shipping fields same as billing toggle.\n\n\n    var shippingCheck = $v3Form.find('[name=\"shipping_same_as_billing\"]');\n\n    if (shippingCheck.length) {\n      // Get all the shipping elements from the same block and show or hide them depending on the 'same as billing' checkbox status.\n      // If hiding them, also retrieve the values from the billing field so that tax rules still function properly\n      shippingCheck.change(function (ev) {\n        var shippingInputWrappers = this.closest('.container').querySelectorAll('.opt-shipping-input'),\n            checked = this.checked;\n        shippingInputWrappers.forEach(function (input) {\n          if (checked) {\n            input.classList.add('opt-shipping-input--show');\n          } else {\n            input.classList.remove('opt-shipping-input--show');\n            let isDropdown = input.firstChild.classList.contains('opt-input--dropdown'),\n                $inputEl = $(input).find(isDropdown ? 'select' : 'input');\n\n            if ($inputEl.length) {\n              // Get the related billing field's value and set it on the shipping field\n              let billingVal = $inputEl.closest('form').find('[name=' + $inputEl.attr('name').replace('shipping_', 'billing_') + ']').val();\n              op.setShippingFieldValue($inputEl, billingVal);\n            }\n\n            $inputEl = null;\n          }\n        });\n      });\n    } else {\n      // @TODO: This can cause a bug with dynamic blocks\n      document.body.classList.add('opt-shipping-input--show');\n    }\n    /*\n     * @brief Bind form inputs keyup to check for \"enter\" btn clicks. If they click enter submit the form.\n     */\n\n\n    $v3Form.find('.opt-input__field').on('keyup', function ($ev) {\n      // Submit on enter, but allow newlines to be made in long text fields.\n      if ($ev.key === 'Enter' && $ev.target.nodeName !== 'TEXTAREA') {\n        $(this.closest('form')).trigger('submit', 'submitBtn');\n      }\n    });\n    /**\n     * When billing fields are updated, update shipping fields if \"different shipping\" checkbox is present but unchecked\n     * This is needed for tax rules that depend on shipping fields\n     */\n\n    $v3Form.find('[name^=billing_]').on('change', function (ev) {\n      let $form = $(ev.target).closest('form'),\n          $differentShippingCheckbox = $form.find('[name=shipping_same_as_billing]'); // If \"different shipping\" checkbox is present and unchecked, update shipping field\n\n      if ($differentShippingCheckbox.length && $differentShippingCheckbox.prop('checked') === false) {\n        let $relatedShippingField = $form.find('[ name=' + ev.target.name.replace('billing_', 'shipping_') + ' ]'),\n            newVal = ev.target.value;\n\n        if ($relatedShippingField.length) {\n          op.setShippingFieldValue($relatedShippingField, newVal);\n        }\n      }\n    });\n    /*\n     * @brief Something got clicked and is trying to submit the from. Figure out what got clicked and trigger a form submission and send who clicked it along.\n     */\n\n    $v3Form.find('.opt-button--submit, .opt-button--paypal, .opt-button--upsell-yes, .opt-button--upsell-no').on('click', function (ev) {\n      var $form = $(this.closest('form')),\n          submitTrigger;\n\n      if (ev.delegateTarget.classList.contains('opt-button--submit')) {\n        submitTrigger = 'submitBtn';\n      } else if (ev.delegateTarget.classList.contains('opt-button--paypal')) {\n        submitTrigger = 'paypalBtn';\n      } else if (ev.delegateTarget.classList.contains('opt-button--upsell-yes')) {\n        submitTrigger = 'upsellYes';\n      } else if (ev.delegateTarget.classList.contains('opt-button--upsell-no')) {\n        submitTrigger = 'upsellNo';\n      } else {\n        $form = null;\n        return false;\n      } // Interesting note while working on ONTRA-17803.\n      // This will not trigger the formSubmitHandler function in ONTRAFORMS.js, which is responsible for preloading\n      // subsequent forms and updating rememberFields.\n      // However, if you press enter to submit the form, then formSubmitHandler does get fired.\n      // I could never figure out why, but ultimately, it wasn't essential to make things work since forms on\n      // landing pages are spec'd to not prefill fields on progressive forms.\n\n\n      $form.trigger('submit', submitTrigger);\n      $form = null;\n    }); // Textarea autogrow\n\n    $v3Form.find('[opt-input-type=\"longtext\"][opt-input-style=\"custom\"][opt-textarea-autogrow=\"true\"]').each(function () {\n      var $textarea = $(this).find('textarea'),\n          lineHeight = parseInt($textarea.css('lineHeight')),\n          paddingTop = parseInt($textarea.css('padding-top')),\n          paddingBottom = parseInt($textarea.css('padding-bottom'));\n      $textarea.on('keyup', function () {\n        var numRows = parseInt($textarea.attr('rows')),\n            minRows = parseInt($textarea.attr('opt-min-rows')),\n            scrollHeight = $textarea[0].scrollHeight,\n            trueHeight = scrollHeight - paddingTop - paddingBottom,\n            rowHeight = numRows * lineHeight,\n            maxRows = 10,\n            newRows,\n            newRowTotal;\n\n        if (trueHeight > rowHeight) {\n          newRows = (trueHeight - rowHeight) / lineHeight;\n          newRowTotal = numRows + newRows;\n\n          if (newRowTotal <= maxRows) {\n            $(this).attr('rows', newRowTotal);\n          } else {\n            $(this).attr('rows', maxRows);\n          }\n        } else if (numRows > minRows) {\n          $(this).attr('rows', minRows);\n          trueHeight = $textarea[0].scrollHeight - paddingTop - paddingBottom;\n          rowHeight = minRows * lineHeight;\n\n          if (trueHeight > rowHeight) {\n            newRows = (trueHeight - rowHeight) / lineHeight;\n            newRowTotal = minRows + newRows;\n            $(this).attr('rows', newRowTotal);\n          }\n        }\n      });\n    });\n    /*\n     * @brief Apply custom classes and inline styles to a materialize drop down field.\n     *        The customization is stored on default <select> markup as an opt- attribute.\n     *        After the materialize dropdowns are initialized this function runs agains all\n     *        of them parsing in the customization and adding the classes and inline style it contains.\n     */\n\n    $v3Form.find('[opt-dropdown-styles]').each(function (index, el) {\n      // StyleSelect defined in opt.common.js\n      op.styleSelect($(this));\n    }); // @TODO: Check this works\n    // Init validation\n\n    $v3Form.validator({\n      errorClass: 'moonray-form-state-error',\n      messageClass: 'moonray-form-error-message moonray-form-state-error',\n      offset: [0, 13],\n      errorInputEvent: 'input',\n      inputEvent: 'blur',\n      formEvent: null,\n      effect: 'opt-v3',\n      grouped: 'true'\n    }); // Sometimes dropdowns will open upwards. This logic will make sure the block that contains the dropdown has a\n    // higher z-index than the row above it to ensure that the dropdown is not covered.\n\n    $v3Form.find('form .opt-input--dropdown ul.dropdown-content').each(function () {\n      var mutationCallback = function (mutationsList) {\n        var styleMutations = mutationsList.filter(function (mutation) {\n          return mutation.type === 'attributes' && mutation.attributeName === 'style';\n        }); // Only run this functionality once, and only if it is a style mutation.\n\n        if (styleMutations.length) {\n          var mutation = styleMutations[0],\n              displayValue = mutation.target.style.getPropertyValue('display'),\n              parentBlock = mutation.target.closest('.opt-row');\n\n          if (displayValue === 'block') {\n            // Menu show\n            // Make the parent block z-index really high so the menus show on top of everything\n            var oldZIndex = parentBlock.style.zIndex;\n\n            if (oldZIndex != 9999) {\n              parentBlock.setAttribute('data-old-zIndex', oldZIndex);\n            }\n\n            parentBlock.style.zIndex = 9999;\n          } else {\n            // Menu hide\n            // Loop over all dropdown lists in block. If one is still open, do not unset z-index\n            var dropdownLists = parentBlock.querySelectorAll('.dropdown-content');\n\n            for (var i = 0, l = dropdownLists.length; i < l; i++) {\n              if (dropdownLists[i].style.getPropertyValue('display') === 'block') {\n                return;\n              }\n            } // Restore parent z-index\n\n\n            parentBlock.style.zIndex = parentBlock.getAttribute('data-old-zIndex');\n            parentBlock.removeAttribute('data-old-zIndex');\n          }\n        }\n      }; // Options for the observer (which mutations to observe)\n\n\n      var config = {\n        attributes: true,\n        childList: false,\n        subtree: false\n      }; // Create an observer instance linked to the callback function\n\n      var observer = new MutationObserver(mutationCallback); // Start observing the target node for configured mutations\n\n      observer.observe(this, config);\n    }); // @TODO: Check this works\n    // Check for recaptcha elements and do an initial recaptcha scaling\n\n    $v3Form.find('.g-recaptcha').each((i, reCap) => {\n      op.rescaleCaptcha(reCap);\n    });\n    $v3Form.addClass('opt-form--initialized');\n  };\n  /*\n   * @brief Moonray form dependancy\n   */\n\n\n  op.readCookie = function (name) {\n    var pattern = new RegExp('(^|;\\\\s*)' + name + '=([^;]*)($|;)');\n    var match = pattern.exec(document.cookie);\n\n    if (match) {\n      let ret; // Try to decode, if it fails it is already decoded so just use that match\n\n      try {\n        ret = decodeURIComponent(match[2]);\n      } catch (err) {\n        ret = match[2];\n      }\n\n      return ret;\n    } else {\n      return null;\n    }\n  };\n  /*\n   * Rescale a recaptcha element to fit its parent element. Because our grid is responsive, and googgle didnt\n   * make recaptcha responsive.\n   */\n\n\n  op.rescaleCaptcha = function (reCap) {\n    if (!reCap) {\n      return false;\n    }\n\n    let width = reCap.parentNode.offsetWidth;\n    let scale;\n\n    if (width < 302 && window.innerWidth > 600) {\n      scale = width / 302;\n    } else {\n      scale = 1.0;\n    }\n\n    reCap.style.transform = 'scale(' + scale + ')';\n    reCap.style.transformOrigin = '0 0';\n  };\n  /*\n   * The page has been resized take action.\n   */\n\n\n  op.resize = function () {\n    // Check for recaptcha elements\n    reCaptchaArray.forEach(reCap => op.rescaleCaptcha(reCap)); // Adujst stickyBlocks\n\n    if (window.stickyBlocks) {\n      // We are in portrait mode\n      if (op.previousWindowHeight > op.previousWindowWidth) {\n        let currWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n            currHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0); // The change in window size is small\n        // this is probably the address bar on a mobile device hiding/showing\n\n        if (Math.abs(op.previousWindowHeight - currHeight) < 100 && op.previousWindowWidth == currWidth) {\n          return;\n        }\n      }\n\n      op.previousWindowHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      op.previousWindowWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      op.buildStickyBlocks(stickyBlocks);\n    }\n  };\n\n  window.OPCapcha_filled = function () {\n    OPreCaptchaAllowSubmit = true;\n    $('.g-recaptcha').removeClass('moonray-form-state-error');\n  };\n\n  window.OPCapcha_expired = function () {\n    OPreCaptchaAllowSubmit = false;\n  };\n  /*\n   * @brief\n   * @todo Can we get rid of the $clickedSubmit stuff in v3? Moonray form dependancy\n   */\n\n\n  op.serializeFormToObject = function ($form) {\n    var fields = {},\n        $clickedSubmit = $form.find('[data-submit-clicked]');\n    $.each($form.serializeArray(), function (i, field) {\n      fields[field.name] = field.value;\n    }); // Pick up the submit button that was clicked. needed for mostly upsell\n\n    if ($clickedSubmit.length && $clickedSubmit.attr('name')) {\n      fields[$clickedSubmit.attr('name')] = $clickedSubmit.val();\n    }\n\n    return fields;\n  };\n  /*\n  * Super small templating engine\n  * http://mir.aculo.us/2011/03/09/little-helpers-a-tweet-sized-javascript-templating-engine/\n  *\n  * used to display the status messages when contacting the server\n  */\n\n\n  op.t = function (s, d) {\n    for (var p in d) {\n      s = s.replace(new RegExp('{' + p + '}', 'g'), d[p]);\n    }\n\n    return s;\n  };\n\n  op.previousWindowHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  op.previousWindowWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0); // Bind an op global resize event.\n\n  window.addEventListener('resize', op.debounce(op.resize, 250));\n  /*\n   * @brief Stuff to make form conditions work.\n            Override outcomes, with ones that detect if the input is required and toggle the requiredness\n   */\n\n  if ($.jb) {\n    $.extend($.jb.formConditions.prototype.outcomeActions, {\n      show: function (elem) {\n        var required = elem.attr('data-required');\n\n        if (required == 'true') {\n          elem.attr('required', 'required');\n        }\n\n        elem.parent().show();\n      },\n      hide: function (elem) {\n        var required = elem.attr('data-required');\n\n        if (required == 'true') {\n          elem.removeAttr('required');\n        }\n\n        elem.parent().hide();\n      }\n    });\n  }\n  /*\n   * @brief Make v3 form smart\n   */\n\n\n  $.fn.moonraySmartForm = function (options) {\n    $.extend($.fn.moonraySmartForm, {\n      settings: {\n        debug: IN_DEBUG_MODE\n      }\n    });\n    $documentBody.moonrayUILockerV2();\n    /**\n     * Handles and interesting use case where mozilla reuses a rendered page on history.go( -1 ).\n     * The uiLockerMessage would still be on the page (as though the form was still processing).\n     * So before the window unloads, turn off the uiLocker \"Processing\" dialog.\n     */\n\n    $(window).on('unload', function () {\n      $(document.body).trigger('moonray.uiLockerV2');\n    }); // TOOD: add in debug settings\n    // this refers to the form on the page\n\n    return this.each(function () {\n      var gridController,\n          $this = $(this),\n          $form = $this,\n          // Check if element is present\n      UID = $form.find('[name=\"uid\"]').val(),\n          log_key = $form.find('[name=\"mopbelg\"]').val(),\n          // Used to communicate with the BE for  credit card processing, captcha, coupon codes and upsell forms with ontraforms\n      $iframe = $('<iframe/>'),\n          _log = function (name, data, level) {\n        if (op && op.log) {\n          op.log(log_key, name, data, level);\n        }\n      },\n          _flushDebugLogs = function () {\n        if (op && op.flushDebugLogs) {\n          op.flushDebugLogs();\n        }\n      },\n          _debugLog = function () {\n        _log('cc_verify_fe', {\n          args: arguments\n        }, window.LOG_LEVEL_DEBUG);\n\n        if (op.debug || IN_DEBUG_MODE) {\n          console.log(Array.prototype.slice.call(arguments));\n        }\n      },\n\n      /**\n       * This is an important variable. We set this to false just before we load a new iframe. When it finally\n       * loads, then we set this var to true. It's mostly used to control whether to keep displaying the\n       * \"form is processing\" dialog.\n       * @type {boolean}\n       */\n      iframe_done = false;\n\n      if ($.fn.moonraySmartForm.settings.debug) {\n        // Lets make it easy to see whats going in the form processor\n        $iframe.attr({\n          width: '100%',\n          height: '1000px'\n        });\n      } else {\n        $iframe.hide().attr({\n          width: 0,\n          height: 0\n        });\n      }\n\n      $iframe.attr({\n        frameborder: 0,\n        name: 'postmessage-' + UID\n      }).appendTo(document.body); // These 3 vars are used for swapping the ui locker processing dialog\n\n      const timeout = 180000,\n            incrementer = 1000;\n      let count = 0;\n      let processingStateMessages = [{\n        title: 'Still processing...'\n      }, {\n        title: 'Still working...'\n      }, {\n        title: 'Taking a little longer than expected...'\n      }]; // If the page dumps some custom information on the page, then use that data instead.\n      // multipleData is an array of objects that will be rendered in the processing dialog.\n      // We specify this data right when the form is initialized so that the _processingStateMessages argument\n      // for the uiLockerSwapMessage IIFE can be captured.\n      // TODO: this system only allows for ONE set of custom form processing data per page.\n      // If the user would want to have custom for processing data for each form on the page,\n      // then we would need to come up with a system to organize that.\n\n      if (window.op && window.op.customFormProcessingData && window.op.customFormProcessingData.theme === 'multiple' && window.op.customFormProcessingData.multipleData && window.op.customFormProcessingData.multipleData.length > 0) {\n        processingStateMessages = window.op.customFormProcessingData.multipleData;\n      } // Will iterate through and display the _processingStateMessages\n      // This allows us to have the processing dialog show different content\n\n\n      const uiLockerSwapMessage = function (_processingStateMessages, _$documentBody) {\n        let messageIndex = 0;\n        return function (showMessage) {\n          // Remove current message\n          _$documentBody.trigger('moonray.uiLockerV2');\n\n          if (showMessage === undefined) {\n            showMessage = _processingStateMessages[messageIndex % _processingStateMessages.length];\n\n            if (messageIndex > 3) {\n              // 20 seconds has elapsed\n              showMessage.theme = 'warning';\n            } // Increment the messageIndex\n\n\n            messageIndex++;\n          } // Show new message\n\n\n          _$documentBody.trigger('moonray.uiLockerV2', showMessage);\n        };\n      }(processingStateMessages, $documentBody); // Continually call itself and uiLockerSwapMessage to show different content in the processing dialog\n\n\n      const uiLockerSwapContentChecker = function () {\n        if (iframe_done == false) {\n          count += incrementer;\n\n          if (count % 5000 === 0) {\n            // Every 5 seconds, update the processing message\n            uiLockerSwapMessage();\n          }\n\n          if (count == 40000) {\n            _flushDebugLogs();\n          }\n\n          if (count >= timeout) {\n            // Post the new message\n            uiLockerSwapMessage({\n              title: 'Transaction failed',\n              message: 'Please try again later',\n              closeButton: true,\n              theme: 'error'\n            });\n\n            _debugLog('processing timed out. iframe done is true.');\n\n            iframe_done = true;\n\n            _flushDebugLogs();\n\n            $form.removeAttr('locked');\n            $iframe.css({\n              display: 'none'\n            });\n          } else {\n            setTimeout(uiLockerSwapContentChecker, incrementer);\n          }\n        } else if (iframe_done === true) {\n          _debugLog('iframe done is true in swap content checker');\n        }\n      };\n      /*\n       * Used as our CORS\n       * also handles the feed back of were the request is getting sent\n       *\n       * ? is appended to each url -  makes it easy to work with params\n       */\n\n\n      var changeIframeUrl = function changeIframeUrl(url, params, disableChecker, hash) {\n        iframe_done = false;\n        params = params || {};\n\n        if (url == '#') {\n          $form.removeAttr('locked');\n          $iframe.css({\n            display: 'none'\n          });\n          /*\n           * Doing makes ssl pages unsecure\n           * iframe.removeAttr('src')\n           */\n\n          $iframe[0].contentWindow.location.replace('about:blank');\n        } else {\n          // Track the number of times this dialog pops up\n          if (_submitAttempts[UID] === undefined) {\n            _submitAttempts[UID] = 0;\n          }\n\n          _submitAttempts[UID]++; // Add the random so if we change the url to the same url it will reload\n\n          params.mr_rand = Math.floor(Math.random() * 9999991); // Send the uid of this form so the document.postMessage handler knows what form the response is for\n\n          params.uid = UID;\n          params.submitAttempts = _submitAttempts[UID];\n          var urihash;\n\n          if (hash === undefined) {\n            urihash = document.location.href;\n          } else {\n            urihash = hash;\n            params.parent_url = document.location.href;\n          }\n\n          urihash = encodeURIComponent(urihash);\n          params = $.param(params);\n\n          _debugLog('iframe changing url to ', url + '?' + params);\n\n          $iframe[0].contentWindow.location.replace(url + '?' + params + '#' + urihash);\n\n          $iframe[0] // Use onload instead of .load cause the load function ends up getting called the # of times\n          // the submit button gets called\n          .onload = function () {\n            _debugLog('iframe loaded', url);\n\n            if (hash === undefined) {\n              // Only stop the checker if there's no hash. Otherwise, we rely on external\n              // checks to decide if we're done.\n              _debugLog('setting iframe_done to true when no hash');\n\n              iframe_done = true;\n            }\n          };\n\n          if (!disableChecker) {\n            uiLockerSwapContentChecker();\n          }\n        }\n      },\n\n      /*\n          Called on form submit, needed to verify with the server and or post data to the server to verify everything is allset\n      */\n      PROCESSORS = {\n        cc_verify: function () {\n          if ($form.find('input[name=payment_number]').length == 1) {\n            // They are paying with paypal so we don't need to hit up cc verify.\n            if ($form.find('input[name=paypal]').val() === 'yes') {\n              return true;\n            } // These fields get injected into the form if the credit card is valid.\n\n\n            if ($form.find(':input[name=payer_id], :input[name=transaction_id]').length != 2) {\n              var fields = op.serializeFormToObject($form); // Get the contact / cid out of the action url if any\n              // Add the cid to post fields so we use the same contact id if we have one\n\n              var fAction = $form.attr('action').split('form_processor.php?')[1].split('&'),\n                  i = fAction.length;\n\n              while (i--) {\n                if (fAction[i].match(/cid=/)) {\n                  fields.cid = fAction[i].replace('cid=', ''); // Spoof the lpid for cc verfiy\n\n                  if (window.mr_lp_id == undefined) {\n                    fields.lpid = -1;\n                  } else {\n                    fields.lpid = window.mr_lp_id;\n                  }\n                }\n              }\n\n              var isONTRAform = window.isONTRAform,\n                  ONTRAformID = isONTRAform && isONTRAform.formUID.split('f')[1];\n\n              if (isONTRAform && ONTRAformID) {\n                fields.light_form_id = ONTRAformID;\n              } // Let order form know if they are dynamic pages.\n\n\n              if (op.isDynamicPage) {\n                fields.isDynamicPage = 1;\n              } // Remove any spaces and dashes in cc number\n\n\n              fields.payment_number = fields.payment_number.replace(/[ -]/g, '');\n              changeIframeUrl(CC_VERIFY_DOMAIN, {}, false, stringToHex(des('Un1cOrns', unescape(encodeURIComponent(JSON.stringify(fields))), 1)));\n              return false;\n            }\n\n            return true;\n          } // No payment fields, pass\n\n\n          return true;\n        },\n        // Upsells are getting fancy\n        isUpsellForm: function (ev, submitTrigger) {\n          var isupsell = $form.find('.opt-button--upsell').length === 2,\n              formAction = $form.attr('action'),\n              isONTRAform = window.isONTRAform,\n              ONTRAformID = isONTRAform && isONTRAform.formUID.split('f')[1]; // Check if we could end up with an ontraform popup\n\n          if (isupsell) {\n            /**\n             * Need to parse out the form action this form was submitted with and look\n             * for specific parameters.\n             *\n             * Logic pulled from ONTRAFORMS.js\n             */\n            var fields = op.serializeFormToObject($form),\n                paramString = formAction.split('?')[1],\n                parsedFormActions = {};\n\n            if (paramString && paramString.replace) {\n              paramString.replace(/([^=&]{1,})=([^&]{1,})/g, function (keyValuePair, key, value, index, source) {\n                parsedFormActions[key] = value;\n              });\n            }\n            /**\n             * Cid, light_form_id and _lightResponse are needed by the BE in form_processor.php.\n             *\n             * These properties are not fields in the form, but they are part of the form action.\n             *\n             * So let's make sure these are part of the data we send over to the BE.\n             */\n\n\n            var cid = parsedFormActions.cid,\n                light_form_id = parsedFormActions.light_form_id,\n                lightResponse = parsedFormActions._lightResponse;\n\n            if (cid) {\n              fields.cid = cid;\n            }\n\n            if (light_form_id) {\n              fields.light_form_id = light_form_id;\n            } else if (ONTRAformID) {\n              fields.light_form_id = ONTRAformID;\n            }\n\n            if (lightResponse) {\n              fields._lightResponse = lightResponse;\n            } else {\n              // We possibly have an ONTRAFORM\n              fields._lightResponse = 1;\n            } // Add the submit upsell field to the fields so the BE knows its an upsell\n\n\n            if (submitTrigger) {\n              if (submitTrigger === 'upsellYes') {\n                fields.upsell_form_action_yes = 'yes';\n              } else {\n                fields.upsell_form_action_no = 'no';\n              }\n            }\n\n            changeIframeUrl(formAction.split('?')[0], fields);\n            return false;\n          }\n\n          return true;\n        }\n      }; // Interaction queue classes.\n\n\n      $form.delegate('input:not(:submit), select, textarea', 'focus blur', function (ev) {\n        $(this).toggleClass('moonray-form-state-active'); // Force the order summary to update styles if the number is toggled, changing the quantity triggers the change callback handler in the order summary to fire.\n\n        if (this.classList.contains('ontraport_gridcell_input_number--edit-quantity')) {\n          var os = this.closest('ontraport-order-summary'),\n              qty = os.getAttribute('update-summary-style');\n          os.setAttribute('update-summary-style', +qty + 1);\n        }\n      }); // Need to know what submit button was clicked, this is especially the case for upsell forms.\n\n      $form.delegate('input[type=\"submit\"], input[type=\"image\"]', 'click', function (e) {\n        $(this).attr('data-submit-clicked', true);\n      });\n      /*\n       * Find all of the required inputs and add create a data-required flag\n       * this way conditions can pickup on them\n       *\n       * TODO: make sure this gets set on the shipping select and payment plan radios\n       *      not sure this is needed because, we will never hide these inputs, thus never make them unrequired\n       */\n\n      $form.find('[required]').attr('data-required', 'true');\n      const isUsingOptDateTimePickerInputs = $form.find('.opt-date-time-field__hidden-field.opt-date-field[type=\"hidden\"]').length > 0 ? true : false; // Check for date fields and restore the input type so we can have date placeholders on IOS devices.\n\n      if (!isUsingOptDateTimePickerInputs) {\n        $form.find('input[type=date], input.opt-date-time-field').each(function () {\n          if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && !this.getAttribute('value')) {\n            // Force date inputs to use the date type on iOS\n            this.type = 'date';\n            this.onblur = null;\n          }\n        });\n      } // Coupon code handler, and event bindings\n      // debouce this because the click event is fired from the user click and triggered in the grid cell controller\n      // this keeps us from hitting the back end twice for the same request.\n\n\n      const _couponEventHandler = op.debounce(function _couponEventHandler(falslycheck) {\n        var couponValue = $form.find('input[name=\"couponCode\"]').val();\n\n        if (couponValue == '' && falslycheck === true) {\n          return;\n        }\n\n        gridController = $form.find('.moonray-from-offer-grid').controller();\n        var offerModel = gridController.offerCopy;\n        setTimeout(function () {\n          _triggerCouponChange(couponValue, offerModel);\n        }, 50);\n      }, 100);\n\n      op._couponEventHandler = _couponEventHandler;\n      $form.delegate('input[name*=\\'payment_plan\\']', 'change', function () {\n        _couponEventHandler(true);\n      });\n      $form.delegate('td.ontraport_gridcell_input_number', 'click', function (ev, el) {\n        _couponEventHandler(true);\n      });\n      $form.delegate('input[name=\"couponCode\"]', 'change', _couponEventHandler);\n      $form.delegate('.coupon-code-submit-btn', 'click', _couponEventHandler); // Capture enter key in the coupon input, so we can prevent it from submitting the form\n\n      $form.delegate('.grid-summary-coupon-input', 'keydown', function (ev) {\n        if (ev.keyCode === 13) {\n          _couponEventHandler();\n\n          return false;\n        }\n      });\n\n      var _triggerCouponChange = function _triggerCouponChange(couponCodeVal, offerModel) {\n        if ($form[0].hasAttribute('locked')) {\n          _debugLog('The form is locked, do not validate coupon.');\n\n          return;\n        }\n\n        var coupError = $form.find('.coupon-error');\n\n        if (coupError.length > 0) {\n          coupError.remove();\n          $form.find('.grid-summary_coupon-input__input').removeClass('grid-summary-coupon-input--error');\n        }\n\n        $form.find('.grid-summary-coupon-input .label').css('paddingBottom', '0');\n\n        if (!couponCodeVal) {\n          return;\n        } // Will need to alter this to pass along the new PAYMENTS-2.1.1 quantity change ... for now i just grabbed it from offer data...\n\n\n        var model = offerModel,\n            args = {\n          coupon_code: couponCodeVal\n        };\n        var product = {};\n        $.each(model.products, function (key, value) {\n          product['product[' + value.id + ']'] = value.quantity;\n          product['price[' + value.id + ']'] = value.price[0].price;\n        });\n        $.extend(args, product);\n        changeIframeUrl(COUPON_PROCESS_DOMAIN + '/v2.4/coupon_validator.php', args, true);\n      };\n      /*\n       * http://stackoverflow.com/questions/729330/jquery-triggersubmit-breaking\n       * since we trigger submit again after the form is submitted, we cant have an element named submit\n       */\n\n\n      $form.find('input[name=submit]').attr('name', 'mr-name-changed-from-submit'); // Also do this on submit regardless of captcha\n\n      $form.submit(function (e, submitTrigger) {\n        // If we're already processing, bail.\n        if ($form[0].hasAttribute('locked')) {\n          e.preventDefault();\n          return false;\n        } // Add the isDynamicPage var to query string\n\n\n        $form[0].action = $form[0].action + `&isDynamicPage=${op.isDynamicPage ? 1 : 0}`; // Make sure we trigger client side validation before doing any server side stuff.\n        // Pass in if the form was submitted by the paypal button. If its a paypal button we bypass the credit card validation.\n\n        var isPayPalBtnSubmit = submitTrigger === 'paypalBtn';\n\n        if (isPayPalBtnSubmit) {\n          $form.find('[name=\"paypal_toggle\"]').val('yes');\n          $form.find('[name=\"paypal\"]').val('yes');\n        } // Frontend input validation\n\n\n        if ($form.data('validator').checkValidity(false, false, isPayPalBtnSubmit) === false) {\n          return false;\n        } // Order bumps\n\n\n        op.getOrderBumps($form); // If this is a preview from don't need to do any thing but show a form processing dialog preview.\n\n        if (this.getAttribute('action') === '[system_form_processor]') {\n          $documentBody.trigger('moonray.uiLockerV2', {\n            title: 'Processing...',\n            message: 'You can\\'t submit a form on a preview page. This dialog shows an example of what your visitors will see when submitting forms on your page. You can close it by clicking the X icon in the upper right corner.',\n            closeButton: true,\n            theme: 'error'\n          });\n          return false;\n        }\n\n        if ($form.find('.g-recaptcha').length >= 1) {\n          var $g = $('.g-recaptcha');\n          $g.removeClass('opt-recaptcha--error');\n\n          if (!OPreCaptchaAllowSubmit) {\n            $g.addClass('opt-recaptcha--error');\n            return false;\n          }\n\n          $g = null;\n        } // Find our hidden spam blocker field, creating it if necesssary.\n\n\n        var $sb = $form.find('#mr_opsblck');\n\n        if (!$sb.length) {\n          $sb = $('<input>').attr({\n            type: 'hidden',\n            id: 'mr_opsblck',\n            name: 'mr_opsblck'\n          }).appendTo($form);\n        }\n\n        if ($sb) {\n          // Encrypt the form's UID and current timestamp and pass as a hidden field.\n          var uid = $form.find('[name=\"uid\"]').val(); // Create an encryption key based on the uid.\n\n          var ekey = [0, 0, 0, 0, 0, 0, 0, 0];\n          var euid = 'af8cde800fbc41e989e668f91be8ecb0' + uid;\n          var uidlen = euid.length;\n\n          for (var i = 0; i < uidlen; ++i) {\n            ekey[i % 8] = ekey[i % 8] ^ euid.charCodeAt(i);\n          }\n\n          var key = '';\n\n          for (i = 0; i < ekey.length; ++i) {\n            key += String.fromCharCode(ekey[i] & 0x7f);\n          }\n\n          var opsblck = stringToHex(des(key, uid + ':' + Date.now() + ':', 1));\n          $sb.val(opsblck);\n        }\n\n        $sb = null;\n        $form.attr('locked', ''); // If there's any customFormProcessingData, then kickoff the cycle of swapping the content out\n\n        if (window.op && window.op.customFormProcessingData && window.op.customFormProcessingData.theme === 'multiple' && window.op.customFormProcessingData.multipleData && window.op.customFormProcessingData.multipleData.length > 0) {\n          uiLockerSwapMessage();\n          uiLockerSwapContentChecker();\n        } else {\n          $documentBody.trigger('moonray.uiLockerV2', {\n            title: 'Processing...'\n          });\n        }\n        /*\n         * Tracking fields\n         */\n\n\n        if (typeof window._mri != undefined) {\n          var hidden = ['contact_id', 'afft_', 'aff_', 'ref_', 'own_', 'sess_', 'utm_source', 'utm_medium', 'utm_term', 'utm_content', 'utm_campaign', 'referral_page', 'oprid', '_op_gclid', '_fbc', '_fbp'];\n\n          for (var i = 0, _cookie; hidden.length > i; i++) {\n            _cookie = op.readCookie(hidden[i]);\n\n            if (_cookie != undefined) {\n              $form.find('[name=\"' + hidden[i] + '\"]').val(_cookie);\n            }\n          }\n\n          if (window.ga) {\n            window.ga(function () {\n              var trackers = window.ga.getAll();\n              trackers.forEach(function (tracker) {\n                $form.find('[name=_op_gcid]').val(tracker.get('clientId'));\n              });\n            });\n          }\n        }\n        /*\n         * Check and process captcha, payments and upsells that have a ontraform popup\n         */\n\n\n        if (PROCESSORS.cc_verify(e) === false || PROCESSORS.isUpsellForm(e, submitTrigger) === false) {\n          e.preventDefault();\n          return;\n        }\n      }); // End $form.submit\n\n      /*\n       * Handle running in an iframe\n       */\n\n      if (top !== self) {\n        var handler = function (e) {\n          try {\n            // E.data could not be valid json, data could be from another script\n            var data = JSON.parse(e.data);\n            $.each(data, function (key, value) {\n              if (!moonrayJS.readCookie(key)) {\n                var exdate = new Date();\n                exdate.setDate(exdate.getDate() + 365);\n                document.cookie = key + '=' + escape(value) + '; expires=' + exdate.toUTCString() + '; path=/';\n              }\n            });\n          } catch (e) {}\n        };\n\n        if (window.addEventListener) {\n          window.addEventListener('message', handler, false);\n        } else {\n          window.attachEvent('onmessage', handler);\n        } // When we submit the form we change the parent page url\n\n\n        var formTargetAttr = $form.attr('target'),\n            possibleOpfTarget = formTargetAttr && (formTargetAttr.indexOf('opfFormTrigger-') !== -1 || formTargetAttr.indexOf('conditionalRedirectTrigger-') !== -1);\n\n        if (!possibleOpfTarget) {\n          $form.attr('target', '_top'); // Ontraforms manage their dim, no need to send\n\n          var targetWindow = parent.postMessage ? parent : parent.document.postMessage ? parent.document : undefined,\n              sendDim = function () {\n            var message = {\n              uid: UID,\n              width: $documentBody.outerWidth(true),\n              height: $documentBody.outerHeight(true)\n            };\n            targetWindow.postMessage(JSON.stringify(message), '*');\n          }; // Since we can delegate the load event on the captach image\n          // Set this in a loop, this way the height will always be calculated\n          // This also catches forms conditions that are slow loading, sometimes the for gets \"chopped\" because of the conditions\n\n\n          sendDim();\n          setInterval(sendDim, 1000); // Trigger on event, used for formConditions\n\n          $form.delegate(':input', 'change', function () {\n            sendDim();\n          });\n        }\n      }\n      /*\n       * Need to check captcha, validate that\n       * then check for sales\n       */\n\n\n      XD.receiveMessage(function (message) {\n        _debugLog('received message ', message);\n        /*\n         * If message data == 'false' string is captcha, true\n         *\n         * if message.data has property result_code\n         *\n         */\n\n\n        var data;\n\n        if (typeof message.data === 'object') {\n          // ONTRAforms passes around objects, not strings.\n\n          /*\n               But now upsells are fancy, so we need to do so something with them\n          */\n          data = message.data;\n\n          if (data.type == 'formProcessorMessage') {\n            /*\n                This forwards the user on to the next page, when one of the yes / no / timeout pages is pop and ontraform\n                but the clicked action / button is not and ontraform\n            */\n            // This response only occurs for upsell blocks on ontraforms\n            var isONTRAformParent = typeof __OPF !== 'undefined';\n\n            if (data.data.type == 'script') {\n              _debugLog('script type', data.data.message);\n              /*\n                  Depending on the order in which the user got to the form we need to detect if ontraforms.js\n                  has been loaded on the page. If its currently there, pop the form open, otherwise fetch it from\n                  the server and open the form.\n              */\n\n\n              var scriptAttrs = JSON.parse(data.data.message),\n                  _opfOpen = function () {\n                // Clean up the original form processing message\n                $documentBody.trigger('moonray.uiLockerV2');\n\n                __OPF.open(scriptAttrs.uid, true);\n              };\n\n              if (isONTRAformParent) {\n                _opfOpen();\n              } else {\n                $.getScript(scriptAttrs.src, _opfOpen);\n              }\n              /*\n                  Disable all of the submit buttons on the original upsell form, prevents the user from being\n                  able to \"submit\" / cycle through the chain\n              */\n\n\n              $form.css('opacity', '.3') // See the notes about disabled in form.default.css\n              .attr('disabled', true);\n            } else if (data.data.type == 'route') {\n              // Assume is a redirect\n              _debugLog('Sending the user to this URL: ', data.data.message); // Quick note, IE 6 and 7 wont have the reffer header set, not worrying about that since T-Rex is younger than they are\n\n\n              window.location = data.data.message;\n            } else if (data.data.type === 'conditionalRedirect') {\n              if (data.data.redirectType === 'block_link') {\n                $documentBody.trigger('moonray.uiLockerV2');\n                $(data.data.url).scrollToBlock(); // For everything else besides ONTRAform. So: custom URL, Landing Page, Hosted File, or Tracked Link\n              } else if (data.data.redirectType !== 'ontraform') {\n                // Open in new window if flag set or if type is hosted file\n                if (data.data.newWindow || data.data.redirectType === 'hosted_file') {\n                  window.open(data.data.url, '_blank');\n                  $documentBody.trigger('moonray.uiLockerV2');\n                } else {\n                  window.location = data.data.url;\n                }\n              }\n            } // Change / blank the iframe URL otherwise when the user clicks back they will get stuck in a redirect loop\n\n\n            changeIframeUrl('#');\n          }\n\n          return;\n        }\n\n        data = eval('(' + unescape(message.data) + ')'); // Move handling of Coupon into the same processing domain\n\n        if (data.type !== undefined && data.type == 'coupon-validation' && data.uid == UID) {\n          var coupError = $form.find('.coupon-error');\n\n          if (coupError.length > 0) {\n            coupError.remove();\n          }\n\n          var $couponRow = $form.find('.grid-summary-coupon-input'),\n              $couponInput = $form.find('input[name=\\'couponCode\\']');\n          $couponRow.find('.label').css('paddingBottom', '0');\n          gridController = $form.find('.moonray-from-offer-grid').controller();\n          gridController.applyCoupon(data);\n\n          if (data.result_code != 1) {\n            var couponVal = $couponInput.val(); // Only show an error if there is a value in the coupon input\n\n            if (couponVal != '') {\n              $couponRow.find('.label').css('paddingBottom', '1em');\n              var errorDom = $(op.t('<div class=\"coupon-error grid-summary-coupon--error\"><span>{message}</span></div>', data));\n              $form.find('.grid-summary_coupon-input__input').addClass('grid-summary-coupon-input--error').parent().after(errorDom);\n            }\n          }\n\n          return;\n        }\n        /**\n         * We also receive internal messages from ONTRAforms.js. This message is received when ONTRAforms is done\n         * loading its forms.\n         *\n         * We were encountering race conditions with progressive form chains where the initial form processing\n         * took about 5 seconds to load, which is the interval for swapping messages in the form processing\n         * dialog. The subsequent form would load, but it would be covered by the form processing dialog and\n         * the user could not interact with the form to proceed.\n         *\n         * The form processing dialog was in the middle of swapping messages when the subsequent form was\n         * loading. This would cause the message swapping to start again and since the form already loaded,\n         * the swapping never ended.\n         *\n         * So explicitly set iframe_done to true to avoid this condition.\n         */\n\n\n        if (data.type !== undefined && data.type === 'internalMessage') {\n          _debugLog('received message from ontraforms');\n\n          if (data.data && data.data.fin === true) {\n            iframe_done = true;\n          }\n        }\n\n        $('<input type=\"hidden\">').attr({\n          name: 'submitPath',\n          value: '1'\n        }).appendTo($form);\n\n        if (data === false || data === true) {\n          changeIframeUrl('#');\n\n          _debugLog('processing captcha');\n\n          $documentBody.trigger('moonray.uiLockerV2');\n\n          if (data === false) {\n            Recaptcha.reload();\n          } else {\n            $('<input type=\"hidden\">').attr({\n              name: '_capb',\n              value: '1'\n            }).appendTo($form);\n            /*\n                                This works great when there isn't a grid on the same form, it just by passes cc_verify check\n                                leaving it here so you / me don't re introduce that bug\n                                //$form[0].submit();\n            */\n\n            $form.find(':input[name=submitPath]').attr({\n              value: 2\n            });\n            $form.trigger('submit');\n          }\n          /*\n              Non captcha responses have a result code\n              also we only want to fire this event for this form\n              document.postmessage handlers fire every time a message is fired, we only want to handle this response if the\n              data.uid is the same as this forms\n              NOTE: XD is a global variable defined in the \"postmessage.js\" script. It will only be included if form scripts are included\n          */\n\n        } else if (data.result_code != undefined && data.uid == UID) {\n          // Data.result_code = 2\n          if (data.result_code == 1) {\n            changeIframeUrl('#');\n\n            _debugLog('setting iframe_done to true after result_code 1');\n\n            iframe_done = true;\n\n            _debugLog('processing credit card', 'success');\n\n            if (data.cid) {\n              var $cid_input = $form.find(':input[name=cid]');\n\n              if ($cid_input.length == 0) {\n                $form.append(op.t('<input type=\"hidden\" name=\"cid\" value=\"{cid}\">', data));\n              } else {\n                $cid_input.val(data.cid);\n              }\n            }\n\n            $form.append(op.t('<input type=\"hidden\" name=\"payer_id\" value=\"{payer_id}\"><input type=\"hidden\" name=\"transaction_id\" value=\"{transaction_id}\">', data));\n            var formAction = $form.attr('action'),\n                cidRegex = /(cid=[0-9]*)/g,\n                cidParam = 'cid=' + data.cid,\n                newFormAction;\n\n            if (cidRegex.test(formAction)) {\n              newFormAction = formAction.replace(cidRegex, function () {\n                // Splice in the CID into the form action\n                return cidParam;\n              });\n            } else {\n              newFormAction = formAction + '&' + cidParam;\n            }\n\n            $form.attr('action', newFormAction);\n            $form.find(':input[name=submitPath]').attr({\n              value: 3\n            });\n            $form[0].submit();\n          } else if (data.result_code == CC_VERIFY_POST) {// This is sent by the first cc_verify call. We continue and wait for the\n            // response of the second one.\n          } else if (data.result_code == CC_VERIFY_SHOW_IFRAME) {\n            _debugLog('result_code is cc verify show iframe'); // Hide the locker, show the iframe and center it over our window.\n\n\n            $documentBody.trigger('moonray.uiLockerV2');\n            iframe_done = true;\n            $iframe.css({\n              display: 'block',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: document.documentElement.scrollWidth,\n              height: document.documentElement.scrollHeight,\n              'z-index': 999999\n            });\n          } else if (data.result_code == CC_VERIFY_HIDE_IFRAME) {\n            // Hide the iframe and retrigger the locker.\n            $iframe.css({\n              display: 'none'\n            });\n            iframe_done = false;\n            $documentBody.trigger('moonray.uiLockerV2', {\n              title: 'Processing...'\n            });\n          } else if (data.result_code == CC_VERIFY_GET_CC_DATA) {\n            $iframe[0].contentWindow.postMessage(op.serializeFormToObject($form), CC_VERIFY_DOMAIN);\n          } else if ($form.hasClass('opf-ignore-form')) {\n            /*\n            * @TODO: Come up with a better fix for this, so that we don't have to require customers\n            * to add this class. ISSUE: When creating an ONTRApage, if you add a smartform block with\n            * an ONTRAform pop up as the thank you page, then add a click to pop ONTRAform in a custom HTML\n            * block, and THEN add just a regular HTML form to the page (not associated with ontraport),\n            * and make sure the HTML form is the first form on the page, the page gets covered by the\n            * uiLockerV2 overlay and infinitely loads opf.js. For some reason the regular HTML form is\n            * automatically submitted, and it falls into the else statement below.\n            */\n          } else {\n            changeIframeUrl('#');\n            iframe_done = true;\n\n            _debugLog('processing credit card', 'error'); // Show error message\n\n\n            $documentBody.trigger('moonray.uiLockerV2');\n            const title = data.result_code == window.ACCOUNT_SIGNUP_ERROR ? 'Sign up error' : 'Transaction failed'; // Show the message to the user\n\n            $documentBody.trigger('moonray.uiLockerV2', {\n              title: title,\n              message: data.error || data.message,\n              closeButton: true,\n              theme: 'error'\n            });\n          }\n        }\n      }, FORM_PROCESS_DOMAIN);\n    });\n  };\n})(jQuery, window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.slideshowdependancies.js":
/*!********************************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.slideshowdependancies.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;/*\n * @brief These are the dependancies left over from the opt overload of the materialize slide show. These should only get pulled\n *        in if a slide show is present on the page. When we update the slide show lets nuke these bad boys.\n */\n\n/* STICKY BLOCK DEPENDANCIES -----------------------------------------------------------------------------------------------------------------*/\nwindow.Materialize = {}; // Unique Random ID\n\nMaterialize.guid = function () {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return function () {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  };\n}();\n/* SLIDE SHOW DEPENDANCIES--------------------------------------------------------------------------------------------------------------------*/\n\n/* ! VelocityJS.org (1.5.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n\n/* ! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n\n\n!function (a) {\n  'use strict';\n\n  function b(a) {\n    var b = a.length,\n        d = c.type(a);\n    return 'function' !== d && !c.isWindow(a) && (!(1 !== a.nodeType || !b) || 'array' === d || 0 === b || 'number' == typeof b && b > 0 && b - 1 in a);\n  }\n\n  if (!a.jQuery) {\n    var c = function (a, b) {\n      return new c.fn.init(a, b);\n    };\n\n    c.isWindow = function (a) {\n      return a && a === a.window;\n    }, c.type = function (a) {\n      return a ? 'object' == typeof a || 'function' == typeof a ? e[g.call(a)] || 'object' : typeof a : a + '';\n    }, c.isArray = Array.isArray || function (a) {\n      return 'array' === c.type(a);\n    }, c.isPlainObject = function (a) {\n      var b;\n\n      if (!a || 'object' !== c.type(a) || a.nodeType || c.isWindow(a)) {\n        return !1;\n      }\n\n      try {\n        if (a.constructor && !f.call(a, 'constructor') && !f.call(a.constructor.prototype, 'isPrototypeOf')) {\n          return !1;\n        }\n      } catch (d) {\n        return !1;\n      }\n\n      for (b in a) {}\n\n      return b === undefined || f.call(a, b);\n    }, c.each = function (a, c, d) {\n      var e = 0,\n          f = a.length,\n          g = b(a);\n\n      if (d) {\n        if (g) {\n          for (; e < f && !1 !== c.apply(a[e], d); e++) {}\n        } else {\n          for (e in a) {\n            if (a.hasOwnProperty(e) && !1 === c.apply(a[e], d)) {\n              break;\n            }\n          }\n        }\n      } else if (g) {\n        for (; e < f && !1 !== c.call(a[e], e, a[e]); e++) {}\n      } else {\n        for (e in a) {\n          if (a.hasOwnProperty(e) && !1 === c.call(a[e], e, a[e])) {\n            break;\n          }\n        }\n      }\n\n      return a;\n    }, c.data = function (a, b, e) {\n      if (e === undefined) {\n        var f = a[c.expando],\n            g = f && d[f];\n\n        if (b === undefined) {\n          return g;\n        }\n\n        if (g && b in g) {\n          return g[b];\n        }\n      } else if (b !== undefined) {\n        var h = a[c.expando] || (a[c.expando] = ++c.uuid);\n        return d[h] = d[h] || {}, d[h][b] = e, e;\n      }\n    }, c.removeData = function (a, b) {\n      var e = a[c.expando],\n          f = e && d[e];\n      f && (b ? c.each(b, function (a, b) {\n        delete f[b];\n      }) : delete d[e]);\n    }, c.extend = function () {\n      var a,\n          b,\n          d,\n          e,\n          f,\n          g,\n          h = arguments[0] || {},\n          i = 1,\n          j = arguments.length,\n          k = !1;\n\n      for ('boolean' == typeof h && (k = h, h = arguments[i] || {}, i++), 'object' != typeof h && 'function' !== c.type(h) && (h = {}), i === j && (h = this, i--); i < j; i++) {\n        if (f = arguments[i]) {\n          for (e in f) {\n            f.hasOwnProperty(e) && (a = h[e], d = f[e], h !== d && (k && d && (c.isPlainObject(d) || (b = c.isArray(d))) ? (b ? (b = !1, g = a && c.isArray(a) ? a : []) : g = a && c.isPlainObject(a) ? a : {}, h[e] = c.extend(k, g, d)) : d !== undefined && (h[e] = d)));\n          }\n        }\n      }\n\n      return h;\n    }, c.queue = function (a, d, e) {\n      if (a) {\n        d = (d || 'fx') + 'queue';\n        var f = c.data(a, d);\n        return e ? (!f || c.isArray(e) ? f = c.data(a, d, function (a, c) {\n          var d = c || [];\n          return a && (b(Object(a)) ? function (a, b) {\n            for (var c = +b.length, d = 0, e = a.length; d < c;) {\n              a[e++] = b[d++];\n            }\n\n            if (c !== c) {\n              for (; b[d] !== undefined;) {\n                a[e++] = b[d++];\n              }\n            }\n\n            a.length = e;\n          }(d, 'string' == typeof a ? [a] : a) : [].push.call(d, a)), d;\n        }(e)) : f.push(e), f) : f || [];\n      }\n    }, c.dequeue = function (a, b) {\n      c.each(a.nodeType ? [a] : a, function (a, d) {\n        b = b || 'fx';\n        var e = c.queue(d, b),\n            f = e.shift();\n        'inprogress' === f && (f = e.shift()), f && ('fx' === b && e.unshift('inprogress'), f.call(d, function () {\n          c.dequeue(d, b);\n        }));\n      });\n    }, c.fn = c.prototype = {\n      init: function (a) {\n        if (a.nodeType) {\n          return this[0] = a, this;\n        }\n\n        throw new Error('Not a DOM node.');\n      },\n      offset: function () {\n        var b = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {\n          top: 0,\n          left: 0\n        };\n        return {\n          top: b.top + (a.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),\n          left: b.left + (a.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)\n        };\n      },\n      position: function () {\n        var a = this[0],\n            b = function (a) {\n          for (var b = a.offsetParent; b && 'html' !== b.nodeName.toLowerCase() && b.style && 'static' === b.style.position.toLowerCase();) {\n            b = b.offsetParent;\n          }\n\n          return b || document;\n        }(a),\n            d = this.offset(),\n            e = /^(?:body|html)$/i.test(b.nodeName) ? {\n          top: 0,\n          left: 0\n        } : c(b).offset();\n\n        return d.top -= parseFloat(a.style.marginTop) || 0, d.left -= parseFloat(a.style.marginLeft) || 0, b.style && (e.top += parseFloat(b.style.borderTopWidth) || 0, e.left += parseFloat(b.style.borderLeftWidth) || 0), {\n          top: d.top - e.top,\n          left: d.left - e.left\n        };\n      }\n    };\n    var d = {};\n    c.expando = 'velocity' + new Date().getTime(), c.uuid = 0;\n\n    for (var e = {}, f = e.hasOwnProperty, g = e.toString, h = 'Boolean Number String Function Array Date RegExp Object Error'.split(' '), i = 0; i < h.length; i++) {\n      e['[object ' + h[i] + ']'] = h[i].toLowerCase();\n    }\n\n    c.fn.init.prototype = c.fn, a.Velocity = {\n      Utilities: c\n    };\n  }\n}(window), function (a) {\n  'use strict';\n\n   true && 'object' == typeof module.exports ? module.exports = a() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(function () {\n  'use strict';\n\n  return function (a, b, c, d) {\n    function e(a) {\n      for (var b = -1, c = a ? a.length : 0, d = []; ++b < c;) {\n        var e = a[b];\n        e && d.push(e);\n      }\n\n      return d;\n    }\n\n    function f(a) {\n      return u.isWrapped(a) ? a = s.call(a) : u.isNode(a) && (a = [a]), a;\n    }\n\n    function g(a) {\n      var b = o.data(a, 'velocity');\n      return null === b ? d : b;\n    }\n\n    function h(a, b) {\n      var c = g(a);\n      c && c.delayTimer && !c.delayPaused && (c.delayRemaining = c.delay - b + c.delayBegin, c.delayPaused = !0, clearTimeout(c.delayTimer.setTimeout));\n    }\n\n    function i(a, b) {\n      var c = g(a);\n      c && c.delayTimer && c.delayPaused && (c.delayPaused = !1, c.delayTimer.setTimeout = setTimeout(c.delayTimer.next, c.delayRemaining));\n    }\n\n    function j(a) {\n      return function (b) {\n        return Math.round(b * a) * (1 / a);\n      };\n    }\n\n    function k(a, c, d, e) {\n      function f(a, b) {\n        return 1 - 3 * b + 3 * a;\n      }\n\n      function g(a, b) {\n        return 3 * b - 6 * a;\n      }\n\n      function h(a) {\n        return 3 * a;\n      }\n\n      function i(a, b, c) {\n        return ((f(b, c) * a + g(b, c)) * a + h(b)) * a;\n      }\n\n      function j(a, b, c) {\n        return 3 * f(b, c) * a * a + 2 * g(b, c) * a + h(b);\n      }\n\n      function k(b, c) {\n        for (var e = 0; e < p; ++e) {\n          var f = j(c, a, d);\n\n          if (0 === f) {\n            return c;\n          }\n\n          c -= (i(c, a, d) - b) / f;\n        }\n\n        return c;\n      }\n\n      function l() {\n        for (var b = 0; b < t; ++b) {\n          x[b] = i(b * u, a, d);\n        }\n      }\n\n      function m(b, c, e) {\n        var f,\n            g,\n            h = 0;\n\n        do {\n          g = c + (e - c) / 2, f = i(g, a, d) - b, f > 0 ? e = g : c = g;\n        } while (Math.abs(f) > r && ++h < s);\n\n        return g;\n      }\n\n      function n(b) {\n        for (var c = 0, e = 1, f = t - 1; e !== f && x[e] <= b; ++e) {\n          c += u;\n        }\n\n        --e;\n        var g = (b - x[e]) / (x[e + 1] - x[e]),\n            h = c + g * u,\n            i = j(h, a, d);\n        return i >= q ? k(b, h) : 0 === i ? h : m(b, c, c + u);\n      }\n\n      function o() {\n        y = !0, a === c && d === e || l();\n      }\n\n      var p = 4,\n          q = .001,\n          r = 1e-7,\n          s = 10,\n          t = 11,\n          u = 1 / (t - 1),\n          v = ('Float32Array' in b);\n\n      if (4 !== arguments.length) {\n        return !1;\n      }\n\n      for (var w = 0; w < 4; ++w) {\n        if ('number' != typeof arguments[w] || isNaN(arguments[w]) || !isFinite(arguments[w])) {\n          return !1;\n        }\n      }\n\n      a = Math.min(a, 1), d = Math.min(d, 1), a = Math.max(a, 0), d = Math.max(d, 0);\n\n      var x = v ? new Float32Array(t) : new Array(t),\n          y = !1,\n          z = function (b) {\n        return y || o(), a === c && d === e ? b : 0 === b ? 0 : 1 === b ? 1 : i(n(b), c, e);\n      };\n\n      z.getControlPoints = function () {\n        return [{\n          x: a,\n          y: c\n        }, {\n          x: d,\n          y: e\n        }];\n      };\n\n      var A = 'generateBezier(' + [a, c, d, e] + ')';\n      return z.toString = function () {\n        return A;\n      }, z;\n    }\n\n    function l(a, b) {\n      var c = a;\n      return u.isString(a) ? y.Easings[a] || (c = !1) : c = u.isArray(a) && 1 === a.length ? j.apply(null, a) : u.isArray(a) && 2 === a.length ? z.apply(null, a.concat([b])) : !(!u.isArray(a) || 4 !== a.length) && k.apply(null, a), !1 === c && (c = y.Easings[y.defaults.easing] ? y.defaults.easing : x), c;\n    }\n\n    function m(a) {\n      if (a) {\n        var b = y.timestamp && !0 !== a ? a : r.now(),\n            c = y.State.calls.length;\n        c > 1e4 && (y.State.calls = e(y.State.calls), c = y.State.calls.length);\n\n        for (var f = 0; f < c; f++) {\n          if (y.State.calls[f]) {\n            var h = y.State.calls[f],\n                i = h[0],\n                j = h[2],\n                k = h[3],\n                l = !k,\n                q = null,\n                s = h[5],\n                t = h[6];\n\n            if (k || (k = y.State.calls[f][3] = b - 16), s) {\n              if (!0 !== s.resume) {\n                continue;\n              }\n\n              k = h[3] = Math.round(b - t - 16), h[5] = null;\n            }\n\n            t = h[6] = b - k;\n\n            for (var v = Math.min(t / j.duration, 1), w = 0, x = i.length; w < x; w++) {\n              var z = i[w],\n                  B = z.element;\n\n              if (g(B)) {\n                var D = !1;\n\n                if (j.display !== d && null !== j.display && 'none' !== j.display) {\n                  if ('flex' === j.display) {\n                    var E = ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex'];\n                    o.each(E, function (a, b) {\n                      A.setPropertyValue(B, 'display', b);\n                    });\n                  }\n\n                  A.setPropertyValue(B, 'display', j.display);\n                }\n\n                j.visibility !== d && 'hidden' !== j.visibility && A.setPropertyValue(B, 'visibility', j.visibility);\n\n                for (var F in z) {\n                  if (z.hasOwnProperty(F) && 'element' !== F) {\n                    var G,\n                        H = z[F],\n                        I = u.isString(H.easing) ? y.Easings[H.easing] : H.easing;\n\n                    if (u.isString(H.pattern)) {\n                      var J = 1 === v ? function (a, b, c) {\n                        var d = H.endValue[b];\n                        return c ? Math.round(d) : d;\n                      } : function (a, b, c) {\n                        var d = H.startValue[b],\n                            e = H.endValue[b] - d,\n                            f = d + e * I(v, j, e);\n                        return c ? Math.round(f) : f;\n                      };\n                      G = H.pattern.replace(/{(\\d+)(!)?}/g, J);\n                    } else if (1 === v) {\n                      G = H.endValue;\n                    } else {\n                      var K = H.endValue - H.startValue;\n                      G = H.startValue + K * I(v, j, K);\n                    }\n\n                    if (!l && G === H.currentValue) {\n                      continue;\n                    }\n\n                    if (H.currentValue = G, 'tween' === F) {\n                      q = G;\n                    } else {\n                      var L;\n\n                      if (A.Hooks.registered[F]) {\n                        L = A.Hooks.getRoot(F);\n                        var M = g(B).rootPropertyValueCache[L];\n                        M && (H.rootPropertyValue = M);\n                      }\n\n                      var N = A.setPropertyValue(B, F, H.currentValue + (p < 9 && 0 === parseFloat(G) ? '' : H.unitType), H.rootPropertyValue, H.scrollData);\n                      A.Hooks.registered[F] && (A.Normalizations.registered[L] ? g(B).rootPropertyValueCache[L] = A.Normalizations.registered[L]('extract', null, N[1]) : g(B).rootPropertyValueCache[L] = N[1]), 'transform' === N[0] && (D = !0);\n                    }\n                  }\n                }\n\n                j.mobileHA && g(B).transformCache.translate3d === d && (g(B).transformCache.translate3d = '(0px, 0px, 0px)', D = !0), D && A.flushTransformCache(B);\n              }\n            }\n\n            j.display !== d && 'none' !== j.display && (y.State.calls[f][2].display = !1), j.visibility !== d && 'hidden' !== j.visibility && (y.State.calls[f][2].visibility = !1), j.progress && j.progress.call(h[1], h[1], v, Math.max(0, k + j.duration - b), k, q), 1 === v && n(f);\n          }\n        }\n      }\n\n      y.State.isTicking && C(m);\n    }\n\n    function n(a, b) {\n      if (!y.State.calls[a]) {\n        return !1;\n      }\n\n      for (var c = y.State.calls[a][0], e = y.State.calls[a][1], f = y.State.calls[a][2], h = y.State.calls[a][4], i = !1, j = 0, k = c.length; j < k; j++) {\n        var l = c[j].element;\n        b || f.loop || ('none' === f.display && A.setPropertyValue(l, 'display', f.display), 'hidden' === f.visibility && A.setPropertyValue(l, 'visibility', f.visibility));\n        var m = g(l);\n\n        if (!0 !== f.loop && (o.queue(l)[1] === d || !/\\.velocityQueueEntryFlag/i.test(o.queue(l)[1])) && m) {\n          m.isAnimating = !1, m.rootPropertyValueCache = {};\n          var n = !1;\n          o.each(A.Lists.transforms3D, function (a, b) {\n            var c = /^scale/.test(b) ? 1 : 0,\n                e = m.transformCache[b];\n            m.transformCache[b] !== d && new RegExp('^\\\\(' + c + '[^.]').test(e) && (n = !0, delete m.transformCache[b]);\n          }), f.mobileHA && (n = !0, delete m.transformCache.translate3d), n && A.flushTransformCache(l), A.Values.removeClass(l, 'velocity-animating');\n        }\n\n        if (!b && f.complete && !f.loop && j === k - 1) {\n          try {\n            f.complete.call(e, e);\n          } catch (r) {\n            setTimeout(function () {\n              throw r;\n            }, 1);\n          }\n        }\n\n        h && !0 !== f.loop && h(e), m && !0 === f.loop && !b && (o.each(m.tweensContainer, function (a, b) {\n          if (/^rotate/.test(a) && (parseFloat(b.startValue) - parseFloat(b.endValue)) % 360 == 0) {\n            var c = b.startValue;\n            b.startValue = b.endValue, b.endValue = c;\n          }\n\n          /^backgroundPosition/.test(a) && 100 === parseFloat(b.endValue) && '%' === b.unitType && (b.endValue = 0, b.startValue = 100);\n        }), y(l, 'reverse', {\n          loop: !0,\n          delay: f.delay\n        })), !1 !== f.queue && o.dequeue(l, f.queue);\n      }\n\n      y.State.calls[a] = !1;\n\n      for (var p = 0, q = y.State.calls.length; p < q; p++) {\n        if (!1 !== y.State.calls[p]) {\n          i = !0;\n          break;\n        }\n      }\n\n      !1 === i && (y.State.isTicking = !1, delete y.State.calls, y.State.calls = []);\n    }\n\n    var o,\n        p = function () {\n      if (c.documentMode) {\n        return c.documentMode;\n      }\n\n      for (var a = 7; a > 4; a--) {\n        var b = c.createElement('div');\n\n        if (b.innerHTML = '\\x3c!--[if IE ' + a + ']><span></span><![endif]--\\x3e', b.getElementsByTagName('span').length) {\n          return b = null, a;\n        }\n      }\n\n      return d;\n    }(),\n        q = function () {\n      var a = 0;\n      return b.webkitRequestAnimationFrame || b.mozRequestAnimationFrame || function (b) {\n        var c,\n            d = new Date().getTime();\n        return c = Math.max(0, 16 - (d - a)), a = d + c, setTimeout(function () {\n          b(d + c);\n        }, c);\n      };\n    }(),\n        r = function () {\n      var a = b.performance || {};\n\n      if ('function' != typeof a.now) {\n        var c = a.timing && a.timing.navigationStart ? a.timing.navigationStart : new Date().getTime();\n\n        a.now = function () {\n          return new Date().getTime() - c;\n        };\n      }\n\n      return a;\n    }(),\n        s = function () {\n      var a = Array.prototype.slice;\n\n      try {\n        return a.call(c.documentElement), a;\n      } catch (b) {\n        return function (b, c) {\n          var d = this.length;\n\n          if ('number' != typeof b && (b = 0), 'number' != typeof c && (c = d), this.slice) {\n            return a.call(this, b, c);\n          }\n\n          var e,\n              f = [],\n              g = b >= 0 ? b : Math.max(0, d + b),\n              h = c < 0 ? d + c : Math.min(c, d),\n              i = h - g;\n\n          if (i > 0) {\n            if (f = new Array(i), this.charAt) {\n              for (e = 0; e < i; e++) {\n                f[e] = this.charAt(g + e);\n              }\n            } else {\n              for (e = 0; e < i; e++) {\n                f[e] = this[g + e];\n              }\n            }\n          }\n\n          return f;\n        };\n      }\n    }(),\n        t = function () {\n      return Array.prototype.includes ? function (a, b) {\n        return a.includes(b);\n      } : Array.prototype.indexOf ? function (a, b) {\n        return a.indexOf(b) >= 0;\n      } : function (a, b) {\n        for (var c = 0; c < a.length; c++) {\n          if (a[c] === b) {\n            return !0;\n          }\n        }\n\n        return !1;\n      };\n    },\n        u = {\n      isNumber: function (a) {\n        return 'number' == typeof a;\n      },\n      isString: function (a) {\n        return 'string' == typeof a;\n      },\n      isArray: Array.isArray || function (a) {\n        return '[object Array]' === Object.prototype.toString.call(a);\n      },\n      isFunction: function (a) {\n        return '[object Function]' === Object.prototype.toString.call(a);\n      },\n      isNode: function (a) {\n        return a && a.nodeType;\n      },\n      isWrapped: function (a) {\n        return a && a !== b && u.isNumber(a.length) && !u.isString(a) && !u.isFunction(a) && !u.isNode(a) && (0 === a.length || u.isNode(a[0]));\n      },\n      isSVG: function (a) {\n        return b.SVGElement && a instanceof b.SVGElement;\n      },\n      isEmptyObject: function (a) {\n        for (var b in a) {\n          if (a.hasOwnProperty(b)) {\n            return !1;\n          }\n        }\n\n        return !0;\n      }\n    },\n        v = !1;\n\n    if (a.fn && a.fn.jquery ? (o = a, v = !0) : o = b.Velocity.Utilities, p <= 8 && !v) {\n      throw new Error('Velocity: IE8 and below require jQuery to be loaded before Velocity.');\n    }\n\n    if (p <= 7) {\n      return void (jQuery.fn.velocity = jQuery.fn.animate);\n    }\n\n    var w = 400,\n        x = 'swing',\n        y = {\n      State: {\n        isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(b.navigator.userAgent),\n        isAndroid: /Android/i.test(b.navigator.userAgent),\n        isGingerbread: /Android 2\\.3\\.[3-7]/i.test(b.navigator.userAgent),\n        isChrome: b.chrome,\n        isFirefox: /Firefox/i.test(b.navigator.userAgent),\n        prefixElement: c.createElement('div'),\n        prefixMatches: {},\n        scrollAnchor: null,\n        scrollPropertyLeft: null,\n        scrollPropertyTop: null,\n        isTicking: !1,\n        calls: [],\n        delayedElements: {\n          count: 0\n        }\n      },\n      CSS: {},\n      Utilities: o,\n      Redirects: {},\n      Easings: {},\n      Promise: b.Promise,\n      defaults: {\n        queue: '',\n        duration: w,\n        easing: x,\n        begin: d,\n        complete: d,\n        progress: d,\n        display: d,\n        visibility: d,\n        loop: !1,\n        delay: !1,\n        mobileHA: !0,\n        _cacheValues: !0,\n        promiseRejectEmpty: !0\n      },\n      init: function (a) {\n        o.data(a, 'velocity', {\n          isSVG: u.isSVG(a),\n          isAnimating: !1,\n          computedStyle: null,\n          tweensContainer: null,\n          rootPropertyValueCache: {},\n          transformCache: {}\n        });\n      },\n      hook: null,\n      mock: !1,\n      version: {\n        major: 1,\n        minor: 5,\n        patch: 1\n      },\n      debug: !1,\n      timestamp: !0,\n      pauseAll: function (a) {\n        var b = new Date().getTime();\n        o.each(y.State.calls, function (b, c) {\n          if (c) {\n            if (a !== d && (c[2].queue !== a || !1 === c[2].queue)) {\n              return !0;\n            }\n\n            c[5] = {\n              resume: !1\n            };\n          }\n        }), o.each(y.State.delayedElements, function (a, c) {\n          c && h(c, b);\n        });\n      },\n      resumeAll: function (a) {\n        var b = new Date().getTime();\n        o.each(y.State.calls, function (b, c) {\n          if (c) {\n            if (a !== d && (c[2].queue !== a || !1 === c[2].queue)) {\n              return !0;\n            }\n\n            c[5] && (c[5].resume = !0);\n          }\n        }), o.each(y.State.delayedElements, function (a, c) {\n          c && i(c, b);\n        });\n      }\n    };\n    b.pageYOffset !== d ? (y.State.scrollAnchor = b, y.State.scrollPropertyLeft = 'pageXOffset', y.State.scrollPropertyTop = 'pageYOffset') : (y.State.scrollAnchor = c.documentElement || c.body.parentNode || c.body, y.State.scrollPropertyLeft = 'scrollLeft', y.State.scrollPropertyTop = 'scrollTop');\n\n    var z = function () {\n      function a(a) {\n        return -a.tension * a.x - a.friction * a.v;\n      }\n\n      function b(b, c, d) {\n        var e = {\n          x: b.x + d.dx * c,\n          v: b.v + d.dv * c,\n          tension: b.tension,\n          friction: b.friction\n        };\n        return {\n          dx: e.v,\n          dv: a(e)\n        };\n      }\n\n      function c(c, d) {\n        var e = {\n          dx: c.v,\n          dv: a(c)\n        },\n            f = b(c, .5 * d, e),\n            g = b(c, .5 * d, f),\n            h = b(c, d, g),\n            i = 1 / 6 * (e.dx + 2 * (f.dx + g.dx) + h.dx),\n            j = 1 / 6 * (e.dv + 2 * (f.dv + g.dv) + h.dv);\n        return c.x = c.x + i * d, c.v = c.v + j * d, c;\n      }\n\n      return function d(a, b, e) {\n        var f,\n            g,\n            h,\n            i = {\n          x: -1,\n          v: 0,\n          tension: null,\n          friction: null\n        },\n            j = [0],\n            k = 0;\n\n        for (a = parseFloat(a) || 500, b = parseFloat(b) || 20, e = e || null, i.tension = a, i.friction = b, f = null !== e, f ? (k = d(a, b), g = k / e * .016) : g = .016;;) {\n          if (h = c(h || i, g), j.push(1 + h.x), k += 16, !(Math.abs(h.x) > 1e-4 && Math.abs(h.v) > 1e-4)) {\n            break;\n          }\n        }\n\n        return f ? function (a) {\n          return j[a * (j.length - 1) | 0];\n        } : k;\n      };\n    }();\n\n    y.Easings = {\n      linear: function (a) {\n        return a;\n      },\n      swing: function (a) {\n        return .5 - Math.cos(a * Math.PI) / 2;\n      },\n      spring: function (a) {\n        return 1 - Math.cos(4.5 * a * Math.PI) * Math.exp(6 * -a);\n      }\n    }, o.each([['ease', [.25, .1, .25, 1]], ['ease-in', [.42, 0, 1, 1]], ['ease-out', [0, 0, .58, 1]], ['ease-in-out', [.42, 0, .58, 1]], ['easeInSine', [.47, 0, .745, .715]], ['easeOutSine', [.39, .575, .565, 1]], ['easeInOutSine', [.445, .05, .55, .95]], ['easeInQuad', [.55, .085, .68, .53]], ['easeOutQuad', [.25, .46, .45, .94]], ['easeInOutQuad', [.455, .03, .515, .955]], ['easeInCubic', [.55, .055, .675, .19]], ['easeOutCubic', [.215, .61, .355, 1]], ['easeInOutCubic', [.645, .045, .355, 1]], ['easeInQuart', [.895, .03, .685, .22]], ['easeOutQuart', [.165, .84, .44, 1]], ['easeInOutQuart', [.77, 0, .175, 1]], ['easeInQuint', [.755, .05, .855, .06]], ['easeOutQuint', [.23, 1, .32, 1]], ['easeInOutQuint', [.86, 0, .07, 1]], ['easeInExpo', [.95, .05, .795, .035]], ['easeOutExpo', [.19, 1, .22, 1]], ['easeInOutExpo', [1, 0, 0, 1]], ['easeInCirc', [.6, .04, .98, .335]], ['easeOutCirc', [.075, .82, .165, 1]], ['easeInOutCirc', [.785, .135, .15, .86]]], function (a, b) {\n      y.Easings[b[0]] = k.apply(null, b[1]);\n    });\n    var A = y.CSS = {\n      RegEx: {\n        isHex: /^#([A-f\\d]{3}){1,2}$/i,\n        valueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n        wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n        valueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/gi\n      },\n      Lists: {\n        colors: ['fill', 'stroke', 'stopColor', 'color', 'backgroundColor', 'borderColor', 'borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor', 'outlineColor'],\n        transformsBase: ['translateX', 'translateY', 'scale', 'scaleX', 'scaleY', 'skewX', 'skewY', 'rotateZ'],\n        transforms3D: ['transformPerspective', 'translateZ', 'scaleZ', 'rotateX', 'rotateY'],\n        units: ['%', 'em', 'ex', 'ch', 'rem', 'vw', 'vh', 'vmin', 'vmax', 'cm', 'mm', 'Q', 'in', 'pc', 'pt', 'px', 'deg', 'grad', 'rad', 'turn', 's', 'ms'],\n        colorNames: {\n          aliceblue: '240,248,255',\n          antiquewhite: '250,235,215',\n          aquamarine: '127,255,212',\n          aqua: '0,255,255',\n          azure: '240,255,255',\n          beige: '245,245,220',\n          bisque: '255,228,196',\n          black: '0,0,0',\n          blanchedalmond: '255,235,205',\n          blueviolet: '138,43,226',\n          blue: '0,0,255',\n          brown: '165,42,42',\n          burlywood: '222,184,135',\n          cadetblue: '95,158,160',\n          chartreuse: '127,255,0',\n          chocolate: '210,105,30',\n          coral: '255,127,80',\n          cornflowerblue: '100,149,237',\n          cornsilk: '255,248,220',\n          crimson: '220,20,60',\n          cyan: '0,255,255',\n          darkblue: '0,0,139',\n          darkcyan: '0,139,139',\n          darkgoldenrod: '184,134,11',\n          darkgray: '169,169,169',\n          darkgrey: '169,169,169',\n          darkgreen: '0,100,0',\n          darkkhaki: '189,183,107',\n          darkmagenta: '139,0,139',\n          darkolivegreen: '85,107,47',\n          darkorange: '255,140,0',\n          darkorchid: '153,50,204',\n          darkred: '139,0,0',\n          darksalmon: '233,150,122',\n          darkseagreen: '143,188,143',\n          darkslateblue: '72,61,139',\n          darkslategray: '47,79,79',\n          darkturquoise: '0,206,209',\n          darkviolet: '148,0,211',\n          deeppink: '255,20,147',\n          deepskyblue: '0,191,255',\n          dimgray: '105,105,105',\n          dimgrey: '105,105,105',\n          dodgerblue: '30,144,255',\n          firebrick: '178,34,34',\n          floralwhite: '255,250,240',\n          forestgreen: '34,139,34',\n          fuchsia: '255,0,255',\n          gainsboro: '220,220,220',\n          ghostwhite: '248,248,255',\n          gold: '255,215,0',\n          goldenrod: '218,165,32',\n          gray: '128,128,128',\n          grey: '128,128,128',\n          greenyellow: '173,255,47',\n          green: '0,128,0',\n          honeydew: '240,255,240',\n          hotpink: '255,105,180',\n          indianred: '205,92,92',\n          indigo: '75,0,130',\n          ivory: '255,255,240',\n          khaki: '240,230,140',\n          lavenderblush: '255,240,245',\n          lavender: '230,230,250',\n          lawngreen: '124,252,0',\n          lemonchiffon: '255,250,205',\n          lightblue: '173,216,230',\n          lightcoral: '240,128,128',\n          lightcyan: '224,255,255',\n          lightgoldenrodyellow: '250,250,210',\n          lightgray: '211,211,211',\n          lightgrey: '211,211,211',\n          lightgreen: '144,238,144',\n          lightpink: '255,182,193',\n          lightsalmon: '255,160,122',\n          lightseagreen: '32,178,170',\n          lightskyblue: '135,206,250',\n          lightslategray: '119,136,153',\n          lightsteelblue: '176,196,222',\n          lightyellow: '255,255,224',\n          limegreen: '50,205,50',\n          lime: '0,255,0',\n          linen: '250,240,230',\n          magenta: '255,0,255',\n          maroon: '128,0,0',\n          mediumaquamarine: '102,205,170',\n          mediumblue: '0,0,205',\n          mediumorchid: '186,85,211',\n          mediumpurple: '147,112,219',\n          mediumseagreen: '60,179,113',\n          mediumslateblue: '123,104,238',\n          mediumspringgreen: '0,250,154',\n          mediumturquoise: '72,209,204',\n          mediumvioletred: '199,21,133',\n          midnightblue: '25,25,112',\n          mintcream: '245,255,250',\n          mistyrose: '255,228,225',\n          moccasin: '255,228,181',\n          navajowhite: '255,222,173',\n          navy: '0,0,128',\n          oldlace: '253,245,230',\n          olivedrab: '107,142,35',\n          olive: '128,128,0',\n          orangered: '255,69,0',\n          orange: '255,165,0',\n          orchid: '218,112,214',\n          palegoldenrod: '238,232,170',\n          palegreen: '152,251,152',\n          paleturquoise: '175,238,238',\n          palevioletred: '219,112,147',\n          papayawhip: '255,239,213',\n          peachpuff: '255,218,185',\n          peru: '205,133,63',\n          pink: '255,192,203',\n          plum: '221,160,221',\n          powderblue: '176,224,230',\n          purple: '128,0,128',\n          red: '255,0,0',\n          rosybrown: '188,143,143',\n          royalblue: '65,105,225',\n          saddlebrown: '139,69,19',\n          salmon: '250,128,114',\n          sandybrown: '244,164,96',\n          seagreen: '46,139,87',\n          seashell: '255,245,238',\n          sienna: '160,82,45',\n          silver: '192,192,192',\n          skyblue: '135,206,235',\n          slateblue: '106,90,205',\n          slategray: '112,128,144',\n          snow: '255,250,250',\n          springgreen: '0,255,127',\n          steelblue: '70,130,180',\n          tan: '210,180,140',\n          teal: '0,128,128',\n          thistle: '216,191,216',\n          tomato: '255,99,71',\n          turquoise: '64,224,208',\n          violet: '238,130,238',\n          wheat: '245,222,179',\n          whitesmoke: '245,245,245',\n          white: '255,255,255',\n          yellowgreen: '154,205,50',\n          yellow: '255,255,0'\n        }\n      },\n      Hooks: {\n        templates: {\n          textShadow: ['Color X Y Blur', 'black 0px 0px 0px'],\n          boxShadow: ['Color X Y Blur Spread', 'black 0px 0px 0px 0px'],\n          clip: ['Top Right Bottom Left', '0px 0px 0px 0px'],\n          backgroundPosition: ['X Y', '0% 0%'],\n          transformOrigin: ['X Y Z', '50% 50% 0px'],\n          perspectiveOrigin: ['X Y', '50% 50%']\n        },\n        registered: {},\n        register: function () {\n          for (var a = 0; a < A.Lists.colors.length; a++) {\n            var b = 'color' === A.Lists.colors[a] ? '0 0 0 1' : '255 255 255 1';\n            A.Hooks.templates[A.Lists.colors[a]] = ['Red Green Blue Alpha', b];\n          }\n\n          var c, d, e;\n\n          if (p) {\n            for (c in A.Hooks.templates) {\n              if (A.Hooks.templates.hasOwnProperty(c)) {\n                d = A.Hooks.templates[c], e = d[0].split(' ');\n                var f = d[1].match(A.RegEx.valueSplit);\n                'Color' === e[0] && (e.push(e.shift()), f.push(f.shift()), A.Hooks.templates[c] = [e.join(' '), f.join(' ')]);\n              }\n            }\n          }\n\n          for (c in A.Hooks.templates) {\n            if (A.Hooks.templates.hasOwnProperty(c)) {\n              d = A.Hooks.templates[c], e = d[0].split(' ');\n\n              for (var g in e) {\n                if (e.hasOwnProperty(g)) {\n                  var h = c + e[g],\n                      i = g;\n                  A.Hooks.registered[h] = [c, i];\n                }\n              }\n            }\n          }\n        },\n        getRoot: function (a) {\n          var b = A.Hooks.registered[a];\n          return b ? b[0] : a;\n        },\n        getUnit: function (a, b) {\n          var c = (a.substr(b || 0, 5).match(/^[a-z%]+/) || [])[0] || '';\n          return c && t(A.Lists.units, c) ? c : '';\n        },\n        fixColors: function (a) {\n          return a.replace(/(rgba?\\(\\s*)?(\\b[a-z]+\\b)/g, function (a, b, c) {\n            return A.Lists.colorNames.hasOwnProperty(c) ? (b || 'rgba(') + A.Lists.colorNames[c] + (b ? '' : ',1)') : b + c;\n          });\n        },\n        cleanRootPropertyValue: function (a, b) {\n          return A.RegEx.valueUnwrap.test(b) && (b = b.match(A.RegEx.valueUnwrap)[1]), A.Values.isCSSNullValue(b) && (b = A.Hooks.templates[a][1]), b;\n        },\n        extractValue: function (a, b) {\n          var c = A.Hooks.registered[a];\n\n          if (c) {\n            var d = c[0],\n                e = c[1];\n            return b = A.Hooks.cleanRootPropertyValue(d, b), b.toString().match(A.RegEx.valueSplit)[e];\n          }\n\n          return b;\n        },\n        injectValue: function (a, b, c) {\n          var d = A.Hooks.registered[a];\n\n          if (d) {\n            var e,\n                f = d[0],\n                g = d[1];\n            return c = A.Hooks.cleanRootPropertyValue(f, c), e = c.toString().match(A.RegEx.valueSplit), e[g] = b, e.join(' ');\n          }\n\n          return c;\n        }\n      },\n      Normalizations: {\n        registered: {\n          clip: function (a, b, c) {\n            switch (a) {\n              case 'name':\n                return 'clip';\n\n              case 'extract':\n                var d;\n                return A.RegEx.wrappedValueAlreadyExtracted.test(c) ? d = c : (d = c.toString().match(A.RegEx.valueUnwrap), d = d ? d[1].replace(/,(\\s+)?/g, ' ') : c), d;\n\n              case 'inject':\n                return 'rect(' + c + ')';\n            }\n          },\n          blur: function (a, b, c) {\n            switch (a) {\n              case 'name':\n                return y.State.isFirefox ? 'filter' : '-webkit-filter';\n\n              case 'extract':\n                var d = parseFloat(c);\n\n                if (!d && 0 !== d) {\n                  var e = c.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);\n                  d = e ? e[1] : 0;\n                }\n\n                return d;\n\n              case 'inject':\n                return parseFloat(c) ? 'blur(' + c + ')' : 'none';\n            }\n          },\n          opacity: function (a, b, c) {\n            if (p <= 8) {\n              switch (a) {\n                case 'name':\n                  return 'filter';\n\n                case 'extract':\n                  var d = c.toString().match(/alpha\\(opacity=(.*)\\)/i);\n                  return c = d ? d[1] / 100 : 1;\n\n                case 'inject':\n                  return b.style.zoom = 1, parseFloat(c) >= 1 ? '' : 'alpha(opacity=' + parseInt(100 * parseFloat(c), 10) + ')';\n              }\n            } else {\n              switch (a) {\n                case 'name':\n                  return 'opacity';\n\n                case 'extract':\n                case 'inject':\n                  return c;\n              }\n            }\n          }\n        },\n        register: function () {\n          function a(a, b, c) {\n            if ('border-box' === A.getPropertyValue(b, 'boxSizing').toString().toLowerCase() === (c || !1)) {\n              var d,\n                  e,\n                  f = 0,\n                  g = 'width' === a ? ['Left', 'Right'] : ['Top', 'Bottom'],\n                  h = ['padding' + g[0], 'padding' + g[1], 'border' + g[0] + 'Width', 'border' + g[1] + 'Width'];\n\n              for (d = 0; d < h.length; d++) {\n                e = parseFloat(A.getPropertyValue(b, h[d])), isNaN(e) || (f += e);\n              }\n\n              return c ? -f : f;\n            }\n\n            return 0;\n          }\n\n          function b(b, c) {\n            return function (d, e, f) {\n              switch (d) {\n                case 'name':\n                  return b;\n\n                case 'extract':\n                  return parseFloat(f) + a(b, e, c);\n\n                case 'inject':\n                  return parseFloat(f) - a(b, e, c) + 'px';\n              }\n            };\n          }\n\n          p && !(p > 9) || y.State.isGingerbread || (A.Lists.transformsBase = A.Lists.transformsBase.concat(A.Lists.transforms3D));\n\n          for (var c = 0; c < A.Lists.transformsBase.length; c++) {\n            !function () {\n              var a = A.Lists.transformsBase[c];\n\n              A.Normalizations.registered[a] = function (b, c, e) {\n                switch (b) {\n                  case 'name':\n                    return 'transform';\n\n                  case 'extract':\n                    return g(c) === d || g(c).transformCache[a] === d ? /^scale/i.test(a) ? 1 : 0 : g(c).transformCache[a].replace(/[()]/g, '');\n\n                  case 'inject':\n                    var f = !1;\n\n                    switch (a.substr(0, a.length - 1)) {\n                      case 'translate':\n                        f = !/(%|px|em|rem|vw|vh|\\d)$/i.test(e);\n                        break;\n\n                      case 'scal':\n                      case 'scale':\n                        y.State.isAndroid && g(c).transformCache[a] === d && e < 1 && (e = 1), f = !/(\\d)$/i.test(e);\n                        break;\n\n                      case 'skew':\n                      case 'rotate':\n                        f = !/(deg|\\d)$/i.test(e);\n                    }\n\n                    return f || (g(c).transformCache[a] = '(' + e + ')'), g(c).transformCache[a];\n                }\n              };\n            }();\n          }\n\n          for (var e = 0; e < A.Lists.colors.length; e++) {\n            !function () {\n              var a = A.Lists.colors[e];\n\n              A.Normalizations.registered[a] = function (b, c, e) {\n                switch (b) {\n                  case 'name':\n                    return a;\n\n                  case 'extract':\n                    var f;\n\n                    if (A.RegEx.wrappedValueAlreadyExtracted.test(e)) {\n                      f = e;\n                    } else {\n                      var g,\n                          h = {\n                        black: 'rgb(0, 0, 0)',\n                        blue: 'rgb(0, 0, 255)',\n                        gray: 'rgb(128, 128, 128)',\n                        green: 'rgb(0, 128, 0)',\n                        red: 'rgb(255, 0, 0)',\n                        white: 'rgb(255, 255, 255)'\n                      };\n                      /^[A-z]+$/i.test(e) ? g = h[e] !== d ? h[e] : h.black : A.RegEx.isHex.test(e) ? g = 'rgb(' + A.Values.hexToRgb(e).join(' ') + ')' : /^rgba?\\(/i.test(e) || (g = h.black), f = (g || e).toString().match(A.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g, ' ');\n                    }\n\n                    return (!p || p > 8) && 3 === f.split(' ').length && (f += ' 1'), f;\n\n                  case 'inject':\n                    return /^rgb/.test(e) ? e : (p <= 8 ? 4 === e.split(' ').length && (e = e.split(/\\s+/).slice(0, 3).join(' ')) : 3 === e.split(' ').length && (e += ' 1'), (p <= 8 ? 'rgb' : 'rgba') + '(' + e.replace(/\\s+/g, ',').replace(/\\.(\\d)+(?=,)/g, '') + ')');\n                }\n              };\n            }();\n          }\n\n          A.Normalizations.registered.innerWidth = b('width', !0), A.Normalizations.registered.innerHeight = b('height', !0), A.Normalizations.registered.outerWidth = b('width'), A.Normalizations.registered.outerHeight = b('height');\n        }\n      },\n      Names: {\n        camelCase: function (a) {\n          return a.replace(/-(\\w)/g, function (a, b) {\n            return b.toUpperCase();\n          });\n        },\n        SVGAttribute: function (a) {\n          var b = 'width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2';\n          return (p || y.State.isAndroid && !y.State.isChrome) && (b += '|transform'), new RegExp('^(' + b + ')$', 'i').test(a);\n        },\n        prefixCheck: function (a) {\n          if (y.State.prefixMatches[a]) {\n            return [y.State.prefixMatches[a], !0];\n          }\n\n          for (var b = ['', 'Webkit', 'Moz', 'ms', 'O'], c = 0, d = b.length; c < d; c++) {\n            var e;\n\n            if (e = 0 === c ? a : b[c] + a.replace(/^\\w/, function (a) {\n              return a.toUpperCase();\n            }), u.isString(y.State.prefixElement.style[e])) {\n              return y.State.prefixMatches[a] = e, [e, !0];\n            }\n          }\n\n          return [a, !1];\n        }\n      },\n      Values: {\n        hexToRgb: function (a) {\n          var b,\n              c = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n              d = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n          return a = a.replace(c, function (a, b, c, d) {\n            return b + b + c + c + d + d;\n          }), b = d.exec(a), b ? [parseInt(b[1], 16), parseInt(b[2], 16), parseInt(b[3], 16)] : [0, 0, 0];\n        },\n        isCSSNullValue: function (a) {\n          return !a || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(a);\n        },\n        getUnitType: function (a) {\n          return /^(rotate|skew)/i.test(a) ? 'deg' : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(a) ? '' : 'px';\n        },\n        getDisplayType: function (a) {\n          var b = a && a.tagName.toString().toLowerCase();\n          return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(b) ? 'inline' : /^(li)$/i.test(b) ? 'list-item' : /^(tr)$/i.test(b) ? 'table-row' : /^(table)$/i.test(b) ? 'table' : /^(tbody)$/i.test(b) ? 'table-row-group' : 'block';\n        },\n        addClass: function (a, b) {\n          if (a) {\n            if (a.classList) {\n              a.classList.add(b);\n            } else if (u.isString(a.className)) {\n              a.className += (a.className.length ? ' ' : '') + b;\n            } else {\n              var c = a.getAttribute(p <= 7 ? 'className' : 'class') || '';\n              a.setAttribute('class', c + (c ? ' ' : '') + b);\n            }\n          }\n        },\n        removeClass: function (a, b) {\n          if (a) {\n            if (a.classList) {\n              a.classList.remove(b);\n            } else if (u.isString(a.className)) {\n              a.className = a.className.toString().replace(new RegExp('(^|\\\\s)' + b.split(' ').join('|') + '(\\\\s|$)', 'gi'), ' ');\n            } else {\n              var c = a.getAttribute(p <= 7 ? 'className' : 'class') || '';\n              a.setAttribute('class', c.replace(new RegExp('(^|s)' + b.split(' ').join('|') + '(s|$)', 'gi'), ' '));\n            }\n          }\n        }\n      },\n      getPropertyValue: function (a, c, e, f) {\n        function h(a, c) {\n          var e = 0;\n\n          if (p <= 8) {\n            e = o.css(a, c);\n          } else {\n            var i = !1;\n            /^(width|height)$/.test(c) && 0 === A.getPropertyValue(a, 'display') && (i = !0, A.setPropertyValue(a, 'display', A.Values.getDisplayType(a)));\n\n            var j = function () {\n              i && A.setPropertyValue(a, 'display', 'none');\n            };\n\n            if (!f) {\n              if ('height' === c && 'border-box' !== A.getPropertyValue(a, 'boxSizing').toString().toLowerCase()) {\n                var k = a.offsetHeight - (parseFloat(A.getPropertyValue(a, 'borderTopWidth')) || 0) - (parseFloat(A.getPropertyValue(a, 'borderBottomWidth')) || 0) - (parseFloat(A.getPropertyValue(a, 'paddingTop')) || 0) - (parseFloat(A.getPropertyValue(a, 'paddingBottom')) || 0);\n                return j(), k;\n              }\n\n              if ('width' === c && 'border-box' !== A.getPropertyValue(a, 'boxSizing').toString().toLowerCase()) {\n                var l = a.offsetWidth - (parseFloat(A.getPropertyValue(a, 'borderLeftWidth')) || 0) - (parseFloat(A.getPropertyValue(a, 'borderRightWidth')) || 0) - (parseFloat(A.getPropertyValue(a, 'paddingLeft')) || 0) - (parseFloat(A.getPropertyValue(a, 'paddingRight')) || 0);\n                return j(), l;\n              }\n            }\n\n            var m;\n            m = g(a) === d ? b.getComputedStyle(a, null) : g(a).computedStyle ? g(a).computedStyle : g(a).computedStyle = b.getComputedStyle(a, null), 'borderColor' === c && (c = 'borderTopColor'), e = 9 === p && 'filter' === c ? m.getPropertyValue(c) : m[c], '' !== e && null !== e || (e = a.style[c]), j();\n          }\n\n          if ('auto' === e && /^(top|right|bottom|left)$/i.test(c)) {\n            var n = h(a, 'position');\n            ('fixed' === n || 'absolute' === n && /top|left/i.test(c)) && (e = o(a).position()[c] + 'px');\n          }\n\n          return e;\n        }\n\n        var i;\n\n        if (A.Hooks.registered[c]) {\n          var j = c,\n              k = A.Hooks.getRoot(j);\n          e === d && (e = A.getPropertyValue(a, A.Names.prefixCheck(k)[0])), A.Normalizations.registered[k] && (e = A.Normalizations.registered[k]('extract', a, e)), i = A.Hooks.extractValue(j, e);\n        } else if (A.Normalizations.registered[c]) {\n          var l, m;\n          l = A.Normalizations.registered[c]('name', a), 'transform' !== l && (m = h(a, A.Names.prefixCheck(l)[0]), A.Values.isCSSNullValue(m) && A.Hooks.templates[c] && (m = A.Hooks.templates[c][1])), i = A.Normalizations.registered[c]('extract', a, m);\n        }\n\n        if (!/^[\\d-]/.test(i)) {\n          var n = g(a);\n\n          if (n && n.isSVG && A.Names.SVGAttribute(c)) {\n            if (/^(height|width)$/i.test(c)) {\n              try {\n                i = a.getBBox()[c];\n              } catch (q) {\n                i = 0;\n              }\n            } else {\n              i = a.getAttribute(c);\n            }\n          } else {\n            i = h(a, A.Names.prefixCheck(c)[0]);\n          }\n        }\n\n        return A.Values.isCSSNullValue(i) && (i = 0), y.debug >= 2 && console.log('Get ' + c + ': ' + i), i;\n      },\n      setPropertyValue: function (a, c, d, e, f) {\n        var h = c;\n\n        if ('scroll' === c) {\n          f.container ? f.container['scroll' + f.direction] = d : 'Left' === f.direction ? b.scrollTo(d, f.alternateValue) : b.scrollTo(f.alternateValue, d);\n        } else if (A.Normalizations.registered[c] && 'transform' === A.Normalizations.registered[c]('name', a)) {\n          A.Normalizations.registered[c]('inject', a, d), h = 'transform', d = g(a).transformCache[c];\n        } else {\n          if (A.Hooks.registered[c]) {\n            var i = c,\n                j = A.Hooks.getRoot(c);\n            e = e || A.getPropertyValue(a, j), d = A.Hooks.injectValue(i, d, e), c = j;\n          }\n\n          if (A.Normalizations.registered[c] && (d = A.Normalizations.registered[c]('inject', a, d), c = A.Normalizations.registered[c]('name', a)), h = A.Names.prefixCheck(c)[0], p <= 8) {\n            try {\n              a.style[h] = d;\n            } catch (l) {\n              y.debug && console.log('Browser does not support [' + d + '] for [' + h + ']');\n            }\n          } else {\n            var k = g(a);\n            k && k.isSVG && A.Names.SVGAttribute(c) ? a.setAttribute(c, d) : a.style[h] = d;\n          }\n\n          y.debug >= 2 && console.log('Set ' + c + ' (' + h + '): ' + d);\n        }\n\n        return [h, d];\n      },\n      flushTransformCache: function (a) {\n        var b = '',\n            c = g(a);\n\n        if ((p || y.State.isAndroid && !y.State.isChrome) && c && c.isSVG) {\n          var d = function (b) {\n            return parseFloat(A.getPropertyValue(a, b));\n          },\n              e = {\n            translate: [d('translateX'), d('translateY')],\n            skewX: [d('skewX')],\n            skewY: [d('skewY')],\n            scale: 1 !== d('scale') ? [d('scale'), d('scale')] : [d('scaleX'), d('scaleY')],\n            rotate: [d('rotateZ'), 0, 0]\n          };\n\n          o.each(g(a).transformCache, function (a) {\n            /^translate/i.test(a) ? a = 'translate' : /^scale/i.test(a) ? a = 'scale' : /^rotate/i.test(a) && (a = 'rotate'), e[a] && (b += a + '(' + e[a].join(' ') + ') ', delete e[a]);\n          });\n        } else {\n          var f, h;\n          o.each(g(a).transformCache, function (c) {\n            if (f = g(a).transformCache[c], 'transformPerspective' === c) {\n              return h = f, !0;\n            }\n\n            9 === p && 'rotateZ' === c && (c = 'rotate'), b += c + f + ' ';\n          }), h && (b = 'perspective' + h + ' ' + b);\n        }\n\n        A.setPropertyValue(a, 'transform', b);\n      }\n    };\n    A.Hooks.register(), A.Normalizations.register(), y.hook = function (a, b, c) {\n      var e;\n      return a = f(a), o.each(a, function (a, f) {\n        if (g(f) === d && y.init(f), c === d) {\n          e === d && (e = A.getPropertyValue(f, b));\n        } else {\n          var h = A.setPropertyValue(f, b, c);\n          'transform' === h[0] && y.CSS.flushTransformCache(f), e = h;\n        }\n      }), e;\n    };\n\n    var B = function () {\n      function a() {\n        return k ? z.promise || null : p;\n      }\n\n      function e(a, e) {\n        function f(f) {\n          var k, n;\n\n          if (i.begin && 0 === D) {\n            try {\n              i.begin.call(r, r);\n            } catch (V) {\n              setTimeout(function () {\n                throw V;\n              }, 1);\n            }\n          }\n\n          if ('scroll' === G) {\n            var p,\n                q,\n                w,\n                x = /^x$/i.test(i.axis) ? 'Left' : 'Top',\n                B = parseFloat(i.offset) || 0;\n            i.container ? u.isWrapped(i.container) || u.isNode(i.container) ? (i.container = i.container[0] || i.container, p = i.container['scroll' + x], w = p + o(a).position()[x.toLowerCase()] + B) : i.container = null : (p = y.State.scrollAnchor[y.State['scrollProperty' + x]], q = y.State.scrollAnchor[y.State['scrollProperty' + ('Left' === x ? 'Top' : 'Left')]], w = o(a).offset()[x.toLowerCase()] + B), j = {\n              scroll: {\n                rootPropertyValue: !1,\n                startValue: p,\n                currentValue: p,\n                endValue: w,\n                unitType: '',\n                easing: i.easing,\n                scrollData: {\n                  container: i.container,\n                  direction: x,\n                  alternateValue: q\n                }\n              },\n              element: a\n            }, y.debug && console.log('tweensContainer (scroll): ', j.scroll, a);\n          } else if ('reverse' === G) {\n            if (!(k = g(a))) {\n              return;\n            }\n\n            if (!k.tweensContainer) {\n              return void o.dequeue(a, i.queue);\n            }\n\n            'none' === k.opts.display && (k.opts.display = 'auto'), 'hidden' === k.opts.visibility && (k.opts.visibility = 'visible'), k.opts.loop = !1, k.opts.begin = null, k.opts.complete = null, v.easing || delete i.easing, v.duration || delete i.duration, i = o.extend({}, k.opts, i), n = o.extend(!0, {}, k ? k.tweensContainer : null);\n\n            for (var E in n) {\n              if (n.hasOwnProperty(E) && 'element' !== E) {\n                var F = n[E].startValue;\n                n[E].startValue = n[E].currentValue = n[E].endValue, n[E].endValue = F, u.isEmptyObject(v) || (n[E].easing = i.easing), y.debug && console.log('reverse tweensContainer (' + E + '): ' + JSON.stringify(n[E]), a);\n              }\n            }\n\n            j = n;\n          } else if ('start' === G) {\n            k = g(a), k && k.tweensContainer && !0 === k.isAnimating && (n = k.tweensContainer);\n\n            var H = function (e, f) {\n              var g,\n                  l = A.Hooks.getRoot(e),\n                  m = !1,\n                  p = f[0],\n                  q = f[1],\n                  r = f[2];\n\n              if (!(k && k.isSVG || 'tween' === l || !1 !== A.Names.prefixCheck(l)[1] || A.Normalizations.registered[l] !== d)) {\n                return void (y.debug && console.log('Skipping [' + l + '] due to a lack of browser support.'));\n              }\n\n              (i.display !== d && null !== i.display && 'none' !== i.display || i.visibility !== d && 'hidden' !== i.visibility) && /opacity|filter/.test(e) && !r && 0 !== p && (r = 0), i._cacheValues && n && n[e] ? (r === d && (r = n[e].endValue + n[e].unitType), m = k.rootPropertyValueCache[l]) : A.Hooks.registered[e] ? r === d ? (m = A.getPropertyValue(a, l), r = A.getPropertyValue(a, e, m)) : m = A.Hooks.templates[l][1] : r === d && (r = A.getPropertyValue(a, e));\n\n              var s,\n                  t,\n                  v,\n                  w = !1,\n                  x = function (a, b) {\n                var c, d;\n                return d = (b || '0').toString().toLowerCase().replace(/[%A-z]+$/, function (a) {\n                  return c = a, '';\n                }), c || (c = A.Values.getUnitType(a)), [d, c];\n              };\n\n              if (r !== p && u.isString(r) && u.isString(p)) {\n                g = '';\n                var z = 0,\n                    B = 0,\n                    C = [],\n                    D = [],\n                    E = 0,\n                    F = 0,\n                    G = 0;\n\n                for (r = A.Hooks.fixColors(r), p = A.Hooks.fixColors(p); z < r.length && B < p.length;) {\n                  var H = r[z],\n                      I = p[B];\n\n                  if (/[\\d\\.-]/.test(H) && /[\\d\\.-]/.test(I)) {\n                    for (var J = H, K = I, L = '.', N = '.'; ++z < r.length;) {\n                      if ((H = r[z]) === L) {\n                        L = '..';\n                      } else if (!/\\d/.test(H)) {\n                        break;\n                      }\n\n                      J += H;\n                    }\n\n                    for (; ++B < p.length;) {\n                      if ((I = p[B]) === N) {\n                        N = '..';\n                      } else if (!/\\d/.test(I)) {\n                        break;\n                      }\n\n                      K += I;\n                    }\n\n                    var O = A.Hooks.getUnit(r, z),\n                        P = A.Hooks.getUnit(p, B);\n\n                    if (z += O.length, B += P.length, O === P) {\n                      J === K ? g += J + O : (g += '{' + C.length + (F ? '!' : '') + '}' + O, C.push(parseFloat(J)), D.push(parseFloat(K)));\n                    } else {\n                      var Q = parseFloat(J),\n                          R = parseFloat(K);\n                      g += (E < 5 ? 'calc' : '') + '(' + (Q ? '{' + C.length + (F ? '!' : '') + '}' : '0') + O + ' + ' + (R ? '{' + (C.length + (Q ? 1 : 0)) + (F ? '!' : '') + '}' : '0') + P + ')', Q && (C.push(Q), D.push(0)), R && (C.push(0), D.push(R));\n                    }\n                  } else {\n                    if (H !== I) {\n                      E = 0;\n                      break;\n                    }\n\n                    g += H, z++, B++, 0 === E && 'c' === H || 1 === E && 'a' === H || 2 === E && 'l' === H || 3 === E && 'c' === H || E >= 4 && '(' === H ? E++ : (E && E < 5 || E >= 4 && ')' === H && --E < 5) && (E = 0), 0 === F && 'r' === H || 1 === F && 'g' === H || 2 === F && 'b' === H || 3 === F && 'a' === H || F >= 3 && '(' === H ? (3 === F && 'a' === H && (G = 1), F++) : G && ',' === H ? ++G > 3 && (F = G = 0) : (G && F < (G ? 5 : 4) || F >= (G ? 4 : 3) && ')' === H && --F < (G ? 5 : 4)) && (F = G = 0);\n                  }\n                }\n\n                z === r.length && B === p.length || (y.debug && console.error('Trying to pattern match mis-matched strings [\"' + p + '\", \"' + r + '\"]'), g = d), g && (C.length ? (y.debug && console.log('Pattern found \"' + g + '\" -> ', C, D, '[' + r + ',' + p + ']'), r = C, p = D, t = v = '') : g = d);\n              }\n\n              g || (s = x(e, r), r = s[0], v = s[1], s = x(e, p), p = s[0].replace(/^([+-\\/*])=/, function (a, b) {\n                return w = b, '';\n              }), t = s[1], r = parseFloat(r) || 0, p = parseFloat(p) || 0, '%' === t && (/^(fontSize|lineHeight)$/.test(e) ? (p /= 100, t = 'em') : /^scale/.test(e) ? (p /= 100, t = '') : /(Red|Green|Blue)$/i.test(e) && (p = p / 100 * 255, t = '')));\n\n              if (/[\\/*]/.test(w)) {\n                t = v;\n              } else if (v !== t && 0 !== r) {\n                if (0 === p) {\n                  t = v;\n                } else {\n                  h = h || function () {\n                    var d = {\n                      myParent: a.parentNode || c.body,\n                      position: A.getPropertyValue(a, 'position'),\n                      fontSize: A.getPropertyValue(a, 'fontSize')\n                    },\n                        e = d.position === M.lastPosition && d.myParent === M.lastParent,\n                        f = d.fontSize === M.lastFontSize;\n                    M.lastParent = d.myParent, M.lastPosition = d.position, M.lastFontSize = d.fontSize;\n                    var g = {};\n\n                    if (f && e) {\n                      g.emToPx = M.lastEmToPx, g.percentToPxWidth = M.lastPercentToPxWidth, g.percentToPxHeight = M.lastPercentToPxHeight;\n                    } else {\n                      var h = k && k.isSVG ? c.createElementNS('http://www.w3.org/2000/svg', 'rect') : c.createElement('div');\n                      y.init(h), d.myParent.appendChild(h), o.each(['overflow', 'overflowX', 'overflowY'], function (a, b) {\n                        y.CSS.setPropertyValue(h, b, 'hidden');\n                      }), y.CSS.setPropertyValue(h, 'position', d.position), y.CSS.setPropertyValue(h, 'fontSize', d.fontSize), y.CSS.setPropertyValue(h, 'boxSizing', 'content-box'), o.each(['minWidth', 'maxWidth', 'width', 'minHeight', 'maxHeight', 'height'], function (a, b) {\n                        y.CSS.setPropertyValue(h, b, '100%');\n                      }), y.CSS.setPropertyValue(h, 'paddingLeft', '100em'), g.percentToPxWidth = M.lastPercentToPxWidth = (parseFloat(A.getPropertyValue(h, 'width', null, !0)) || 1) / 100, g.percentToPxHeight = M.lastPercentToPxHeight = (parseFloat(A.getPropertyValue(h, 'height', null, !0)) || 1) / 100, g.emToPx = M.lastEmToPx = (parseFloat(A.getPropertyValue(h, 'paddingLeft')) || 1) / 100, d.myParent.removeChild(h);\n                    }\n\n                    return null === M.remToPx && (M.remToPx = parseFloat(A.getPropertyValue(c.body, 'fontSize')) || 16), null === M.vwToPx && (M.vwToPx = parseFloat(b.innerWidth) / 100, M.vhToPx = parseFloat(b.innerHeight) / 100), g.remToPx = M.remToPx, g.vwToPx = M.vwToPx, g.vhToPx = M.vhToPx, y.debug >= 1 && console.log('Unit ratios: ' + JSON.stringify(g), a), g;\n                  }();\n\n                  var S = /margin|padding|left|right|width|text|word|letter/i.test(e) || /X$/.test(e) || 'x' === e ? 'x' : 'y';\n\n                  switch (v) {\n                    case '%':\n                      r *= 'x' === S ? h.percentToPxWidth : h.percentToPxHeight;\n                      break;\n\n                    case 'px':\n                      break;\n\n                    default:\n                      r *= h[v + 'ToPx'];\n                  }\n\n                  switch (t) {\n                    case '%':\n                      r *= 1 / ('x' === S ? h.percentToPxWidth : h.percentToPxHeight);\n                      break;\n\n                    case 'px':\n                      break;\n\n                    default:\n                      r *= 1 / h[t + 'ToPx'];\n                  }\n                }\n              }\n\n              switch (w) {\n                case '+':\n                  p = r + p;\n                  break;\n\n                case '-':\n                  p = r - p;\n                  break;\n\n                case '*':\n                  p *= r;\n                  break;\n\n                case '/':\n                  p = r / p;\n              }\n\n              j[e] = {\n                rootPropertyValue: m,\n                startValue: r,\n                currentValue: r,\n                endValue: p,\n                unitType: t,\n                easing: q\n              }, g && (j[e].pattern = g), y.debug && console.log('tweensContainer (' + e + '): ' + JSON.stringify(j[e]), a);\n            };\n\n            for (var I in s) {\n              if (s.hasOwnProperty(I)) {\n                var J = A.Names.camelCase(I),\n                    K = function (b, c) {\n                  var d, f, g;\n                  return u.isFunction(b) && (b = b.call(a, e, C)), u.isArray(b) ? (d = b[0], !u.isArray(b[1]) && /^[\\d-]/.test(b[1]) || u.isFunction(b[1]) || A.RegEx.isHex.test(b[1]) ? g = b[1] : u.isString(b[1]) && !A.RegEx.isHex.test(b[1]) && y.Easings[b[1]] || u.isArray(b[1]) ? (f = c ? b[1] : l(b[1], i.duration), g = b[2]) : g = b[1] || b[2]) : d = b, c || (f = f || i.easing), u.isFunction(d) && (d = d.call(a, e, C)), u.isFunction(g) && (g = g.call(a, e, C)), [d || 0, f, g];\n                }(s[I]);\n\n                if (t(A.Lists.colors, J)) {\n                  var L = K[0],\n                      O = K[1],\n                      P = K[2];\n\n                  if (A.RegEx.isHex.test(L)) {\n                    for (var Q = ['Red', 'Green', 'Blue'], R = A.Values.hexToRgb(L), S = P ? A.Values.hexToRgb(P) : d, T = 0; T < Q.length; T++) {\n                      var U = [R[T]];\n                      O && U.push(O), S !== d && U.push(S[T]), H(J + Q[T], U);\n                    }\n\n                    continue;\n                  }\n                }\n\n                H(J, K);\n              }\n            }\n\n            j.element = a;\n          }\n\n          j.element && (A.Values.addClass(a, 'velocity-animating'), N.push(j), k = g(a), k && ('' === i.queue && (k.tweensContainer = j, k.opts = i), k.isAnimating = !0), D === C - 1 ? (y.State.calls.push([N, r, i, null, z.resolver, null, 0]), !1 === y.State.isTicking && (y.State.isTicking = !0, m())) : D++);\n        }\n\n        var h,\n            i = o.extend({}, y.defaults, v),\n            j = {};\n\n        switch (g(a) === d && y.init(a), parseFloat(i.delay) && !1 !== i.queue && o.queue(a, i.queue, function (b, c) {\n          if (!0 === c) {\n            return !0;\n          }\n\n          y.velocityQueueEntryFlag = !0;\n          var d = y.State.delayedElements.count++;\n          y.State.delayedElements[d] = a;\n\n          var e = function (a) {\n            return function () {\n              y.State.delayedElements[a] = !1, b();\n            };\n          }(d);\n\n          g(a).delayBegin = new Date().getTime(), g(a).delay = parseFloat(i.delay), g(a).delayTimer = {\n            setTimeout: setTimeout(b, parseFloat(i.delay)),\n            next: e\n          };\n        }), i.duration.toString().toLowerCase()) {\n          case 'fast':\n            i.duration = 200;\n            break;\n\n          case 'normal':\n            i.duration = w;\n            break;\n\n          case 'slow':\n            i.duration = 600;\n            break;\n\n          default:\n            i.duration = parseFloat(i.duration) || 1;\n        }\n\n        if (!1 !== y.mock && (!0 === y.mock ? i.duration = i.delay = 1 : (i.duration *= parseFloat(y.mock) || 1, i.delay *= parseFloat(y.mock) || 1)), i.easing = l(i.easing, i.duration), i.begin && !u.isFunction(i.begin) && (i.begin = null), i.progress && !u.isFunction(i.progress) && (i.progress = null), i.complete && !u.isFunction(i.complete) && (i.complete = null), i.display !== d && null !== i.display && (i.display = i.display.toString().toLowerCase(), 'auto' === i.display && (i.display = y.CSS.Values.getDisplayType(a))), i.visibility !== d && null !== i.visibility && (i.visibility = i.visibility.toString().toLowerCase()), i.mobileHA = i.mobileHA && y.State.isMobile && !y.State.isGingerbread, !1 === i.queue) {\n          if (i.delay) {\n            var k = y.State.delayedElements.count++;\n            y.State.delayedElements[k] = a;\n\n            var n = function (a) {\n              return function () {\n                y.State.delayedElements[a] = !1, f();\n              };\n            }(k);\n\n            g(a).delayBegin = new Date().getTime(), g(a).delay = parseFloat(i.delay), g(a).delayTimer = {\n              setTimeout: setTimeout(f, parseFloat(i.delay)),\n              next: n\n            };\n          } else {\n            f();\n          }\n        } else {\n          o.queue(a, i.queue, function (a, b) {\n            if (!0 === b) {\n              return z.promise && z.resolver(r), !0;\n            }\n\n            y.velocityQueueEntryFlag = !0, f(a);\n          });\n        }\n\n        '' !== i.queue && 'fx' !== i.queue || 'inprogress' === o.queue(a)[0] || o.dequeue(a);\n      }\n\n      var j,\n          k,\n          p,\n          q,\n          r,\n          s,\n          v,\n          x = arguments[0] && (arguments[0].p || o.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || u.isString(arguments[0].properties));\n      u.isWrapped(this) ? (k = !1, q = 0, r = this, p = this) : (k = !0, q = 1, r = x ? arguments[0].elements || arguments[0].e : arguments[0]);\n      var z = {\n        promise: null,\n        resolver: null,\n        rejecter: null\n      };\n\n      if (k && y.Promise && (z.promise = new y.Promise(function (a, b) {\n        z.resolver = a, z.rejecter = b;\n      })), x ? (s = arguments[0].properties || arguments[0].p, v = arguments[0].options || arguments[0].o) : (s = arguments[q], v = arguments[q + 1]), !(r = f(r))) {\n        return void (z.promise && (s && v && !1 === v.promiseRejectEmpty ? z.resolver() : z.rejecter()));\n      }\n\n      var C = r.length,\n          D = 0;\n\n      if (!/^(stop|finish|finishAll|pause|resume)$/i.test(s) && !o.isPlainObject(v)) {\n        var E = q + 1;\n        v = {};\n\n        for (var F = E; F < arguments.length; F++) {\n          u.isArray(arguments[F]) || !/^(fast|normal|slow)$/i.test(arguments[F]) && !/^\\d/.test(arguments[F]) ? u.isString(arguments[F]) || u.isArray(arguments[F]) ? v.easing = arguments[F] : u.isFunction(arguments[F]) && (v.complete = arguments[F]) : v.duration = arguments[F];\n        }\n      }\n\n      var G;\n\n      switch (s) {\n        case 'scroll':\n          G = 'scroll';\n          break;\n\n        case 'reverse':\n          G = 'reverse';\n          break;\n\n        case 'pause':\n          var H = new Date().getTime();\n          return o.each(r, function (a, b) {\n            h(b, H);\n          }), o.each(y.State.calls, function (a, b) {\n            var c = !1;\n            b && o.each(b[1], function (a, e) {\n              var f = v === d ? '' : v;\n              return !0 !== f && b[2].queue !== f && (v !== d || !1 !== b[2].queue) || (o.each(r, function (a, d) {\n                if (d === e) {\n                  return b[5] = {\n                    resume: !1\n                  }, c = !0, !1;\n                }\n              }), !c && void 0);\n            });\n          }), a();\n\n        case 'resume':\n          return o.each(r, function (a, b) {\n            i(b, H);\n          }), o.each(y.State.calls, function (a, b) {\n            var c = !1;\n            b && o.each(b[1], function (a, e) {\n              var f = v === d ? '' : v;\n              return !0 !== f && b[2].queue !== f && (v !== d || !1 !== b[2].queue) || !b[5] || (o.each(r, function (a, d) {\n                if (d === e) {\n                  return b[5].resume = !0, c = !0, !1;\n                }\n              }), !c && void 0);\n            });\n          }), a();\n\n        case 'finish':\n        case 'finishAll':\n        case 'stop':\n          o.each(r, function (a, b) {\n            g(b) && g(b).delayTimer && (clearTimeout(g(b).delayTimer.setTimeout), g(b).delayTimer.next && g(b).delayTimer.next(), delete g(b).delayTimer), 'finishAll' !== s || !0 !== v && !u.isString(v) || (o.each(o.queue(b, u.isString(v) ? v : ''), function (a, b) {\n              u.isFunction(b) && b();\n            }), o.queue(b, u.isString(v) ? v : '', []));\n          });\n          var I = [];\n          return o.each(y.State.calls, function (a, b) {\n            b && o.each(b[1], function (c, e) {\n              var f = v === d ? '' : v;\n\n              if (!0 !== f && b[2].queue !== f && (v !== d || !1 !== b[2].queue)) {\n                return !0;\n              }\n\n              o.each(r, function (c, d) {\n                if (d === e) {\n                  if ((!0 === v || u.isString(v)) && (o.each(o.queue(d, u.isString(v) ? v : ''), function (a, b) {\n                    u.isFunction(b) && b(null, !0);\n                  }), o.queue(d, u.isString(v) ? v : '', [])), 'stop' === s) {\n                    var h = g(d);\n                    h && h.tweensContainer && !1 !== f && o.each(h.tweensContainer, function (a, b) {\n                      b.endValue = b.currentValue;\n                    }), I.push(a);\n                  } else {\n                    'finish' !== s && 'finishAll' !== s || (b[2].duration = 1);\n                  }\n                }\n              });\n            });\n          }), 'stop' === s && (o.each(I, function (a, b) {\n            n(b, !0);\n          }), z.promise && z.resolver(r)), a();\n\n        default:\n          if (!o.isPlainObject(s) || u.isEmptyObject(s)) {\n            if (u.isString(s) && y.Redirects[s]) {\n              j = o.extend({}, v);\n              var J = j.duration,\n                  K = j.delay || 0;\n              return !0 === j.backwards && (r = o.extend(!0, [], r).reverse()), o.each(r, function (a, b) {\n                parseFloat(j.stagger) ? j.delay = K + parseFloat(j.stagger) * a : u.isFunction(j.stagger) && (j.delay = K + j.stagger.call(b, a, C)), j.drag && (j.duration = parseFloat(J) || (/^(callout|transition)/.test(s) ? 1e3 : w), j.duration = Math.max(j.duration * (j.backwards ? 1 - a / C : (a + 1) / C), .75 * j.duration, 200)), y.Redirects[s].call(b, b, j || {}, a, C, r, z.promise ? z : d);\n              }), a();\n            }\n\n            var L = 'Velocity: First argument (' + s + ') was not a property map, a known action, or a registered redirect. Aborting.';\n            return z.promise ? z.rejecter(new Error(L)) : b.console && console.log(L), a();\n          }\n\n          G = 'start';\n      }\n\n      var M = {\n        lastParent: null,\n        lastPosition: null,\n        lastFontSize: null,\n        lastPercentToPxWidth: null,\n        lastPercentToPxHeight: null,\n        lastEmToPx: null,\n        remToPx: null,\n        vwToPx: null,\n        vhToPx: null\n      },\n          N = [];\n      o.each(r, function (a, b) {\n        u.isNode(b) && e(b, a);\n      }), j = o.extend({}, y.defaults, v), j.loop = parseInt(j.loop, 10);\n      var O = 2 * j.loop - 1;\n\n      if (j.loop) {\n        for (var P = 0; P < O; P++) {\n          var Q = {\n            delay: j.delay,\n            progress: j.progress\n          };\n          P === O - 1 && (Q.display = j.display, Q.visibility = j.visibility, Q.complete = j.complete), B(r, 'reverse', Q);\n        }\n      }\n\n      return a();\n    };\n\n    y = o.extend(B, y), y.animate = B;\n    var C = b.requestAnimationFrame || q;\n\n    if (!y.State.isMobile && c.hidden !== d) {\n      var D = function () {\n        c.hidden ? (C = function (a) {\n          return setTimeout(function () {\n            a(!0);\n          }, 16);\n        }, m()) : C = b.requestAnimationFrame || q;\n      };\n\n      D(), c.addEventListener('visibilitychange', D);\n    }\n\n    return a.Velocity = y, a !== b && (a.fn.velocity = B, a.fn.velocity.defaults = y.defaults), o.each(['Down', 'Up'], function (a, b) {\n      y.Redirects['slide' + b] = function (a, c, e, f, g, h) {\n        var i = o.extend({}, c),\n            j = i.begin,\n            k = i.complete,\n            l = {},\n            m = {\n          height: '',\n          marginTop: '',\n          marginBottom: '',\n          paddingTop: '',\n          paddingBottom: ''\n        };\n        i.display === d && (i.display = 'Down' === b ? 'inline' === y.CSS.Values.getDisplayType(a) ? 'inline-block' : 'block' : 'none'), i.begin = function () {\n          0 === e && j && j.call(g, g);\n\n          for (var c in m) {\n            if (m.hasOwnProperty(c)) {\n              l[c] = a.style[c];\n              var d = A.getPropertyValue(a, c);\n              m[c] = 'Down' === b ? [d, 0] : [0, d];\n            }\n          }\n\n          l.overflow = a.style.overflow, a.style.overflow = 'hidden';\n        }, i.complete = function () {\n          for (var b in l) {\n            l.hasOwnProperty(b) && (a.style[b] = l[b]);\n          }\n\n          e === f - 1 && (k && k.call(g, g), h && h.resolver(g));\n        }, y(a, m, i);\n      };\n    }), o.each(['In', 'Out'], function (a, b) {\n      y.Redirects['fade' + b] = function (a, c, e, f, g, h) {\n        var i = o.extend({}, c),\n            j = i.complete,\n            k = {\n          opacity: 'In' === b ? 1 : 0\n        };\n        0 !== e && (i.begin = null), i.complete = e !== f - 1 ? null : function () {\n          j && j.call(g, g), h && h.resolver(g);\n        }, i.display === d && (i.display = 'In' === b ? 'auto' : 'none'), y(this, k, i);\n      };\n    }), y;\n  }(window.jQuery || window.Zepto || window, window, window ? window.document : undefined);\n});\n/* ! Hammer.JS - v2.0.8 - 2016-04-23\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n\n!function (a, b, c, d) {\n  'use strict';\n\n  function e(a, b, c) {\n    return setTimeout(j(a, c), b);\n  }\n\n  function f(a, b, c) {\n    return Array.isArray(a) ? (g(a, c[b], c), !0) : !1;\n  }\n\n  function g(a, b, c) {\n    var e;\n\n    if (a) {\n      if (a.forEach) {\n        a.forEach(b, c);\n      } else if (a.length !== d) {\n        for (e = 0; e < a.length;) {\n          b.call(c, a[e], e, a), e++;\n        }\n      } else {\n        for (e in a) {\n          a.hasOwnProperty(e) && b.call(c, a[e], e, a);\n        }\n      }\n    }\n  }\n\n  function h(b, c, d) {\n    var e = 'DEPRECATED METHOD: ' + c + '\\n' + d + ' AT \\n';\n    return function () {\n      var c = new Error('get-stack-trace'),\n          d = c && c.stack ? c.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace',\n          f = a.console && (a.console.warn || a.console.log);\n      return f && f.call(a.console, e, d), b.apply(this, arguments);\n    };\n  }\n\n  function i(a, b, c) {\n    var d,\n        e = b.prototype;\n    d = a.prototype = Object.create(e), d.constructor = a, d._super = e, c && la(d, c);\n  }\n\n  function j(a, b) {\n    return function () {\n      return a.apply(b, arguments);\n    };\n  }\n\n  function k(a, b) {\n    return typeof a == oa ? a.apply(b ? b[0] || d : d, b) : a;\n  }\n\n  function l(a, b) {\n    return a === d ? b : a;\n  }\n\n  function m(a, b, c) {\n    g(q(b), function (b) {\n      a.addEventListener(b, c, !1);\n    });\n  }\n\n  function n(a, b, c) {\n    g(q(b), function (b) {\n      a.removeEventListener(b, c, !1);\n    });\n  }\n\n  function o(a, b) {\n    for (; a;) {\n      if (a == b) {\n        return !0;\n      }\n\n      a = a.parentNode;\n    }\n\n    return !1;\n  }\n\n  function p(a, b) {\n    return a.indexOf(b) > -1;\n  }\n\n  function q(a) {\n    return a.trim().split(/\\s+/g);\n  }\n\n  function r(a, b, c) {\n    if (a.indexOf && !c) {\n      return a.indexOf(b);\n    }\n\n    for (var d = 0; d < a.length;) {\n      if (c && a[d][c] == b || !c && a[d] === b) {\n        return d;\n      }\n\n      d++;\n    }\n\n    return -1;\n  }\n\n  function s(a) {\n    return Array.prototype.slice.call(a, 0);\n  }\n\n  function t(a, b, c) {\n    for (var d = [], e = [], f = 0; f < a.length;) {\n      var g = b ? a[f][b] : a[f];\n      r(e, g) < 0 && d.push(a[f]), e[f] = g, f++;\n    }\n\n    return c && (d = b ? d.sort(function (a, c) {\n      return a[b] > c[b];\n    }) : d.sort()), d;\n  }\n\n  function u(a, b) {\n    for (var c, e, f = b[0].toUpperCase() + b.slice(1), g = 0; g < ma.length;) {\n      if (c = ma[g], e = c ? c + f : b, e in a) {\n        return e;\n      }\n\n      g++;\n    }\n\n    return d;\n  }\n\n  function v() {\n    return ua++;\n  }\n\n  function w(b) {\n    var c = b.ownerDocument || b;\n    return c.defaultView || c.parentWindow || a;\n  }\n\n  function x(a, b) {\n    var c = this;\n    this.manager = a, this.callback = b, this.element = a.element, this.target = a.options.inputTarget, this.domHandler = function (b) {\n      k(a.options.enable, [a]) && c.handler(b);\n    }, this.init();\n  }\n\n  function y(a) {\n    var b,\n        c = a.options.inputClass;\n    return new (b = c ? c : xa ? M : ya ? P : wa ? R : L)(a, z);\n  }\n\n  function z(a, b, c) {\n    var d = c.pointers.length,\n        e = c.changedPointers.length,\n        f = b & Ea && d - e === 0,\n        g = b & (Ga | Ha) && d - e === 0;\n    c.isFirst = !!f, c.isFinal = !!g, f && (a.session = {}), c.eventType = b, A(a, c), a.emit('hammer.input', c), a.recognize(c), a.session.prevInput = c;\n  }\n\n  function A(a, b) {\n    var c = a.session,\n        d = b.pointers,\n        e = d.length;\n    c.firstInput || (c.firstInput = D(b)), e > 1 && !c.firstMultiple ? c.firstMultiple = D(b) : 1 === e && (c.firstMultiple = !1);\n    var f = c.firstInput,\n        g = c.firstMultiple,\n        h = g ? g.center : f.center,\n        i = b.center = E(d);\n    b.timeStamp = ra(), b.deltaTime = b.timeStamp - f.timeStamp, b.angle = I(h, i), b.distance = H(h, i), B(c, b), b.offsetDirection = G(b.deltaX, b.deltaY);\n    var j = F(b.deltaTime, b.deltaX, b.deltaY);\n    b.overallVelocityX = j.x, b.overallVelocityY = j.y, b.overallVelocity = qa(j.x) > qa(j.y) ? j.x : j.y, b.scale = g ? K(g.pointers, d) : 1, b.rotation = g ? J(g.pointers, d) : 0, b.maxPointers = c.prevInput ? b.pointers.length > c.prevInput.maxPointers ? b.pointers.length : c.prevInput.maxPointers : b.pointers.length, C(c, b);\n    var k = a.element;\n    o(b.srcEvent.target, k) && (k = b.srcEvent.target), b.target = k;\n  }\n\n  function B(a, b) {\n    var c = b.center,\n        d = a.offsetDelta || {},\n        e = a.prevDelta || {},\n        f = a.prevInput || {};\n    b.eventType !== Ea && f.eventType !== Ga || (e = a.prevDelta = {\n      x: f.deltaX || 0,\n      y: f.deltaY || 0\n    }, d = a.offsetDelta = {\n      x: c.x,\n      y: c.y\n    }), b.deltaX = e.x + (c.x - d.x), b.deltaY = e.y + (c.y - d.y);\n  }\n\n  function C(a, b) {\n    var c,\n        e,\n        f,\n        g,\n        h = a.lastInterval || b,\n        i = b.timeStamp - h.timeStamp;\n\n    if (b.eventType != Ha && (i > Da || h.velocity === d)) {\n      var j = b.deltaX - h.deltaX,\n          k = b.deltaY - h.deltaY,\n          l = F(i, j, k);\n      e = l.x, f = l.y, c = qa(l.x) > qa(l.y) ? l.x : l.y, g = G(j, k), a.lastInterval = b;\n    } else {\n      c = h.velocity, e = h.velocityX, f = h.velocityY, g = h.direction;\n    }\n\n    b.velocity = c, b.velocityX = e, b.velocityY = f, b.direction = g;\n  }\n\n  function D(a) {\n    for (var b = [], c = 0; c < a.pointers.length;) {\n      b[c] = {\n        clientX: pa(a.pointers[c].clientX),\n        clientY: pa(a.pointers[c].clientY)\n      }, c++;\n    }\n\n    return {\n      timeStamp: ra(),\n      pointers: b,\n      center: E(b),\n      deltaX: a.deltaX,\n      deltaY: a.deltaY\n    };\n  }\n\n  function E(a) {\n    var b = a.length;\n\n    if (1 === b) {\n      return {\n        x: pa(a[0].clientX),\n        y: pa(a[0].clientY)\n      };\n    }\n\n    for (var c = 0, d = 0, e = 0; b > e;) {\n      c += a[e].clientX, d += a[e].clientY, e++;\n    }\n\n    return {\n      x: pa(c / b),\n      y: pa(d / b)\n    };\n  }\n\n  function F(a, b, c) {\n    return {\n      x: b / a || 0,\n      y: c / a || 0\n    };\n  }\n\n  function G(a, b) {\n    return a === b ? Ia : qa(a) >= qa(b) ? 0 > a ? Ja : Ka : 0 > b ? La : Ma;\n  }\n\n  function H(a, b, c) {\n    c || (c = Qa);\n    var d = b[c[0]] - a[c[0]],\n        e = b[c[1]] - a[c[1]];\n    return Math.sqrt(d * d + e * e);\n  }\n\n  function I(a, b, c) {\n    c || (c = Qa);\n    var d = b[c[0]] - a[c[0]],\n        e = b[c[1]] - a[c[1]];\n    return 180 * Math.atan2(e, d) / Math.PI;\n  }\n\n  function J(a, b) {\n    return I(b[1], b[0], Ra) + I(a[1], a[0], Ra);\n  }\n\n  function K(a, b) {\n    return H(b[0], b[1], Ra) / H(a[0], a[1], Ra);\n  }\n\n  function L() {\n    this.evEl = Ta, this.evWin = Ua, this.pressed = !1, x.apply(this, arguments);\n  }\n\n  function M() {\n    this.evEl = Xa, this.evWin = Ya, x.apply(this, arguments), this.store = this.manager.session.pointerEvents = [];\n  }\n\n  function N() {\n    this.evTarget = $a, this.evWin = _a, this.started = !1, x.apply(this, arguments);\n  }\n\n  function O(a, b) {\n    var c = s(a.touches),\n        d = s(a.changedTouches);\n    return b & (Ga | Ha) && (c = t(c.concat(d), 'identifier', !0)), [c, d];\n  }\n\n  function P() {\n    this.evTarget = bb, this.targetIds = {}, x.apply(this, arguments);\n  }\n\n  function Q(a, b) {\n    var c = s(a.touches),\n        d = this.targetIds;\n\n    if (b & (Ea | Fa) && 1 === c.length) {\n      return d[c[0].identifier] = !0, [c, c];\n    }\n\n    var e,\n        f,\n        g = s(a.changedTouches),\n        h = [],\n        i = this.target;\n\n    if (f = c.filter(function (a) {\n      return o(a.target, i);\n    }), b === Ea) {\n      for (e = 0; e < f.length;) {\n        d[f[e].identifier] = !0, e++;\n      }\n    }\n\n    for (e = 0; e < g.length;) {\n      d[g[e].identifier] && h.push(g[e]), b & (Ga | Ha) && delete d[g[e].identifier], e++;\n    }\n\n    return h.length ? [t(f.concat(h), 'identifier', !0), h] : void 0;\n  }\n\n  function R() {\n    x.apply(this, arguments);\n    var a = j(this.handler, this);\n    this.touch = new P(this.manager, a), this.mouse = new L(this.manager, a), this.primaryTouch = null, this.lastTouches = [];\n  }\n\n  function S(a, b) {\n    a & Ea ? (this.primaryTouch = b.changedPointers[0].identifier, T.call(this, b)) : a & (Ga | Ha) && T.call(this, b);\n  }\n\n  function T(a) {\n    var b = a.changedPointers[0];\n\n    if (b.identifier === this.primaryTouch) {\n      var c = {\n        x: b.clientX,\n        y: b.clientY\n      };\n      this.lastTouches.push(c);\n\n      var d = this.lastTouches,\n          e = function () {\n        var a = d.indexOf(c);\n        a > -1 && d.splice(a, 1);\n      };\n\n      setTimeout(e, cb);\n    }\n  }\n\n  function U(a) {\n    for (var b = a.srcEvent.clientX, c = a.srcEvent.clientY, d = 0; d < this.lastTouches.length; d++) {\n      var e = this.lastTouches[d],\n          f = Math.abs(b - e.x),\n          g = Math.abs(c - e.y);\n\n      if (db >= f && db >= g) {\n        return !0;\n      }\n    }\n\n    return !1;\n  }\n\n  function V(a, b) {\n    this.manager = a, this.set(b);\n  }\n\n  function W(a) {\n    if (p(a, jb)) {\n      return jb;\n    }\n\n    var b = p(a, kb),\n        c = p(a, lb);\n    return b && c ? jb : b || c ? b ? kb : lb : p(a, ib) ? ib : hb;\n  }\n\n  function X() {\n    if (!fb) {\n      return !1;\n    }\n\n    var b = {},\n        c = a.CSS && a.CSS.supports;\n    return ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (d) {\n      b[d] = c ? a.CSS.supports('touch-action', d) : !0;\n    }), b;\n  }\n\n  function Y(a) {\n    this.options = la({}, this.defaults, a || {}), this.id = v(), this.manager = null, this.options.enable = l(this.options.enable, !0), this.state = nb, this.simultaneous = {}, this.requireFail = [];\n  }\n\n  function Z(a) {\n    return a & sb ? 'cancel' : a & qb ? 'end' : a & pb ? 'move' : a & ob ? 'start' : '';\n  }\n\n  function $(a) {\n    return a == Ma ? 'down' : a == La ? 'up' : a == Ja ? 'left' : a == Ka ? 'right' : '';\n  }\n\n  function _(a, b) {\n    var c = b.manager;\n    return c ? c.get(a) : a;\n  }\n\n  function aa() {\n    Y.apply(this, arguments);\n  }\n\n  function ba() {\n    aa.apply(this, arguments), this.pX = null, this.pY = null;\n  }\n\n  function ca() {\n    aa.apply(this, arguments);\n  }\n\n  function da() {\n    Y.apply(this, arguments), this._timer = null, this._input = null;\n  }\n\n  function ea() {\n    aa.apply(this, arguments);\n  }\n\n  function fa() {\n    aa.apply(this, arguments);\n  }\n\n  function ga() {\n    Y.apply(this, arguments), this.pTime = !1, this.pCenter = !1, this._timer = null, this._input = null, this.count = 0;\n  }\n\n  function ha(a, b) {\n    return b = b || {}, b.recognizers = l(b.recognizers, ha.defaults.preset), new ia(a, b);\n  }\n\n  function ia(a, b) {\n    this.options = la({}, ha.defaults, b || {}), this.options.inputTarget = this.options.inputTarget || a, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = a, this.input = y(this), this.touchAction = new V(this, this.options.touchAction), ja(this, !0), g(this.options.recognizers, function (a) {\n      var b = this.add(new a[0](a[1]));\n      a[2] && b.recognizeWith(a[2]), a[3] && b.requireFailure(a[3]);\n    }, this);\n  }\n\n  function ja(a, b) {\n    var c = a.element;\n\n    if (c.style) {\n      var d;\n      g(a.options.cssProps, function (e, f) {\n        d = u(c.style, f), b ? (a.oldCssProps[d] = c.style[d], c.style[d] = e) : c.style[d] = a.oldCssProps[d] || '';\n      }), b || (a.oldCssProps = {});\n    }\n  }\n\n  function ka(a, c) {\n    var d = b.createEvent('Event');\n    d.initEvent(a, !0, !0), d.gesture = c, c.target.dispatchEvent(d);\n  }\n\n  var la,\n      ma = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'],\n      na = b.createElement('div'),\n      oa = 'function',\n      pa = Math.round,\n      qa = Math.abs,\n      ra = Date.now;\n  la = 'function' != typeof Object.assign ? function (a) {\n    if (a === d || null === a) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    for (var b = Object(a), c = 1; c < arguments.length; c++) {\n      var e = arguments[c];\n\n      if (e !== d && null !== e) {\n        for (var f in e) {\n          e.hasOwnProperty(f) && (b[f] = e[f]);\n        }\n      }\n    }\n\n    return b;\n  } : Object.assign;\n  var sa = h(function (a, b, c) {\n    for (var e = Object.keys(b), f = 0; f < e.length;) {\n      (!c || c && a[e[f]] === d) && (a[e[f]] = b[e[f]]), f++;\n    }\n\n    return a;\n  }, 'extend', 'Use `assign`.'),\n      ta = h(function (a, b) {\n    return sa(a, b, !0);\n  }, 'merge', 'Use `assign`.'),\n      ua = 1,\n      va = /mobile|tablet|ip(ad|hone|od)|android/i,\n      wa = ('ontouchstart' in a),\n      xa = u(a, 'PointerEvent') !== d,\n      ya = wa && va.test(navigator.userAgent),\n      za = 'touch',\n      Aa = 'pen',\n      Ba = 'mouse',\n      Ca = 'kinect',\n      Da = 25,\n      Ea = 1,\n      Fa = 2,\n      Ga = 4,\n      Ha = 8,\n      Ia = 1,\n      Ja = 2,\n      Ka = 4,\n      La = 8,\n      Ma = 16,\n      Na = Ja | Ka,\n      Oa = La | Ma,\n      Pa = Na | Oa,\n      Qa = ['x', 'y'],\n      Ra = ['clientX', 'clientY'];\n  x.prototype = {\n    handler: function () {},\n    init: function () {\n      this.evEl && m(this.element, this.evEl, this.domHandler), this.evTarget && m(this.target, this.evTarget, this.domHandler), this.evWin && m(w(this.element), this.evWin, this.domHandler);\n    },\n    destroy: function () {\n      this.evEl && n(this.element, this.evEl, this.domHandler), this.evTarget && n(this.target, this.evTarget, this.domHandler), this.evWin && n(w(this.element), this.evWin, this.domHandler);\n    }\n  };\n  var Sa = {\n    mousedown: Ea,\n    mousemove: Fa,\n    mouseup: Ga\n  },\n      Ta = 'mousedown',\n      Ua = 'mousemove mouseup';\n  i(L, x, {\n    handler: function (a) {\n      var b = Sa[a.type];\n      b & Ea && 0 === a.button && (this.pressed = !0), b & Fa && 1 !== a.which && (b = Ga), this.pressed && (b & Ga && (this.pressed = !1), this.callback(this.manager, b, {\n        pointers: [a],\n        changedPointers: [a],\n        pointerType: Ba,\n        srcEvent: a\n      }));\n    }\n  });\n  var Va = {\n    pointerdown: Ea,\n    pointermove: Fa,\n    pointerup: Ga,\n    pointercancel: Ha,\n    pointerout: Ha\n  },\n      Wa = {\n    2: za,\n    3: Aa,\n    4: Ba,\n    5: Ca\n  },\n      Xa = 'pointerdown',\n      Ya = 'pointermove pointerup pointercancel';\n  a.MSPointerEvent && !a.PointerEvent && (Xa = 'MSPointerDown', Ya = 'MSPointerMove MSPointerUp MSPointerCancel'), i(M, x, {\n    handler: function (a) {\n      var b = this.store,\n          c = !1,\n          d = a.type.toLowerCase().replace('ms', ''),\n          e = Va[d],\n          f = Wa[a.pointerType] || a.pointerType,\n          g = f == za,\n          h = r(b, a.pointerId, 'pointerId');\n      e & Ea && (0 === a.button || g) ? 0 > h && (b.push(a), h = b.length - 1) : e & (Ga | Ha) && (c = !0), 0 > h || (b[h] = a, this.callback(this.manager, e, {\n        pointers: b,\n        changedPointers: [a],\n        pointerType: f,\n        srcEvent: a\n      }), c && b.splice(h, 1));\n    }\n  });\n  var Za = {\n    touchstart: Ea,\n    touchmove: Fa,\n    touchend: Ga,\n    touchcancel: Ha\n  },\n      $a = 'touchstart',\n      _a = 'touchstart touchmove touchend touchcancel';\n  i(N, x, {\n    handler: function (a) {\n      var b = Za[a.type];\n\n      if (b === Ea && (this.started = !0), this.started) {\n        var c = O.call(this, a, b);\n        b & (Ga | Ha) && c[0].length - c[1].length === 0 && (this.started = !1), this.callback(this.manager, b, {\n          pointers: c[0],\n          changedPointers: c[1],\n          pointerType: za,\n          srcEvent: a\n        });\n      }\n    }\n  });\n  var ab = {\n    touchstart: Ea,\n    touchmove: Fa,\n    touchend: Ga,\n    touchcancel: Ha\n  },\n      bb = 'touchstart touchmove touchend touchcancel';\n  i(P, x, {\n    handler: function (a) {\n      var b = ab[a.type],\n          c = Q.call(this, a, b);\n      c && this.callback(this.manager, b, {\n        pointers: c[0],\n        changedPointers: c[1],\n        pointerType: za,\n        srcEvent: a\n      });\n    }\n  });\n  var cb = 2500,\n      db = 25;\n  i(R, x, {\n    handler: function (a, b, c) {\n      var d = c.pointerType == za,\n          e = c.pointerType == Ba;\n\n      if (!(e && c.sourceCapabilities && c.sourceCapabilities.firesTouchEvents)) {\n        if (d) {\n          S.call(this, b, c);\n        } else if (e && U.call(this, c)) {\n          return;\n        }\n\n        this.callback(a, b, c);\n      }\n    },\n    destroy: function () {\n      this.touch.destroy(), this.mouse.destroy();\n    }\n  });\n  var eb = u(na.style, 'touchAction'),\n      fb = eb !== d,\n      gb = 'compute',\n      hb = 'auto',\n      ib = 'manipulation',\n      jb = 'none',\n      kb = 'pan-x',\n      lb = 'pan-y',\n      mb = X();\n  V.prototype = {\n    set: function (a) {\n      a == gb && (a = this.compute()), fb && this.manager.element.style && mb[a] && (this.manager.element.style[eb] = a), this.actions = a.toLowerCase().trim();\n    },\n    update: function () {\n      this.set(this.manager.options.touchAction);\n    },\n    compute: function () {\n      var a = [];\n      return g(this.manager.recognizers, function (b) {\n        k(b.options.enable, [b]) && (a = a.concat(b.getTouchAction()));\n      }), W(a.join(' '));\n    },\n    preventDefaults: function (a) {\n      var b = a.srcEvent,\n          c = a.offsetDirection;\n\n      if (this.manager.session.prevented) {\n        return void b.preventDefault();\n      }\n\n      var d = this.actions,\n          e = p(d, jb) && !mb[jb],\n          f = p(d, lb) && !mb[lb],\n          g = p(d, kb) && !mb[kb];\n\n      if (e) {\n        var h = 1 === a.pointers.length,\n            i = a.distance < 2,\n            j = a.deltaTime < 250;\n\n        if (h && i && j) {\n          return;\n        }\n      }\n\n      return g && f ? void 0 : e || f && c & Na || g && c & Oa ? this.preventSrc(b) : void 0;\n    },\n    preventSrc: function (a) {\n      this.manager.session.prevented = !0, a.preventDefault();\n    }\n  };\n  var nb = 1,\n      ob = 2,\n      pb = 4,\n      qb = 8,\n      rb = qb,\n      sb = 16,\n      tb = 32;\n  Y.prototype = {\n    defaults: {},\n    set: function (a) {\n      return la(this.options, a), this.manager && this.manager.touchAction.update(), this;\n    },\n    recognizeWith: function (a) {\n      if (f(a, 'recognizeWith', this)) {\n        return this;\n      }\n\n      var b = this.simultaneous;\n      return a = _(a, this), b[a.id] || (b[a.id] = a, a.recognizeWith(this)), this;\n    },\n    dropRecognizeWith: function (a) {\n      return f(a, 'dropRecognizeWith', this) ? this : (a = _(a, this), delete this.simultaneous[a.id], this);\n    },\n    requireFailure: function (a) {\n      if (f(a, 'requireFailure', this)) {\n        return this;\n      }\n\n      var b = this.requireFail;\n      return a = _(a, this), -1 === r(b, a) && (b.push(a), a.requireFailure(this)), this;\n    },\n    dropRequireFailure: function (a) {\n      if (f(a, 'dropRequireFailure', this)) {\n        return this;\n      }\n\n      a = _(a, this);\n      var b = r(this.requireFail, a);\n      return b > -1 && this.requireFail.splice(b, 1), this;\n    },\n    hasRequireFailures: function () {\n      return this.requireFail.length > 0;\n    },\n    canRecognizeWith: function (a) {\n      return !!this.simultaneous[a.id];\n    },\n    emit: function (a) {\n      function b(b) {\n        c.manager.emit(b, a);\n      }\n\n      var c = this,\n          d = this.state;\n      qb > d && b(c.options.event + Z(d)), b(c.options.event), a.additionalEvent && b(a.additionalEvent), d >= qb && b(c.options.event + Z(d));\n    },\n    tryEmit: function (a) {\n      return this.canEmit() ? this.emit(a) : void (this.state = tb);\n    },\n    canEmit: function () {\n      for (var a = 0; a < this.requireFail.length;) {\n        if (!(this.requireFail[a].state & (tb | nb))) {\n          return !1;\n        }\n\n        a++;\n      }\n\n      return !0;\n    },\n    recognize: function (a) {\n      var b = la({}, a);\n      return k(this.options.enable, [this, b]) ? (this.state & (rb | sb | tb) && (this.state = nb), this.state = this.process(b), void (this.state & (ob | pb | qb | sb) && this.tryEmit(b))) : (this.reset(), void (this.state = tb));\n    },\n    process: function (a) {},\n    getTouchAction: function () {},\n    reset: function () {}\n  }, i(aa, Y, {\n    defaults: {\n      pointers: 1\n    },\n    attrTest: function (a) {\n      var b = this.options.pointers;\n      return 0 === b || a.pointers.length === b;\n    },\n    process: function (a) {\n      var b = this.state,\n          c = a.eventType,\n          d = b & (ob | pb),\n          e = this.attrTest(a);\n      return d && (c & Ha || !e) ? b | sb : d || e ? c & Ga ? b | qb : b & ob ? b | pb : ob : tb;\n    }\n  }), i(ba, aa, {\n    defaults: {\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: Pa\n    },\n    getTouchAction: function () {\n      var a = this.options.direction,\n          b = [];\n      return a & Na && b.push(lb), a & Oa && b.push(kb), b;\n    },\n    directionTest: function (a) {\n      var b = this.options,\n          c = !0,\n          d = a.distance,\n          e = a.direction,\n          f = a.deltaX,\n          g = a.deltaY;\n      return e & b.direction || (b.direction & Na ? (e = 0 === f ? Ia : 0 > f ? Ja : Ka, c = f != this.pX, d = Math.abs(a.deltaX)) : (e = 0 === g ? Ia : 0 > g ? La : Ma, c = g != this.pY, d = Math.abs(a.deltaY))), a.direction = e, c && d > b.threshold && e & b.direction;\n    },\n    attrTest: function (a) {\n      return aa.prototype.attrTest.call(this, a) && (this.state & ob || !(this.state & ob) && this.directionTest(a));\n    },\n    emit: function (a) {\n      this.pX = a.deltaX, this.pY = a.deltaY;\n      var b = $(a.direction);\n      b && (a.additionalEvent = this.options.event + b), this._super.emit.call(this, a);\n    }\n  }), i(ca, aa, {\n    defaults: {\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function () {\n      return [jb];\n    },\n    attrTest: function (a) {\n      return this._super.attrTest.call(this, a) && (Math.abs(a.scale - 1) > this.options.threshold || this.state & ob);\n    },\n    emit: function (a) {\n      if (1 !== a.scale) {\n        var b = a.scale < 1 ? 'in' : 'out';\n        a.additionalEvent = this.options.event + b;\n      }\n\n      this._super.emit.call(this, a);\n    }\n  }), i(da, Y, {\n    defaults: {\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      threshold: 9\n    },\n    getTouchAction: function () {\n      return [hb];\n    },\n    process: function (a) {\n      var b = this.options,\n          c = a.pointers.length === b.pointers,\n          d = a.distance < b.threshold,\n          f = a.deltaTime > b.time;\n\n      if (this._input = a, !d || !c || a.eventType & (Ga | Ha) && !f) {\n        this.reset();\n      } else if (a.eventType & Ea) {\n        this.reset(), this._timer = e(function () {\n          this.state = rb, this.tryEmit();\n        }, b.time, this);\n      } else if (a.eventType & Ga) {\n        return rb;\n      }\n\n      return tb;\n    },\n    reset: function () {\n      clearTimeout(this._timer);\n    },\n    emit: function (a) {\n      this.state === rb && (a && a.eventType & Ga ? this.manager.emit(this.options.event + 'up', a) : (this._input.timeStamp = ra(), this.manager.emit(this.options.event, this._input)));\n    }\n  }), i(ea, aa, {\n    defaults: {\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function () {\n      return [jb];\n    },\n    attrTest: function (a) {\n      return this._super.attrTest.call(this, a) && (Math.abs(a.rotation) > this.options.threshold || this.state & ob);\n    }\n  }), i(fa, aa, {\n    defaults: {\n      event: 'swipe',\n      threshold: 10,\n      velocity: .3,\n      direction: Na | Oa,\n      pointers: 1\n    },\n    getTouchAction: function () {\n      return ba.prototype.getTouchAction.call(this);\n    },\n    attrTest: function (a) {\n      var b,\n          c = this.options.direction;\n      return c & (Na | Oa) ? b = a.overallVelocity : c & Na ? b = a.overallVelocityX : c & Oa && (b = a.overallVelocityY), this._super.attrTest.call(this, a) && c & a.offsetDirection && a.distance > this.options.threshold && a.maxPointers == this.options.pointers && qa(b) > this.options.velocity && a.eventType & Ga;\n    },\n    emit: function (a) {\n      var b = $(a.offsetDirection);\n      b && this.manager.emit(this.options.event + b, a), this.manager.emit(this.options.event, a);\n    }\n  }), i(ga, Y, {\n    defaults: {\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      time: 250,\n      threshold: 9,\n      posThreshold: 10\n    },\n    getTouchAction: function () {\n      return [ib];\n    },\n    process: function (a) {\n      var b = this.options,\n          c = a.pointers.length === b.pointers,\n          d = a.distance < b.threshold,\n          f = a.deltaTime < b.time;\n\n      if (this.reset(), a.eventType & Ea && 0 === this.count) {\n        return this.failTimeout();\n      }\n\n      if (d && f && c) {\n        if (a.eventType != Ga) {\n          return this.failTimeout();\n        }\n\n        var g = this.pTime ? a.timeStamp - this.pTime < b.interval : !0,\n            h = !this.pCenter || H(this.pCenter, a.center) < b.posThreshold;\n        this.pTime = a.timeStamp, this.pCenter = a.center, h && g ? this.count += 1 : this.count = 1, this._input = a;\n        var i = this.count % b.taps;\n\n        if (0 === i) {\n          return this.hasRequireFailures() ? (this._timer = e(function () {\n            this.state = rb, this.tryEmit();\n          }, b.interval, this), ob) : rb;\n        }\n      }\n\n      return tb;\n    },\n    failTimeout: function () {\n      return this._timer = e(function () {\n        this.state = tb;\n      }, this.options.interval, this), tb;\n    },\n    reset: function () {\n      clearTimeout(this._timer);\n    },\n    emit: function () {\n      this.state == rb && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));\n    }\n  }), ha.VERSION = '2.0.8', ha.defaults = {\n    domEvents: !1,\n    touchAction: gb,\n    enable: !0,\n    inputTarget: null,\n    inputClass: null,\n    preset: [[ea, {\n      enable: !1\n    }], [ca, {\n      enable: !1\n    }, ['rotate']], [fa, {\n      direction: Na\n    }], [ba, {\n      direction: Na\n    }, ['swipe']], [ga], [ga, {\n      event: 'doubletap',\n      taps: 2\n    }, ['tap']], [da]],\n    cssProps: {\n      userSelect: 'none',\n      touchSelect: 'none',\n      touchCallout: 'none',\n      contentZooming: 'none',\n      userDrag: 'none',\n      tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n  };\n  var ub = 1,\n      vb = 2;\n  ia.prototype = {\n    set: function (a) {\n      return la(this.options, a), a.touchAction && this.touchAction.update(), a.inputTarget && (this.input.destroy(), this.input.target = a.inputTarget, this.input.init()), this;\n    },\n    stop: function (a) {\n      this.session.stopped = a ? vb : ub;\n    },\n    recognize: function (a) {\n      var b = this.session;\n\n      if (!b.stopped) {\n        this.touchAction.preventDefaults(a);\n        var c,\n            d = this.recognizers,\n            e = b.curRecognizer;\n        (!e || e && e.state & rb) && (e = b.curRecognizer = null);\n\n        for (var f = 0; f < d.length;) {\n          c = d[f], b.stopped === vb || e && c != e && !c.canRecognizeWith(e) ? c.reset() : c.recognize(a), !e && c.state & (ob | pb | qb) && (e = b.curRecognizer = c), f++;\n        }\n      }\n    },\n    get: function (a) {\n      if (a instanceof Y) {\n        return a;\n      }\n\n      for (var b = this.recognizers, c = 0; c < b.length; c++) {\n        if (b[c].options.event == a) {\n          return b[c];\n        }\n      }\n\n      return null;\n    },\n    add: function (a) {\n      if (f(a, 'add', this)) {\n        return this;\n      }\n\n      var b = this.get(a.options.event);\n      return b && this.remove(b), this.recognizers.push(a), a.manager = this, this.touchAction.update(), a;\n    },\n    remove: function (a) {\n      if (f(a, 'remove', this)) {\n        return this;\n      }\n\n      if (a = this.get(a)) {\n        var b = this.recognizers,\n            c = r(b, a);\n        -1 !== c && (b.splice(c, 1), this.touchAction.update());\n      }\n\n      return this;\n    },\n    on: function (a, b) {\n      if (a !== d && b !== d) {\n        var c = this.handlers;\n        return g(q(a), function (a) {\n          c[a] = c[a] || [], c[a].push(b);\n        }), this;\n      }\n    },\n    off: function (a, b) {\n      if (a !== d) {\n        var c = this.handlers;\n        return g(q(a), function (a) {\n          b ? c[a] && c[a].splice(r(c[a], b), 1) : delete c[a];\n        }), this;\n      }\n    },\n    emit: function (a, b) {\n      this.options.domEvents && ka(a, b);\n      var c = this.handlers[a] && this.handlers[a].slice();\n\n      if (c && c.length) {\n        b.type = a, b.preventDefault = function () {\n          b.srcEvent.preventDefault();\n        };\n\n        for (var d = 0; d < c.length;) {\n          c[d](b), d++;\n        }\n      }\n    },\n    destroy: function () {\n      this.element && ja(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null;\n    }\n  }, la(ha, {\n    INPUT_START: Ea,\n    INPUT_MOVE: Fa,\n    INPUT_END: Ga,\n    INPUT_CANCEL: Ha,\n    STATE_POSSIBLE: nb,\n    STATE_BEGAN: ob,\n    STATE_CHANGED: pb,\n    STATE_ENDED: qb,\n    STATE_RECOGNIZED: rb,\n    STATE_CANCELLED: sb,\n    STATE_FAILED: tb,\n    DIRECTION_NONE: Ia,\n    DIRECTION_LEFT: Ja,\n    DIRECTION_RIGHT: Ka,\n    DIRECTION_UP: La,\n    DIRECTION_DOWN: Ma,\n    DIRECTION_HORIZONTAL: Na,\n    DIRECTION_VERTICAL: Oa,\n    DIRECTION_ALL: Pa,\n    Manager: ia,\n    Input: x,\n    TouchAction: V,\n    TouchInput: P,\n    MouseInput: L,\n    PointerEventInput: M,\n    TouchMouseInput: R,\n    SingleTouchInput: N,\n    Recognizer: Y,\n    AttrRecognizer: aa,\n    Tap: ga,\n    Pan: ba,\n    Swipe: fa,\n    Pinch: ca,\n    Rotate: ea,\n    Press: da,\n    on: m,\n    off: n,\n    each: g,\n    merge: ta,\n    extend: sa,\n    assign: la,\n    inherit: i,\n    bindFn: j,\n    prefixed: u\n  });\n  var wb = 'undefined' != typeof a ? a : 'undefined' != typeof self ? self : {};\n  wb.Hammer = ha,  true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return ha;\n  }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, document, 'Hammer'); // # sourceMappingURL=hammer.min.js.map\n\n(function (factory) {\n  // Commented out the if/else-if/else for our webpack build since these dependencies are right here in the file\n  // And do not need to be loaded as external dependencies\n  //    If ( typeof define === 'function' && define.amd ) {\n  //        Define( [ 'jquery', 'hammerjs' ], factory );\n  //    }\n  //    Else if ( typeof exports === 'object' ) {\n  //        Factory( require( 'jquery' ), require( 'hammerjs' ) );\n  //    }\n  //    Else {\n  //        Factory( jQuery, Hammer );\n  //    }\n  // Load these two dependencies from their declaration in this file\n  factory(jQuery, Hammer);\n})(function ($, Hammer) {\n  function hammerify(el, options) {\n    var $el = $(el);\n\n    if (!$el.data('hammer')) {\n      $el.data('hammer', new Hammer($el[0], options));\n    }\n  }\n\n  $.fn.hammer = function (options) {\n    return this.each(function () {\n      hammerify(this, options);\n    });\n  }; // Extend the emit method to also trigger jQuery events\n\n\n  Hammer.Manager.prototype.emit = function (originalEmit) {\n    return function (type, data) {\n      originalEmit.call(this, type, data);\n      $(this.element).trigger({\n        type: type,\n        gesture: data\n      });\n    };\n  }(Hammer.Manager.prototype.emit);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.materialize.slideshowdependancies.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.optionalScripts.ts":
/*!**************************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.optionalScripts.ts ***!
  \**************************************************************************************/
/*! exports provided: opCountDownTimer, opDynamicContent, opFacebookComments, opFontAwesomeIcons, opOntraForms, opOrderSummary, opPaymentInfo, opRecaptcha */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opCountDownTimer\", function() { return opCountDownTimer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opDynamicContent\", function() { return opDynamicContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opFacebookComments\", function() { return opFacebookComments; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opFontAwesomeIcons\", function() { return opFontAwesomeIcons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opOntraForms\", function() { return opOntraForms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opOrderSummary\", function() { return opOrderSummary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opPaymentInfo\", function() { return opPaymentInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"opRecaptcha\", function() { return opRecaptcha; });\n/*\n * Opt.optionslScritps.ts\n * These functions analyse a page DOM looking for elements that require extra scripts. If an element is detected\n * these functions search for the existance of the script dependencies and add them if they are missing.\n * They may already be on the page if the page was built before the release of the Global Blocks project so we accont\n * for that.\n *\n * Background:\n * When we load a page in the editor our pag template (template.html) contains all possible needed scripts. Including all scripts allows\n * users to add any element without having to manage script injection. When we publish a page and build, all optional\n * scripts are removed from the page. The script will run when a page is served, looking at the DOM and adding what's\n * needed. At least that's the plan.\n *\n * For the future:\n * A note on moonray.paymentplandisplay.js and web components.\n * Once webpack allows dynamic script inclusion we should be able to move the some of these checks to opt-assets.webpack\n * You can do something like\n * if( countdown ){\n *     require( './templates/custom-elements/countdown/countdown-v1.js' );\n * }\n * etc...\n * These requires must happen in order because order summary depends on moonray.paymentplandisplay.js ie\n * require( '../../formeditor/moonrayform/paymentplandisplay/moonrayform.paymentplandisplay.js' );\n * require( './templates/custom-elements/ontraport-order-summary/ontraport-order-summary.js' );\n *\n * We should try to do this because it lets us bundle eveything together and take advantage of webpacks build ( obfiscation etc)\n * The big challenge is making webpack requires dynamic and that moonray.paymentplandisplay.js is its own bundle.\n*/\n/*\n * Append a script tag to the document body, setting the script src to what ever is passed in.\n */\nfunction appendScript(src, target, blocking, context) {\n    if (src) {\n        context = (context !== null && context !== void 0 ? context : document);\n        var script = context.createElement('script');\n        if (blocking) {\n            // Disable asyncronous loading incase the scriptst are order dependent\n            script.async = false;\n        }\n        let appendTo = context.body;\n        script.src = src;\n        if (target) {\n            appendTo = target;\n        }\n        appendTo.appendChild(script);\n        return true;\n    }\n    return false;\n}\nfunction appendLink(href, rel, target = document.head, as, context) {\n    if (!href) {\n        return false;\n    }\n    context = (context !== null && context !== void 0 ? context : document);\n    const linkElement = context.createElement('link');\n    linkElement.setAttribute('href', href);\n    linkElement.setAttribute('rel', rel);\n    if (as) {\n        linkElement.setAttribute('as', as);\n    }\n    target.appendChild(linkElement);\n}\n// HEADER SCRIPTS --------------------------------------------------------------------------------------------------------\n/*\n * Check for font awesome icons\n */\nfunction opFontAwesomeIcons() {\n    let hasFaIcons = document.querySelector('i.fa');\n    let hasFaIconsCss = document.querySelector('.opt-style__font-awesome');\n    if (hasFaIcons && !hasFaIconsCss) {\n        appendLink('//optassets.ontraport.com/opt_assets/opt_boilerplates/v3/font-awesome.min.css', 'preload stylesheet', document.head, 'style');\n        return true;\n    }\n    else if (hasFaIcons && !hasFaIconsCss) {\n        return true;\n    }\n    return false;\n}\n/*\n * Determine if a page contains a recaptcha if it does and doesnt have recaptcha scripts add them.\n */\nfunction opRecaptcha() {\n    let hasRecaptchaElement = document.querySelector('.opt-recaptcha');\n    let hasRecaptchaScript = document.querySelector('.opt-js-recaptcha');\n    if (hasRecaptchaElement && !hasRecaptchaScript) {\n        appendScript('https://www.google.com/recaptcha/api.js', document.head);\n        return true;\n    }\n    else if (hasRecaptchaElement && !hasRecaptchaScript) {\n        return true;\n    }\n    return false;\n}\n// BODY SCRIPTS -----------------------------------------------------------------------------------------------------------\n/*\n * Check for countdown timers\n */\nfunction opCountDownTimer() {\n    let hasCt = document.querySelector('ontraport-countdown');\n    let ctScripts = document.querySelector('[src*=\"countdown-v1.js\"]');\n    let webCompScripts = document.querySelector('[src*=\"custom-elements.min.js\"]');\n    if (hasCt) {\n        // Add the web component scripts\n        if (!webCompScripts) {\n            // Set the blocking parameter to true so that it'll block since the web components need this script to finish\n            // executing before proceeding since they depend on it.\n            appendScript('//optassets.ontraport.com/opt_assets/static/js/custom-elements.min.js', undefined, true);\n        }\n        // Add the countdown scripts\n        if (!ctScripts) {\n            appendScript('//optassets.ontraport.com/opt_assets/templates/custom-elements/countdown/countdown-v1.js');\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * If there is dynamic content on the page, then load the dynamic content JavaScript and CSS.\n */\nfunction opDynamicContent(context = document, forceAdd) {\n    let hasDynamicContent = isDynamicTemplate() || hasDynamicBlocks(context) || hasDynamicElements(context) || forceAdd;\n    if (hasDynamicContent) {\n        appendScript('//optassets.ontraport.com/opt_assets/static/js/dynamic_content_module/dynamic_content.js', undefined, undefined, context);\n    }\n    return hasDynamicContent;\n}\nfunction isDynamicTemplate(context = document) {\n    return window.document.querySelectorAll('.ontraport_panes_dynamic_template').length > 0;\n}\n/**\n * Check if the page has dynamic blocks on the page.\n */\nfunction hasDynamicBlocks(context = document) {\n    return context.querySelectorAll('[data-dc]').length > 0;\n}\n/**\n * Check it the page has dynamic elements on the page.\n */\nfunction hasDynamicElements(context = document) {\n    return context.querySelectorAll('[data-field-name], [data-color-field-name]').length > 0;\n}\n/*\n * Determine if the page contains facebook comments. If it does, add the facebook scripts and the in it call.\n */\nfunction opFacebookComments() {\n    let hasFBC = document.querySelector('.fb-comments-container');\n    let fBscripts = document.querySelector('[src=\"//connect.facebook.net/en_US/sdk.js\"]');\n    if (hasFBC && !fBscripts) {\n        // Add the init scripts\n        let fbcScript = document.createElement('script');\n        let fbcInitScript = document.createTextNode('window.fbAsyncInit = function(){ var $fbCommentsElement = $( \".fb-comments\" ); FB.init( { \"appId\": $fbCommentsElement.attr( \"data-appid\" ), \"xfbml\": true, \"version\": \"v2.3\" } ); };');\n        fbcScript.appendChild(fbcInitScript);\n        document.body.appendChild(fbcScript);\n        // Add the facebook sdk\n        appendScript('//connect.facebook.net/en_US/sdk.js');\n        return true;\n    }\n    else if (hasFBC && fBscripts) {\n        return true;\n    }\n    return false;\n}\n/*\n * Determine if opf.js is needed\n */\nfunction opOntraForms() {\n    let hasOntraForms = document.querySelectorAll('[data-opf-watch-submit], [data-opf-trigger]');\n    let hasOntraFormsScripts = document.querySelector('script[src*=\"opf.js\"]');\n    if (hasOntraForms.length) {\n        if (!hasOntraFormsScripts) {\n            appendScript('//optassets.ontraport.com/opt_assets/static/js/opf.js');\n            return true;\n        }\n    }\n    return false;\n}\n/*\n * Determine if the order summary is presesnt\n */\nfunction opOrderSummary() {\n    let hasOrderSummary = document.querySelector('ontraport-order-summary');\n    let hasOrderSummaryScripts = document.querySelector('[src*=\"ontraport-order-summary.js\"]');\n    let webCompScripts = document.querySelector('[src*=\"document-register-element.js\"]');\n    if (hasOrderSummary) {\n        if (!webCompScripts) {\n            // Set the blocking parameter to true so that it'll block since the web components need this script to finish\n            // executing before proceeding since they depend on it.\n            appendScript('//optassets.ontraport.com/opt_assets/templates/custom-elements/document-register-element/build/document-register-element.js', undefined, true);\n        }\n        if (!hasOrderSummaryScripts) {\n            // Note we disable async loading for these scripts because they are order dependent. The order summary must execute\n            // after the paymentplan code so it can build models.\n            appendScript('//optassets.ontraport.com/opt_assets/static/js/moonrayform.paymentplandisplay.js', undefined, true);\n            appendScript('//optassets.ontraport.com/opt_assets/templates/custom-elements/ontraport-order-summary/dist/order-summary.js', undefined, true);\n        }\n        return true;\n    }\n    return false;\n}\n/*\n * Check for countdown timers\n */\nfunction opPaymentInfo() {\n    let hasPaymentInfo = document.querySelector('payment-info');\n    let paymentInfoScripts = document.querySelector('[src*=\"payment-info.js\"]');\n    let webCompScripts = document.querySelector('[src*=\"custom-elements.min.js\"]');\n    if (hasPaymentInfo) {\n        // Add the web component scripts\n        if (!webCompScripts) {\n            // Set the blocking parameter to true so that it'll block since the web components need this script to finish\n            // executing before proceeding since they depend on it.\n            appendScript('//optassets.ontraport.com/opt_assets/static/js/custom-elements.min.js', undefined, true);\n        }\n        // Add the countdown scripts\n        if (!paymentInfoScripts) {\n            appendScript('//optassets.ontraport.com/opt_assets/templates/custom-elements/payment-info/dist/payment-info.js');\n        }\n        return true;\n    }\n    return false;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/opt.optionalScripts.ts\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/polyfills.js":
/*!****************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/polyfills.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// IE 11 polyfills for the .07 % that call support. I say we doing them a favor letting them know its time for a new laptop.\n// QA says otherwise so here we go.\n// .startsWith\nif (!String.prototype.startsWith) {\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value: function (search, rawPos) {\n      var pos = rawPos > 0 ? rawPos | 0 : 0;\n      return this.substring(pos, pos + search.length) === search;\n    }\n  });\n} // .forEach --------------------------------------------------------------------------------------------------------------------------------------------------\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\n\n\nif (!Array.prototype.forEach) {\n  Array.prototype.forEach = function (callback\n  /* , thisArg*/\n  ) {\n    var T, k;\n\n    if (this == null) {\n      throw new TypeError('this is null or not defined');\n    } // 1. Let O be the result of calling toObject() passing the\n    // |this| value as the argument.\n\n\n    var O = Object(this); // 2. Let lenValue be the result of calling the Get() internal\n    // method of O with the argument \"length\".\n    // 3. Let len be toUint32(lenValue).\n\n    var len = O.length >>> 0; // 4. If isCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + ' is not a function');\n    } // 5. If thisArg was supplied, let T be thisArg; else let\n    // T be undefined.\n\n\n    if (arguments.length > 1) {\n      T = arguments[1];\n    } // 6. Let k be 0.\n\n\n    k = 0; // 7. Repeat while k < len.\n\n    while (k < len) {\n      var kValue; // A. Let Pk be ToString(k).\n      //    This is implicit for LHS operands of the in operator.\n      // b. Let kPresent be the result of calling the HasProperty\n      //    internal method of O with argument Pk.\n      //    This step can be combined with c.\n      // c. If kPresent is true, then\n\n      if (k in O) {\n        // I. Let kValue be the result of calling the Get internal\n        // method of O with argument Pk.\n        kValue = O[k]; // Ii. Call the Call internal method of callback with T as\n        // the this value and argument list containing kValue, k, and O.\n\n        callback.call(T, kValue, k, O);\n      } // D. Increase k by 1.\n\n\n      k++;\n    } // 8. return undefined.\n\n  };\n} // NodeList foreach --------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n} // .closest --------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n} // Array .includes --------------------------------------------------------------------------------------------------------------------------------------------------\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n\n\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    value: function (searchElement, fromIndex) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      } // 1. Let O be ? ToObject(this value).\n\n\n      var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n      var len = o.length >>> 0; // 3. If len is 0, return false.\n\n      if (len === 0) {\n        return false;\n      } // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n\n\n      var n = fromIndex | 0; // 5. If n ≥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      } // 7. Repeat, while k < len\n\n\n      while (k < len) {\n        // A. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\n        if (sameValueZero(o[k], searchElement)) {\n          return true;\n        } // C. Increase k by 1.\n\n\n        k++;\n      } // 8. Return false\n\n\n      return false;\n    }\n  });\n} // String .includes --------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    'use strict';\n\n    if (typeof start !== 'number') {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    } else {\n      return this.indexOf(search, start) !== -1;\n    }\n  };\n} // Element remove ----------------------------------------------------------------------------------------------------------------------------------------------------\n// from:https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode !== null) {\n          this.parentNode.removeChild(this);\n        }\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // Array from -------------------------------------------------------------------------------------------------------------------------------------------------------\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\n\n\nif (!Array.from) {\n  Array.from = function () {\n    var toStr = Object.prototype.toString;\n\n    var isCallable = function (fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n\n    var toInteger = function (value) {\n      var number = Number(value);\n\n      if (isNaN(number)) {\n        return 0;\n      }\n\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n\n    var toLength = function (value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    }; // The length property of the from method is 1.\n\n\n    return function from(arrayLike\n    /* , mapFn, thisArg */\n    ) {\n      // 1. Let C be the this value.\n      var C = this; // 2. Let items be ToObject(arrayLike).\n\n      var items = Object(arrayLike); // 3. ReturnIfAbrupt(items).\n\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      } // 4. If mapfn is undefined, then let mapping be false.\n\n\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        } // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      } // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n\n\n      var len = toLength(items.length); // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len); // 16. Let k be 0.\n\n      var k = 0; // 17. Repeat, while k < len… (also steps a - h)\n\n      var kValue;\n\n      while (k < len) {\n        kValue = items[k];\n\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n\n        k += 1;\n      } // 18. Let putStatus be Put(A, \"length\", len, true).\n\n\n      A.length = len; // 20. Return A.\n\n      return A;\n    };\n  }();\n} // DOM append() polyfill ----------------------------------------------------------------------------------------------\n// Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/append()/append().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('append')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'append', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function append() {\n        var argArr = Array.prototype.slice.call(arguments),\n            docFrag = document.createDocumentFragment();\n        argArr.forEach(function (argItem) {\n          var isNode = argItem instanceof Node;\n          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n        });\n        this.appendChild(docFrag);\n      }\n    });\n  });\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]); // DOM prepend() polyfill\n// Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('prepend')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'prepend', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function prepend() {\n        var argArr = Array.prototype.slice.call(arguments),\n            docFrag = document.createDocumentFragment();\n        argArr.forEach(function (argItem) {\n          var isNode = argItem instanceof Node;\n          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n        });\n        this.insertBefore(docFrag, this.firstChild);\n      }\n    });\n  });\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]); // Template tag poly fill for custom elements that use template tags --------------------------------------------------\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n// minimal template polyfill\n\n\n(function () {\n  'use strict';\n\n  var needsTemplate = typeof HTMLTemplateElement === 'undefined';\n  var brokenDocFragment = !(document.createDocumentFragment().cloneNode() instanceof DocumentFragment);\n  var needsDocFrag = false; // NOTE: Replace DocumentFragment to work around IE11 bug that\n  // causes children of a document fragment modified while\n  // there is a mutation observer to not have a parentNode, or\n  // have a broken parentNode (!?!)\n\n  if (/Trident/.test(navigator.userAgent)) {\n    (function () {\n      needsDocFrag = true;\n      var origCloneNode = Node.prototype.cloneNode;\n\n      Node.prototype.cloneNode = function cloneNode(deep) {\n        var newDom = origCloneNode.call(this, deep);\n\n        if (this instanceof DocumentFragment) {\n          newDom.__proto__ = DocumentFragment.prototype;\n        }\n\n        return newDom;\n      }; // IE's DocumentFragment querySelector code doesn't work when\n      // called on an element instance\n\n\n      DocumentFragment.prototype.querySelectorAll = HTMLElement.prototype.querySelectorAll;\n      DocumentFragment.prototype.querySelector = HTMLElement.prototype.querySelector;\n      Object.defineProperties(DocumentFragment.prototype, {\n        nodeType: {\n          get: function () {\n            return Node.DOCUMENT_FRAGMENT_NODE;\n          },\n          configurable: true\n        },\n        localName: {\n          get: function () {\n            return undefined;\n          },\n          configurable: true\n        },\n        nodeName: {\n          get: function () {\n            return '#document-fragment';\n          },\n          configurable: true\n        }\n      });\n      var origInsertBefore = Node.prototype.insertBefore;\n\n      function insertBefore(newNode, refNode) {\n        if (newNode instanceof DocumentFragment) {\n          var child;\n\n          while (child = newNode.firstChild) {\n            origInsertBefore.call(this, child, refNode);\n          }\n        } else {\n          origInsertBefore.call(this, newNode, refNode);\n        }\n\n        return newNode;\n      }\n\n      Node.prototype.insertBefore = insertBefore;\n      var origAppendChild = Node.prototype.appendChild;\n\n      Node.prototype.appendChild = function appendChild(child) {\n        if (child instanceof DocumentFragment) {\n          insertBefore.call(this, child, null);\n        } else {\n          origAppendChild.call(this, child);\n        }\n\n        return child;\n      };\n\n      var origRemoveChild = Node.prototype.removeChild;\n      var origReplaceChild = Node.prototype.replaceChild;\n\n      Node.prototype.replaceChild = function replaceChild(newChild, oldChild) {\n        if (newChild instanceof DocumentFragment) {\n          insertBefore.call(this, newChild, oldChild);\n          origRemoveChild.call(this, oldChild);\n        } else {\n          origReplaceChild.call(this, newChild, oldChild);\n        }\n\n        return oldChild;\n      };\n\n      Document.prototype.createDocumentFragment = function createDocumentFragment() {\n        var frag = this.createElement('df');\n        frag.__proto__ = DocumentFragment.prototype;\n        return frag;\n      };\n\n      var origImportNode = Document.prototype.importNode;\n\n      Document.prototype.importNode = function importNode(impNode, deep) {\n        deep = deep || false;\n        var newNode = origImportNode.call(this, impNode, deep);\n\n        if (impNode instanceof DocumentFragment) {\n          newNode.__proto__ = DocumentFragment.prototype;\n        }\n\n        return newNode;\n      };\n    })();\n  } // NOTE: we rely on this cloneNode not causing element upgrade.\n  // This means this polyfill must load before the CE polyfill and\n  // this would need to be re-worked if a browser supports native CE\n  // but not <template>.\n\n\n  var capturedCloneNode = Node.prototype.cloneNode;\n  var capturedCreateElement = Document.prototype.createElement;\n  var capturedImportNode = Document.prototype.importNode;\n  var capturedRemoveChild = Node.prototype.removeChild;\n  var capturedAppendChild = Node.prototype.appendChild;\n  var capturedReplaceChild = Node.prototype.replaceChild;\n  var capturedParseFromString = DOMParser.prototype.parseFromString;\n  var capturedHTMLElementInnerHTML = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML') || {\n    /**\n    * @this {!HTMLElement}\n    * @return {string}\n    */\n    get: function () {\n      return this.innerHTML;\n    },\n\n    /**\n    * @this {!HTMLElement}\n    * @param {string}\n    */\n    set: function (text) {\n      this.innerHTML = text;\n    }\n  };\n  var capturedChildNodes = Object.getOwnPropertyDescriptor(window.Node.prototype, 'childNodes') || {\n    /**\n    * @this {!Node}\n    * @return {!NodeList}\n    */\n    get: function () {\n      return this.childNodes;\n    }\n  };\n  var elementQuerySelectorAll = Element.prototype.querySelectorAll;\n  var docQuerySelectorAll = Document.prototype.querySelectorAll;\n  var fragQuerySelectorAll = DocumentFragment.prototype.querySelectorAll;\n  var scriptSelector = 'script:not([type]),script[type=\"application/javascript\"],script[type=\"text/javascript\"]';\n\n  function QSA(node, selector) {\n    // IE 11 throws a SyntaxError with `scriptSelector` if the node has no children due to the `:not([type])` syntax\n    if (!node.childNodes.length) {\n      return [];\n    }\n\n    switch (node.nodeType) {\n      case Node.DOCUMENT_NODE:\n        return docQuerySelectorAll.call(node, selector);\n\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        return fragQuerySelectorAll.call(node, selector);\n\n      default:\n        return elementQuerySelectorAll.call(node, selector);\n    }\n  } // Returns true if nested templates cannot be cloned (they cannot be on\n  // some impl's like Safari 8 and Edge)\n  // OR if cloning a document fragment does not result in a document fragment\n\n\n  var needsCloning = function () {\n    if (!needsTemplate) {\n      var t = document.createElement('template');\n      var t2 = document.createElement('template');\n      t2.content.appendChild(document.createElement('div'));\n      t.content.appendChild(t2);\n      var clone = t.cloneNode(true);\n      return clone.content.childNodes.length === 0 || clone.content.firstChild.content.childNodes.length === 0 || brokenDocFragment;\n    }\n  }();\n\n  var TEMPLATE_TAG = 'template';\n\n  var PolyfilledHTMLTemplateElement = function () {};\n\n  if (needsTemplate) {\n    var contentDoc = document.implementation.createHTMLDocument('template');\n    var canDecorate = true;\n    var templateStyle = document.createElement('style');\n    templateStyle.textContent = TEMPLATE_TAG + '{display:none;}';\n    var head = document.head;\n    head.insertBefore(templateStyle, head.firstElementChild);\n    /**\n    Provides a minimal shim for the <template> element.\n    */\n\n    PolyfilledHTMLTemplateElement.prototype = Object.create(HTMLElement.prototype); // If elements do not have `innerHTML` on instances, then\n    // templates can be patched by swizzling their prototypes.\n\n    var canProtoPatch = !document.createElement('div').hasOwnProperty('innerHTML');\n    /**\n    The `decorate` method moves element children to the template's `content`.\n    NOTE: there is no support for dynamically adding elements to templates.\n    */\n\n    PolyfilledHTMLTemplateElement.decorate = function (template) {\n      // If the template is decorated or not in HTML namespace, return fast\n      if (template.content || template.namespaceURI !== document.documentElement.namespaceURI) {\n        return;\n      }\n\n      template.content = contentDoc.createDocumentFragment();\n      var child;\n\n      while (child = template.firstChild) {\n        capturedAppendChild.call(template.content, child);\n      } // NOTE: prefer prototype patching for performance and\n      // because on some browsers (IE11), re-defining `innerHTML`\n      // can result in intermittent errors.\n\n\n      if (canProtoPatch) {\n        template.__proto__ = PolyfilledHTMLTemplateElement.prototype;\n      } else {\n        template.cloneNode = function (deep) {\n          return PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n        }; // Add innerHTML to template, if possible\n        // Note: this throws on Safari 7\n\n\n        if (canDecorate) {\n          try {\n            defineInnerHTML(template);\n            defineOuterHTML(template);\n          } catch (err) {\n            canDecorate = false;\n          }\n        }\n      } // Bootstrap recursively\n\n\n      PolyfilledHTMLTemplateElement.bootstrap(template.content);\n    }; // Taken from https://github.com/jquery/jquery/blob/73d7e6259c63ac45f42c6593da8c2796c6ce9281/src/manipulation/wrapMap.js\n\n\n    var topLevelWrappingMap = {\n      option: ['select'],\n      thead: ['table'],\n      col: ['colgroup', 'table'],\n      tr: ['tbody', 'table'],\n      th: ['tr', 'tbody', 'table'],\n      td: ['tr', 'tbody', 'table']\n    };\n\n    var getTagName = function (text) {\n      // Taken from https://github.com/jquery/jquery/blob/73d7e6259c63ac45f42c6593da8c2796c6ce9281/src/manipulation/var/rtagName.js\n      return (/<([a-z][^/\\0>\\x20\\t\\r\\n\\f]+)/i.exec(text) || ['', ''])[1].toLowerCase();\n    };\n\n    var defineInnerHTML = function defineInnerHTML(obj) {\n      Object.defineProperty(obj, 'innerHTML', {\n        get: function () {\n          return getInnerHTML(this);\n        },\n        set: function (text) {\n          // For IE11, wrap the text in the correct (table) context\n          var wrap = topLevelWrappingMap[getTagName(text)];\n\n          if (wrap) {\n            for (var i = 0; i < wrap.length; i++) {\n              text = '<' + wrap[i] + '>' + text + '</' + wrap[i] + '>';\n            }\n          }\n\n          contentDoc.body.innerHTML = text;\n          PolyfilledHTMLTemplateElement.bootstrap(contentDoc);\n\n          while (this.content.firstChild) {\n            capturedRemoveChild.call(this.content, this.content.firstChild);\n          }\n\n          var body = contentDoc.body; // If we had wrapped, get back to the original node\n\n          if (wrap) {\n            for (var j = 0; j < wrap.length; j++) {\n              body = body.lastChild;\n            }\n          }\n\n          while (body.firstChild) {\n            capturedAppendChild.call(this.content, body.firstChild);\n          }\n        },\n        configurable: true\n      });\n    };\n\n    var defineOuterHTML = function defineOuterHTML(obj) {\n      Object.defineProperty(obj, 'outerHTML', {\n        get: function () {\n          return '<' + TEMPLATE_TAG + '>' + this.innerHTML + '</' + TEMPLATE_TAG + '>';\n        },\n        set: function (innerHTML) {\n          if (this.parentNode) {\n            contentDoc.body.innerHTML = innerHTML;\n            var docFrag = this.ownerDocument.createDocumentFragment();\n\n            while (contentDoc.body.firstChild) {\n              capturedAppendChild.call(docFrag, contentDoc.body.firstChild);\n            }\n\n            capturedReplaceChild.call(this.parentNode, docFrag, this);\n          } else {\n            throw new Error('Failed to set the \\'outerHTML\\' property on \\'Element\\': This element has no parent node.');\n          }\n        },\n        configurable: true\n      });\n    };\n\n    defineInnerHTML(PolyfilledHTMLTemplateElement.prototype);\n    defineOuterHTML(PolyfilledHTMLTemplateElement.prototype);\n    /**\n    The `bootstrap` method is called automatically and \"fixes\" all\n    <template> elements in the document referenced by the `doc` argument.\n    */\n\n    PolyfilledHTMLTemplateElement.bootstrap = function bootstrap(doc) {\n      var templates = QSA(doc, TEMPLATE_TAG);\n\n      for (var i = 0, l = templates.length, t; i < l && (t = templates[i]); i++) {\n        PolyfilledHTMLTemplateElement.decorate(t);\n      }\n    }; // Auto-bootstrapping for main document\n\n\n    document.addEventListener('DOMContentLoaded', function () {\n      PolyfilledHTMLTemplateElement.bootstrap(document);\n    }); // Patch document.createElement to ensure newly created templates have content\n\n    Document.prototype.createElement = function createElement() {\n      var el = capturedCreateElement.apply(this, arguments);\n\n      if (el.localName === 'template') {\n        PolyfilledHTMLTemplateElement.decorate(el);\n      }\n\n      return el;\n    };\n\n    DOMParser.prototype.parseFromString = function () {\n      var el = capturedParseFromString.apply(this, arguments);\n      PolyfilledHTMLTemplateElement.bootstrap(el);\n      return el;\n    };\n\n    Object.defineProperty(HTMLElement.prototype, 'innerHTML', {\n      get: function () {\n        return getInnerHTML(this);\n      },\n      set: function (text) {\n        capturedHTMLElementInnerHTML.set.call(this, text);\n        PolyfilledHTMLTemplateElement.bootstrap(this);\n      },\n      configurable: true,\n      enumerable: true\n    }); // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\n\n    var escapeAttrRegExp = /[&\\u00A0\"]/g;\n    var escapeDataRegExp = /[&\\u00A0<>]/g;\n\n    var escapeReplace = function (c) {\n      switch (c) {\n        case '&':\n          return '&amp;';\n\n        case '<':\n          return '&lt;';\n\n        case '>':\n          return '&gt;';\n\n        case '\"':\n          return '&quot;';\n\n        case '\\u00A0':\n          return '&nbsp;';\n      }\n    };\n\n    var escapeAttr = function (s) {\n      return s.replace(escapeAttrRegExp, escapeReplace);\n    };\n\n    var escapeData = function (s) {\n      return s.replace(escapeDataRegExp, escapeReplace);\n    };\n\n    var makeSet = function (arr) {\n      var set = {};\n\n      for (var i = 0; i < arr.length; i++) {\n        set[arr[i]] = true;\n      }\n\n      return set;\n    }; // http://www.whatwg.org/specs/web-apps/current-work/#void-elements\n\n\n    var voidElements = makeSet(['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr']);\n    var plaintextParents = makeSet(['style', 'script', 'xmp', 'iframe', 'noembed', 'noframes', 'plaintext', 'noscript']);\n    /**\n    * @param {Node} node\n    * @param {Node} parentNode\n    * @param {Function=} callback\n    */\n\n    var getOuterHTML = function (node, parentNode, callback) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          {\n            var tagName = node.localName;\n            var s = '<' + tagName;\n            var attrs = node.attributes;\n\n            for (var i = 0, attr; attr = attrs[i]; i++) {\n              s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n            }\n\n            s += '>';\n\n            if (voidElements[tagName]) {\n              return s;\n            }\n\n            return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n          }\n\n        case Node.TEXT_NODE:\n          {\n            var data =\n            /** @type {Text} */\n            node.data;\n\n            if (parentNode && plaintextParents[parentNode.localName]) {\n              return data;\n            }\n\n            return escapeData(data);\n          }\n\n        case Node.COMMENT_NODE:\n          {\n            return '<!--' +\n            /** @type {Comment} */\n            node.data + '-->';\n          }\n\n        default:\n          {\n            window.console.error(node);\n            throw new Error('not implemented');\n          }\n      }\n    };\n    /**\n    * @param {Node} node\n    * @param {Function=} callback\n    */\n\n\n    var getInnerHTML = function (node, callback) {\n      if (node.localName === 'template') {\n        node =\n        /** @type {HTMLTemplateElement} */\n        node.content;\n      }\n\n      var s = '';\n      var c$ = callback ? callback(node) : capturedChildNodes.get.call(node);\n\n      for (var i = 0, l = c$.length, child; i < l && (child = c$[i]); i++) {\n        s += getOuterHTML(child, node, callback);\n      }\n\n      return s;\n    };\n  } // Make cloning/importing work!\n\n\n  if (needsTemplate || needsCloning) {\n    PolyfilledHTMLTemplateElement._cloneNode = function _cloneNode(template, deep) {\n      var clone = capturedCloneNode.call(template, false); // NOTE: decorate doesn't auto-fix children because they are already\n      // decorated so they need special clone fixup.\n\n      if (this.decorate) {\n        this.decorate(clone);\n      }\n\n      if (deep) {\n        // NOTE: use native clone node to make sure CE's wrapped\n        // cloneNode does not cause elements to upgrade.\n        capturedAppendChild.call(clone.content, capturedCloneNode.call(template.content, true)); // Now ensure nested templates are cloned correctly.\n\n        fixClonedDom(clone.content, template.content);\n      }\n\n      return clone;\n    }; // Given a source and cloned subtree, find <template>'s in the cloned\n    // subtree and replace them with cloned <template>'s from source.\n    // We must do this because only the source templates have proper .content.\n\n\n    var fixClonedDom = function fixClonedDom(clone, source) {\n      // Do nothing if cloned node is not an element\n      if (!source.querySelectorAll) {\n        return;\n      } // These two lists should be coincident\n\n\n      var s$ = QSA(source, TEMPLATE_TAG);\n\n      if (s$.length === 0) {\n        return;\n      }\n\n      var t$ = QSA(clone, TEMPLATE_TAG);\n\n      for (var i = 0, l = t$.length, t, s; i < l; i++) {\n        s = s$[i];\n        t = t$[i];\n\n        if (PolyfilledHTMLTemplateElement && PolyfilledHTMLTemplateElement.decorate) {\n          PolyfilledHTMLTemplateElement.decorate(s);\n        }\n\n        capturedReplaceChild.call(t.parentNode, cloneNode.call(s, true), t);\n      }\n    }; // Make sure scripts inside of a cloned template are executable\n\n\n    var fixClonedScripts = function fixClonedScripts(fragment) {\n      var scripts = QSA(fragment, scriptSelector);\n\n      for (var ns, s, i = 0; i < scripts.length; i++) {\n        s = scripts[i];\n        ns = capturedCreateElement.call(document, 'script');\n        ns.textContent = s.textContent;\n        var attrs = s.attributes;\n\n        for (var ai = 0, a; ai < attrs.length; ai++) {\n          a = attrs[ai];\n          ns.setAttribute(a.name, a.value);\n        }\n\n        capturedReplaceChild.call(s.parentNode, ns, s);\n      }\n    }; // Override all cloning to fix the cloned subtree to contain properly\n    // cloned templates.\n\n\n    var cloneNode = Node.prototype.cloneNode = function cloneNode(deep) {\n      var dom; // Workaround for Edge bug cloning documentFragments\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8619646/\n\n      if (!needsDocFrag && brokenDocFragment && this instanceof DocumentFragment) {\n        if (!deep) {\n          return this.ownerDocument.createDocumentFragment();\n        } else {\n          dom = importNode.call(this.ownerDocument, this, true);\n        }\n      } else if (this.nodeType === Node.ELEMENT_NODE && this.localName === TEMPLATE_TAG && this.namespaceURI == document.documentElement.namespaceURI) {\n        dom = PolyfilledHTMLTemplateElement._cloneNode(this, deep);\n      } else {\n        dom = capturedCloneNode.call(this, deep);\n      } // Template.content is cloned iff `deep`.\n\n\n      if (deep) {\n        fixClonedDom(dom, this);\n      }\n\n      return dom;\n    }; // NOTE: we are cloning instead of importing <template>'s.\n    // However, the ownerDocument of the cloned template will be correct!\n    // This is because the native import node creates the right document owned\n    // subtree and `fixClonedDom` inserts cloned templates into this subtree,\n    // thus updating the owner doc.\n\n\n    var importNode = Document.prototype.importNode = function importNode(element, deep) {\n      deep = deep || false;\n\n      if (element.localName === TEMPLATE_TAG) {\n        return PolyfilledHTMLTemplateElement._cloneNode(element, deep);\n      } else {\n        var dom = capturedImportNode.call(this, element, deep);\n\n        if (deep) {\n          fixClonedDom(dom, element);\n          fixClonedScripts(dom);\n        }\n\n        return dom;\n      }\n    };\n  }\n\n  if (needsTemplate) {\n    window.HTMLTemplateElement = PolyfilledHTMLTemplateElement;\n  }\n})(); // .fill polyfil\n\n\nif (!Array.prototype.fill) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    value: function (value) {\n      // Steps 1-2.\n      if (this == null) {\n        throw new TypeError('this is null or not defined');\n      }\n\n      var O = Object(this); // Steps 3-5.\n\n      var len = O.length >>> 0; // Steps 6-7.\n\n      var start = arguments[1];\n      var relativeStart = start >> 0; // Step 8.\n\n      var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.\n\n      var end = arguments[2];\n      var relativeEnd = end === undefined ? len : end >> 0; // Step 11.\n\n      var finalValue = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.\n\n      while (k < finalValue) {\n        O[k] = value;\n        k++;\n      } // Step 13.\n\n\n      return O;\n    }\n  });\n} // Object assign\n\n\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      'use strict';\n\n      if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/polyfills.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/postmessage.js":
/*!******************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/postmessage.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * A backwards compatable implementation of postMessage\n * by Josh Fraser (joshfraser.com)\n * released under the Apache 2.0 license.\n *\n * this code was adapted from Ben Alman's jQuery postMessage code found at:\n * http://benalman.com/projects/jquery-postmessage-plugin/\n *\n * other inspiration was taken from Luke Shepard's code for Facebook Connect:\n * http://github.com/facebook/connect-js/blob/master/src/core/xd.js\n *\n * the goal of this project was to make a backwards compatable version of postMessage\n * without having any dependency on jQuery or the FB Connect libraries\n *\n * my goal was to keep this as terse as possible since my own purpose was to use this\n * as part of a distributed widget where filesize could be sensative.\n *\n */\n// Everything is wrapped in the XD function to reduce namespace collisions\n\n(() => {\n  var XD = function () {\n    var interval_id,\n        last_hash,\n        cache_bust = 1,\n        attached_callback = function () {},\n        _window = this || window;\n\n    return {\n      postMessage: function (message, target_url, target) {\n        if (!target_url) {\n          return;\n        }\n\n        target = target || parent; // Default to parent\n\n        if (_window.postMessage) {\n          // The browser supports window.postMessage, so call it with a targetOrigin\n          // Set appropriately, based on the target_url parameter.\n          target.postMessage(message, target_url.replace(/([^:]+:\\/\\/[^\\/]+).*/, '$1'));\n        } else if (target_url) {\n          // The browser does not support window.postMessage, so set the location\n          // Of the target to target_url#message. A bit ugly, but it works! A cache\n          // Bust parameter is added to ensure that repeat messages trigger the callback.\n          target.location = target_url.replace(/#.*$/, '') + '#' + +new Date() + cache_bust++ + '&' + message;\n        }\n      },\n      receiveMessage: function (callback, source_origin) {\n        // Browser supports window.postMessage\n        if (_window.postMessage) {\n          // Bind the callback to the actual event associated with window.postMessage\n          if (callback) {\n            attached_callback = function (e) {\n              if (typeof source_origin === 'string' && e.origin !== source_origin || Object.prototype.toString.call(source_origin) === '[object Function]' && source_origin(e.origin) === !1) {\n                return !1;\n              }\n\n              callback(e);\n            };\n          }\n\n          if (_window.addEventListener) {\n            _window[callback ? 'addEventListener' : 'removeEventListener']('message', attached_callback, !1);\n          } else {\n            _window[callback ? 'attachEvent' : 'detachEvent']('onmessage', attached_callback);\n          }\n        } else {\n          // A polling loop is started & callback is called whenever the location.hash changes\n          interval_id && clearInterval(interval_id);\n          interval_id = null;\n\n          if (callback) {\n            interval_id = setInterval(function () {\n              var hash = document.location.hash,\n                  re = /^#?\\d+&/;\n\n              if (hash !== last_hash && re.test(hash)) {\n                last_hash = hash;\n                callback({\n                  data: hash.replace(re, '')\n                });\n              }\n            }, 100);\n          }\n        }\n      }\n    };\n  }(); // Export common js / node else browser\n\n\n  if ( true && typeof module.exports !== 'undefined') {\n    module.exports = XD;\n  } else {\n    window.XD = XD;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3cvanMtMy4yLjIvb250cmFwb3J0L29wdF9hc3NldHMvb3B0X2JvaWxlcnBsYXRlcy92My9wb3N0bWVzc2FnZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3d3dy9qcy0zLjIuMi9vbnRyYXBvcnQvb3B0X2Fzc2V0cy9vcHRfYm9pbGVycGxhdGVzL3YzL3Bvc3RtZXNzYWdlLmpzP2Q5ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKlxuICogQSBiYWNrd2FyZHMgY29tcGF0YWJsZSBpbXBsZW1lbnRhdGlvbiBvZiBwb3N0TWVzc2FnZVxuICogYnkgSm9zaCBGcmFzZXIgKGpvc2hmcmFzZXIuY29tKVxuICogcmVsZWFzZWQgdW5kZXIgdGhlIEFwYWNoZSAyLjAgbGljZW5zZS5cbiAqXG4gKiB0aGlzIGNvZGUgd2FzIGFkYXB0ZWQgZnJvbSBCZW4gQWxtYW4ncyBqUXVlcnkgcG9zdE1lc3NhZ2UgY29kZSBmb3VuZCBhdDpcbiAqIGh0dHA6Ly9iZW5hbG1hbi5jb20vcHJvamVjdHMvanF1ZXJ5LXBvc3RtZXNzYWdlLXBsdWdpbi9cbiAqXG4gKiBvdGhlciBpbnNwaXJhdGlvbiB3YXMgdGFrZW4gZnJvbSBMdWtlIFNoZXBhcmQncyBjb2RlIGZvciBGYWNlYm9vayBDb25uZWN0OlxuICogaHR0cDovL2dpdGh1Yi5jb20vZmFjZWJvb2svY29ubmVjdC1qcy9ibG9iL21hc3Rlci9zcmMvY29yZS94ZC5qc1xuICpcbiAqIHRoZSBnb2FsIG9mIHRoaXMgcHJvamVjdCB3YXMgdG8gbWFrZSBhIGJhY2t3YXJkcyBjb21wYXRhYmxlIHZlcnNpb24gb2YgcG9zdE1lc3NhZ2VcbiAqIHdpdGhvdXQgaGF2aW5nIGFueSBkZXBlbmRlbmN5IG9uIGpRdWVyeSBvciB0aGUgRkIgQ29ubmVjdCBsaWJyYXJpZXNcbiAqXG4gKiBteSBnb2FsIHdhcyB0byBrZWVwIHRoaXMgYXMgdGVyc2UgYXMgcG9zc2libGUgc2luY2UgbXkgb3duIHB1cnBvc2Ugd2FzIHRvIHVzZSB0aGlzXG4gKiBhcyBwYXJ0IG9mIGEgZGlzdHJpYnV0ZWQgd2lkZ2V0IHdoZXJlIGZpbGVzaXplIGNvdWxkIGJlIHNlbnNhdGl2ZS5cbiAqXG4gKi9cblxuLy8gRXZlcnl0aGluZyBpcyB3cmFwcGVkIGluIHRoZSBYRCBmdW5jdGlvbiB0byByZWR1Y2UgbmFtZXNwYWNlIGNvbGxpc2lvbnNcbiggKCkgPT4ge1xuICAgIHZhciBYRCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBpbnRlcnZhbF9pZCxcbiAgICAgICAgICAgIGxhc3RfaGFzaCxcbiAgICAgICAgICAgIGNhY2hlX2J1c3QgPSAxLFxuICAgICAgICAgICAgYXR0YWNoZWRfY2FsbGJhY2s9ZnVuY3Rpb24oKSB7fSxcbiAgICAgICAgICAgIF93aW5kb3cgPSB0aGlzIHx8IHdpbmRvdztcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcG9zdE1lc3NhZ2U6IGZ1bmN0aW9uKCBtZXNzYWdlLCB0YXJnZXRfdXJsLCB0YXJnZXQgKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoICF0YXJnZXRfdXJsICkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0IHx8IHBhcmVudDsgLy8gRGVmYXVsdCB0byBwYXJlbnRcblxuICAgICAgICAgICAgICAgIGlmICggX3dpbmRvdy5wb3N0TWVzc2FnZSApIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGJyb3dzZXIgc3VwcG9ydHMgd2luZG93LnBvc3RNZXNzYWdlLCBzbyBjYWxsIGl0IHdpdGggYSB0YXJnZXRPcmlnaW5cbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IGFwcHJvcHJpYXRlbHksIGJhc2VkIG9uIHRoZSB0YXJnZXRfdXJsIHBhcmFtZXRlci5cbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnBvc3RNZXNzYWdlKCBtZXNzYWdlLCB0YXJnZXRfdXJsLnJlcGxhY2UoIC8oW146XSs6XFwvXFwvW15cXC9dKykuKi8sICckMScgKSApO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICggdGFyZ2V0X3VybCApIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB3aW5kb3cucG9zdE1lc3NhZ2UsIHNvIHNldCB0aGUgbG9jYXRpb25cbiAgICAgICAgICAgICAgICAgICAgLy8gT2YgdGhlIHRhcmdldCB0byB0YXJnZXRfdXJsI21lc3NhZ2UuIEEgYml0IHVnbHksIGJ1dCBpdCB3b3JrcyEgQSBjYWNoZVxuICAgICAgICAgICAgICAgICAgICAvLyBCdXN0IHBhcmFtZXRlciBpcyBhZGRlZCB0byBlbnN1cmUgdGhhdCByZXBlYXQgbWVzc2FnZXMgdHJpZ2dlciB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5sb2NhdGlvbiA9IHRhcmdldF91cmwucmVwbGFjZSggLyMuKiQvLCAnJyApICsgJyMnICsgKCArbmV3IERhdGUoKSApICsgKCBjYWNoZV9idXN0KysgKSArICcmJyArIG1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgcmVjZWl2ZU1lc3NhZ2U6IGZ1bmN0aW9uKCBjYWxsYmFjaywgc291cmNlX29yaWdpbiApIHtcblxuICAgICAgICAgICAgICAgIC8vIEJyb3dzZXIgc3VwcG9ydHMgd2luZG93LnBvc3RNZXNzYWdlXG4gICAgICAgICAgICAgICAgaWYgKCBfd2luZG93LnBvc3RNZXNzYWdlICkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCaW5kIHRoZSBjYWxsYmFjayB0byB0aGUgYWN0dWFsIGV2ZW50IGFzc29jaWF0ZWQgd2l0aCB3aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgICAgICAgICAgICAgaWYgKCBjYWxsYmFjayApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFjaGVkX2NhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAoIHR5cGVvZiBzb3VyY2Vfb3JpZ2luID09PSAnc3RyaW5nJyAmJiBlLm9yaWdpbiAhPT0gc291cmNlX29yaWdpbiApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoIHNvdXJjZV9vcmlnaW4gKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJyAmJiBzb3VyY2Vfb3JpZ2luKCBlLm9yaWdpbiApID09PSAhMSApICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCBlICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICggX3dpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3dpbmRvd1sgY2FsbGJhY2sgPyAnYWRkRXZlbnRMaXN0ZW5lcicgOiAncmVtb3ZlRXZlbnRMaXN0ZW5lcicgXSggJ21lc3NhZ2UnLCBhdHRhY2hlZF9jYWxsYmFjaywgITEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF93aW5kb3dbIGNhbGxiYWNrID8gJ2F0dGFjaEV2ZW50JyA6ICdkZXRhY2hFdmVudCcgXSggJ29ubWVzc2FnZScsIGF0dGFjaGVkX2NhbGxiYWNrICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBBIHBvbGxpbmcgbG9vcCBpcyBzdGFydGVkICYgY2FsbGJhY2sgaXMgY2FsbGVkIHdoZW5ldmVyIHRoZSBsb2NhdGlvbi5oYXNoIGNoYW5nZXNcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWxfaWQgJiYgY2xlYXJJbnRlcnZhbCggaW50ZXJ2YWxfaWQgKTtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWxfaWQgPSBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICggY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbF9pZCA9IHNldEludGVydmFsKCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaGFzaCA9IGRvY3VtZW50LmxvY2F0aW9uLmhhc2gsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlID0gL14jP1xcZCsmLztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIGhhc2ggIT09IGxhc3RfaGFzaCAmJiByZS50ZXN0KCBoYXNoICkgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RfaGFzaCA9IGhhc2g7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCB7ZGF0YTogaGFzaC5yZXBsYWNlKCByZSwgJycgKX0gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KCk7XG5cbiAgICAvLyBFeHBvcnQgY29tbW9uIGpzIC8gbm9kZSBlbHNlIGJyb3dzZXJcbiAgICBpZiAoIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gWEQ7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LlhEID0gWEQ7XG4gICAgfVxufSApKCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXpEQTtBQTJEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/postmessage.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/uiLocker.js":
/*!***************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/uiLocker.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n     * Dialog / ui locker\n     * copied from v2.4 cart_orderForm.js\n     */\n(function ($) {\n  $.fn.moonrayUILockerV2 = function () {\n    let defaultTemplate = '<div class=\"moonrayUILockerMessage moonrayUILockerMessage-closebutton-{closeButton} theme--{theme}\">' + '<i class=\"close-button material-icons left\">close</i>' + '<div class=\"title h2 dark-color-text\">{title}</div>' + '<div class=\"message label dark-color-text\">{message}</div>' + '<div class=\"progress light-color-background\"><div class=\"indeterminate primary-color-background\"></div></div>' + '</div>';\n    /**\n     * EligibleToPop\n     *\n     * Added a setTimeout() to the spawning of the processing dialog so it had sometime to request the fonts\n     * when the element was appended to the document. This also fades the dialog in when it's showed.\n     *\n     * This ended up causing a funny bug in Firefox though because Firefox resubmits post data on history.go( -1 ).\n     *\n     *      To recreate with Firefox:\n     *          1. Fillout the form.\n     *          2. Get redirected to the thank you page.\n     *          3. Click the back button on the browser.\n     *\n     * Firefox tries to resubmit the form's post data when the page returns to the previously filled out form.\n     *      AND MOZILLA THOUGHT THAT THIS WAS A GOOD IDEA!\n     *      TSK TSK.\n     *\n     * Since this plugin now opens the processing dialog in a setTimeout(), it was possible for the dialog to\n     * defer it's open long enough that the secondary call to close it would happen before it even opened.\n     *\n     * Enter \"eligibleToPop\":\n     * Stop the processing dialog from opening if we've attempted to close it before the setTimeout() executes.\n     *\n     */\n\n    var eligibleToPop = false;\n\n    var closeUILocker = function () {\n      var $this = $(document.body);\n      $this.children('.moonrayUILockerOverlay').remove();\n      $this.children('.moonrayUILockerMessage').remove();\n    };\n    /**\n     * Handles the moonray.uiLockerV2 event that gets triggered across our forms.\n     * This is the \"processing\" dialog that appears when the user fills out a form.\n     *\n     * @param e {Event} The event object.\n     * @param options {object} Model that drives the UI locker. It should have a format like:\n     * {\n     *     message: The single message to display in the dialog\n     *     title: The title to display in the dialog.\n     *     theme: The theme/format for the dialog. Right now we have two types: processing and multiple\n     *          processing: the most basic format for the dialog. It just displays the message.\n     *          multiple: it displays multiple messages based on the interval property.\n     *     template: The DOM markup to use to generate the contents of the dialog.\n     *          The markup uses {PROPERTY-NAME} string replacement to inject data into the markup.\n     *          Where PROPERTY-NAME matches one of the property names of this object.\n     *          So {title} is replaced with the value of the title property of this object.\n     * }\n     */\n\n\n    var uiLockerHandler = function (e, options) {\n      /*\n       * Super small templating engine\n       * http://mir.aculo.us/2011/03/09/little-helpers-a-tweet-sized-javascript-templating-engine/\n       *\n       * used to display the status messages when contacting the server\n       */\n      function t(s, d) {\n        for (var p in d) {\n          s = s.replace(new RegExp('{' + p + '}', 'g'), d[p]);\n        }\n\n        return s;\n      }\n\n      var defaults = {\n        // If no message, then hide\n        message: '',\n        title: '',\n        // Processing, error, warning\n        theme: 'processing',\n        // Show the close button\n        closeButton: false\n      };\n      var settings = $.extend({}, defaults, options),\n          $this = $(this);\n      /*\n       *  Title based on theme\n       */\n\n      if (options) {\n        $this.append('<div class=\"ui-widget-overlay moonrayUILockerOverlay\"></div>'); // Process our template and inject our data properties\n\n        const templateMarkup = options.template || defaultTemplate;\n        const $content = $(t(templateMarkup, settings)).appendTo($this);\n        $content.css({\n          opacity: 0,\n          transition: 'opacity .25s ease-in-out'\n        });\n        eligibleToPop = true;\n        setTimeout(function () {\n          if (!eligibleToPop) {\n            return;\n          } // If the window location and window.parent location are different, then we're in an iframe\n\n\n          var inIframe = window.parent && window.parent.location !== window.location;\n\n          if (!inIframe) {\n            $content.css('opacity', 1);\n          } else {\n            var bodyHeight = $this.outerHeight(),\n                windowOuterHeight = window.outerHeight; // If the body of the iframe is smaller than the window, then the iframe will not have a scroll bar.\n            // So simply center the ui locker on the body\n\n            if (bodyHeight < windowOuterHeight) {\n              $content.position({\n                of: $this,\n                at: 'center center',\n                my: 'center center'\n              }).css('opacity', 1); // If the body of the iframe is larger than the window, then the iframe could be scrolled\n              // So run special logic to center ui locker in the currently scrolled position of the iframe\n            } else {\n              // Take into account how far down they're scrolled when positioning the processing dialog\n              var viewportVerticalCenter = windowOuterHeight / 2;\n              var dialogHeight = $content.outerHeight(); // Take the entire height of the body and subtract the viewport height. This will give you\n              // Where the viewport starts\n\n              var viewportTop = bodyHeight - windowOuterHeight;\n              var dialogTop = viewportTop + (viewportVerticalCenter - dialogHeight / 2); // Now calculate the horizontal positioning of the processing dialog\n\n              var windowHorizontalCenter = $this.outerWidth() / 2;\n\n              var _templateWidth = $content.outerWidth();\n\n              var dialogCenter = windowHorizontalCenter - _templateWidth / 2; // Manually position it\n\n              $content.css({\n                left: dialogCenter,\n                top: dialogTop,\n                opacity: 1\n              });\n            }\n          }\n\n          eligibleToPop = false; //\n          // Adding some time here to allow the thing to render with the google fonts and what not.\n          //\n        }, 25);\n      } else {\n        closeUILocker();\n        eligibleToPop = false;\n      }\n    };\n\n    return this.bind('moonray.uiLockerV2', uiLockerHandler.bind(this)).delegate('.moonrayUILockerMessage-closebutton-true .close-button', 'click', function () {\n      // Close up shop\n      $(document.body).trigger('moonray.uiLockerV2');\n    });\n  };\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/uiLocker.js\n");

/***/ }),

/***/ "./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/validator.js":
/*!****************************************************************************!*\
  !*** ./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/validator.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @license\n * jQuery Tools Validator @VERSION - HTML5 is here. Now use it.\n *\n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n *\n * http://flowplayer.org/tools/form/validator/\n *\n * Since: Mar 2010\n * Date: @DATE\n *\n * @brief Ontrapages V3 form validation 4/10/2018. This file also exists on in legacey ontraforms, we are duping it\n *        here to provide some insulation and decouple ontrapages forms from legacey form editor code.\n */\n\n(function ($) {\n  $.tools = $.tools || {\n    version: '@VERSION'\n  }; // Globals\n\n  var typeRe = /\\[type=([a-z]+)\\]/,\n      numRe = /^-?[0-9]*(\\.[0-9]+)?$/,\n      dateInput = $.tools.dateinput,\n      // http://net.tutsplus.com/tutorials/other/8-regular-expressions-you-should-know/\n  // Domain name TLDs can have a maximum of 63 characters\n  emailRe = /^([a-z0-9_\\.\\-\\+]+)@([\\da-z\\.\\-]+)\\.([a-z\\.]{2,63})$/i,\n      emailBlackList = /(\\.@)|(@\\.)/i,\n      // Dont allow periods just before @ nor right after.\n  urlRe = /^(https?:\\/\\/)?[\\da-z\\.\\-]+\\.[a-z\\.]{2,6}[#&+_\\?\\/\\w \\.\\-=]*$/i,\n      v,\n      localizedMessages;\n\n  if (window.op && op.localizedValidationMessages) {\n    localizedMessages = op.localizedValidationMessages;\n  } else {\n    localizedMessages = {\n      creditCardNumber: 'Please enter a valid credit card number.',\n      email: 'Please enter a valid email address.',\n      confirmEmail: 'Your email addresses do not match.',\n      url: 'Please enter a valid URL.',\n      number: 'Please enter a numeric value.',\n      max: 'Please enter a value no larger than',\n      min: 'Please enter a value of at least',\n      required: 'Please complete this mandatory field.',\n      radio: 'Please select an option.',\n      listMinPrefix: 'Minimum selection',\n      listMinSuffix: 'required.',\n      listMaxPrefix: 'Maximum selection',\n      listMaxSuffix: 'exceeded.',\n      expirationDate: 'Please select a future date.'\n    };\n  }\n\n  v = $.tools.validator = {\n    conf: {\n      grouped: false,\n      // Show all error messages at once inside the container\n      effect: 'default',\n      // Show/hide effect for error message. only 'default' is built-in\n      errorClass: 'invalid',\n      // Input field class name in case of validation error\n      // When to check for validity?\n      inputEvent: null,\n      // Change, blur, keyup, null\n      errorInputEvent: 'keyup',\n      // Change, blur, keyup, null\n      formEvent: 'submit',\n      // Submit, null\n      lang: 'en',\n      // Default language for error messages\n      message: '<div/>',\n      messageAttr: 'data-message',\n      // Name of the attribute for overridden error message\n      messageClass: 'error',\n      // Error message element's class name\n      offset: [0, 0],\n      position: 'center right',\n      singleError: false,\n      // Validate all inputs at once\n      speed: 'normal' // Message's fade-in speed\n\n    },\n\n    /* The Error Messages */\n    messages: {\n      '*': {\n        en: 'Please correct this value.'\n      }\n    },\n    localize: function (lang, messages) {\n      $.each(messages, function (key, msg) {\n        v.messages[key] = v.messages[key] || {};\n        v.messages[key][lang] = msg;\n      });\n    },\n    localizeFn: function (key, messages) {\n      v.messages[key] = v.messages[key] || {};\n      $.extend(v.messages[key], messages);\n    },\n\n    /**\n     * Adds a new validator\n     */\n    fn: function (matcher, msg, fn) {\n      // No message supplied\n      if ($.isFunction(msg)) {\n        fn = msg; // Message(s) on second argument\n      } else {\n        if (typeof msg == 'string') {\n          msg = {\n            en: msg\n          };\n        }\n\n        this.messages[matcher.key || matcher] = msg;\n      } // Check for \"[type=xxx]\" (not supported by jQuery)\n\n\n      var test = typeRe.exec(matcher);\n\n      if (test) {\n        matcher = isType(test[1]);\n      } // Add validator to the arsenal\n\n\n      fns.push([matcher, fn]);\n    },\n\n    /* Add new show/hide effect */\n    addEffect: function (name, showFn, closeFn) {\n      effects[name] = [showFn, closeFn];\n    }\n  };\n  /* Calculate error message position relative to the input */\n\n  function getPosition(trigger, el, conf) {\n    // Get the first element in the selector set\n    el = $(el).first() || el; // Get origin top/left position\n\n    var top = trigger.offset().top,\n        left = trigger.offset().left,\n        pos = conf.position.split(/,?\\s+/),\n        y = pos[0],\n        x = pos[1];\n    top -= el.outerHeight() - conf.offset[0];\n    left += trigger.outerWidth() + conf.offset[1]; // IPad position fix\n\n    if (/iPad/i.test(navigator.userAgent)) {\n      top -= $(window).scrollTop();\n    } // Adjust Y\n\n\n    var height = el.outerHeight() + trigger.outerHeight();\n\n    if (y == 'center') {\n      top += height / 2;\n    }\n\n    if (y == 'bottom') {\n      top += height;\n    } // Adjust X\n\n\n    var width = trigger.outerWidth();\n\n    if (x == 'center') {\n      left -= (width + el.outerWidth()) / 2;\n    }\n\n    if (x == 'left') {\n      left -= width;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  } // $.is(\"[type=xxx]\") or $.filter(\"[type=xxx]\") not working in jQuery 1.3.2 or 1.4.2\n\n\n  function isType(type) {\n    function fn() {\n      return this.getAttribute('type') == type;\n    }\n\n    fn.key = '[type=\"' + type + '\"]';\n    return fn;\n  }\n\n  var fns = [],\n      effects = {\n    'default': [// Show errors function\n    function (errs) {\n      var conf = this.getConf(); // Loop errors\n\n      $.each(errs, function (i, err) {\n        // Add error class\n        var input = err.input;\n        input.addClass(conf.errorClass); // Get handle to the error container\n\n        var msg = input.data('msg.el'); // Create it if not present\n\n        if (!msg) {\n          msg = $(conf.message).addClass(conf.messageClass).appendTo(document.body);\n          input.data('msg.el', msg);\n        } // Clear the container\n\n\n        msg.css({\n          visibility: 'hidden'\n        }).find('p').remove(); // Populate messages\n\n        $.each(err.messages, function (i, m) {\n          $('<p/>').html(m).appendTo(msg);\n        }); // Make sure the width is not full body width so it can be positioned correctly\n\n        if (msg.outerWidth() == msg.parent().width()) {\n          msg.add(msg.find('p')).css({\n            display: 'inline'\n          });\n        } // Insert into correct position (relative to the field)\n\n\n        var pos = getPosition(input, msg, conf);\n        msg.css({\n          visibility: 'visible',\n          position: 'absolute',\n          top: pos.top,\n          left: pos.left\n        }).fadeIn(conf.speed);\n      }); // Hide errors function\n    }, function (inputs) {\n      var conf = this.getConf();\n      inputs.removeClass(conf.errorClass).each(function () {\n        var msg = $(this).data('msg.el');\n\n        if (msg) {\n          msg.css({\n            visibility: 'hidden'\n          });\n        }\n      });\n    }]\n  };\n  /* Special selectors */\n\n  $.each('email,url,number'.split(','), function (i, key) {\n    $.expr[':'][key] = function (el) {\n      return el.getAttribute('type') === key;\n    };\n  });\n  /*\n      Oninvalid() jQuery plugin.\n      Usage: $(\"input:eq(2)\").oninvalid(function() { ... });\n  */\n\n  $.fn.oninvalid = function (fn) {\n    return this[fn ? 'on' : 'trigger']('OI', fn);\n  };\n  /** ***** Built-in HTML5 standard validators *********/\n\n  /*\n   * Validate credit card number. Just use a LUHN check.\n   */\n\n\n  v.fn('[name=\"payment_number\"]', localizedMessages.creditCardNumber, function (el, cardNumber) {\n    // Spaces and dashes may be valid characters, but must be stripped to calculate the checksum.\n    var valid = false,\n        cardNumber = cardNumber.replace(/ +/g, '').replace(/-+/g, '');\n    var numDigits = cardNumber.length;\n\n    if (numDigits >= 14 && numDigits <= 16 && parseInt(cardNumber) > 0) {\n      var sum = 0,\n          i = numDigits - 1,\n          pos = 1,\n          digit,\n          luhn = new String();\n\n      do {\n        digit = parseInt(cardNumber.charAt(i));\n        luhn += pos++ % 2 == 0 ? digit * 2 : digit;\n      } while (--i >= 0);\n\n      for (i = 0; i < luhn.length; i++) {\n        sum += parseInt(luhn.charAt(i));\n      }\n\n      valid = sum % 10 == 0;\n    }\n\n    return !!valid;\n  });\n  v.fn(':email', 'Please enter a valid email address.', function (el, v) {\n    return !v || emailRe.test(v) && !emailBlackList.test(v) && v.split('@')[1].indexOf('..') === -1;\n  });\n  v.fn(':url', localizedMessages.url, function (el, v) {\n    return !v || urlRe.test(v);\n  });\n  v.fn(':number', localizedMessages.number, function (el, v) {\n    numRe.test(v);\n    return numRe.test(v);\n  });\n  v.fn('input[type=\\'text\\'][opt-numeric]', localizedMessages.number, function (el, v) {\n    return numRe.test(v);\n  });\n  v.fn('[max]', localizedMessages.max + ' $1.', function (el, v) {\n    // Skip empty values and dateinputs\n    if (v === '' || dateInput && el.is(':date') || el.hasClass('opt-date-time-field')) {\n      return true;\n    }\n\n    var max = el.attr('max');\n    return parseFloat(v) <= parseFloat(max) ? true : [max];\n  });\n  v.fn('[min]', localizedMessages.min + ' $1.', function (el, v) {\n    // Skip empty values and dateinputs\n    if (v === '' || dateInput && el.is(':date') || el.hasClass('opt-date-time-field')) {\n      return true;\n    }\n\n    var min = el.attr('min');\n    return parseFloat(v) >= parseFloat(min) ? true : [min];\n  });\n  v.fn('[required]', localizedMessages.required, function (el, v) {\n    // If field is hidden (such as shipping field when \"shipping different from billing\" checkbox is unchecked) return true\n    // Note though, dropdown fields have the \"required\" attr on the select element, which isn't always visible.\n    // Date Time fields also store dates in hidden fields\n    if (!el.is(':visible') && !el.is('select')) {\n      return true;\n    }\n\n    if (el.is(':checkbox')) {\n      return el.is(':checked');\n    } // Check selectable lists\n    else if (Array.isArray(v)) {\n        // User has selected at least 1 truthy option\n        return v.some(el => el);\n      }\n\n    return !!v.trim();\n  });\n  v.fn(':radio', localizedMessages.radio, function (el) {\n    var checked = false;\n    $('[name=\\'' + el.attr('name') + '\\']').each(function (i, el) {\n      if ($(el).is(':checked')) {\n        checked = true;\n      }\n    });\n    return checked ? true : false;\n  });\n  /*\n   * OPV3 Selectable list minimum selected validation\n   */\n\n  v.fn('[opt-list-min]', localizedMessages.listMinPrefix + ' (%s) ' + localizedMessages.listMinSuffix, function (el, v) {\n    var selected = v.length,\n        min = +el.attr('opt-list-min');\n    return {\n      validation: selected >= min,\n      messageData: min\n    };\n  });\n  /*\n   * OPV3 Selectable list maximum selected validation\n   */\n\n  v.fn('[opt-list-max]', localizedMessages.listMaxPrefix + ' (%s) ' + localizedMessages.listMaxSuffix, function (el, v) {\n    var selected = v.length,\n        max = +el.attr('opt-list-max');\n    return {\n      validation: selected <= max,\n      messageData: max\n    };\n  });\n  /*\n   * OPV3 Expiration date validation\n   */\n\n  v.fn('[opt-validate-expiration=\"true\"]', localizedMessages.expirationDate, function (el, v) {\n    var form = el[0].closest('form'),\n        expMonth = parseInt(form.querySelector('[name=\"payment_expire_month\"]').value || 0),\n        expYear = parseInt(form.querySelector('[name=\"payment_expire_year\"]').value || 0),\n        currentDate = new Date(),\n        currentMonth = currentDate.getMonth(),\n        currentYear = currentDate.getFullYear();\n    return expYear > currentYear || expYear === currentYear && expMonth > currentMonth;\n  });\n  /*\n  *\tValidation for confirm email field.  Will only validate IFF\n  *\t the confirm_email field is present AND an email field.\n  */\n\n  v.fn('[name=confirm_email]', localizedMessages.confirmEmail, function (el, value) {\n    var _form = $(el).parents('form').first();\n\n    if (_form.length > 0) {\n      var _emailField = _form.find('input[name=\\'email\\']').first();\n\n      if (_emailField.length > 0) {\n        var _emailVal = _emailField.val().toLowerCase();\n\n        return value.toLowerCase() == _emailVal;\n      }\n    }\n\n    return true;\n  });\n\n  function Validator(inputs, form, conf) {\n    // Private variables\n    var self = this,\n        fire = form.add(self); // Make sure there are input fields available\n\n    inputs = inputs.not(':button, :image, :reset, :submit'); // Prevent default Firefox validation\n\n    form.attr('novalidate', 'novalidate'); // Utility function\n\n    function pushMessage(to, matcher, returnValue, msgCustomization) {\n      // Only one message allowed\n      if (!conf.grouped && to.length) {\n        return;\n      } // The error message\n\n\n      var msg; // Substitutions are returned\n\n      if (returnValue === false || $.isArray(returnValue)) {\n        msg = v.messages[matcher.key || matcher] || v.messages['*'];\n        msg = msg[conf.lang] || v.messages['*'].en;\n        msg = msgCustomization ? msg.replace('%s', msgCustomization) : msg; // Substitution\n\n        var matches = msg.match(/\\$\\d/g);\n\n        if (matches && $.isArray(returnValue)) {\n          $.each(matches, function (i) {\n            msg = msg.replace(this, returnValue[i]);\n          });\n        } // Error message is returned directly\n\n      } else {\n        msg = returnValue[conf.lang] || returnValue;\n      }\n\n      to.push(msg);\n    } // API methods\n\n\n    $.extend(self, {\n      getConf: function () {\n        return conf;\n      },\n      getForm: function () {\n        return form;\n      },\n      getInputs: function () {\n        return inputs;\n      },\n      reflow: function () {\n        inputs.each(function () {\n          var input = $(this),\n              msg = input.data('msg.el');\n\n          if (msg) {\n            var pos = getPosition(input, msg, conf);\n            msg.css({\n              top: pos.top,\n              left: pos.left\n            });\n          }\n        });\n        return self;\n      },\n\n      /* @param e - for internal use only */\n      invalidate: function (errs, e) {\n        // Errors are given manually: { fieldName1: 'message1', fieldName2: 'message2' }\n        if (!e) {\n          var errors = [];\n          $.each(errs, function (key, val) {\n            var input = inputs.filter('[name=\\'' + key + '\\']');\n\n            if (input.length) {\n              // Trigger HTML5 ininvalid event\n              input.trigger('OI', [val]);\n              errors.push({\n                input: input,\n                messages: [val]\n              });\n            }\n          });\n          errs = errors;\n          e = $.Event();\n        } // OnFail callback\n\n\n        e.type = 'onFail';\n        fire.trigger(e, [errs]); // Call the effect\n\n        if (!e.isDefaultPrevented()) {\n          effects[conf.effect][0].call(self, errs, e);\n        }\n\n        return self;\n      },\n      reset: function (els) {\n        els = els || inputs;\n        els.removeClass(conf.errorClass).each(function () {\n          var msg = $(this).data('msg.el');\n\n          if (msg) {\n            msg.remove();\n            $(this).data('msg.el', null);\n          }\n        }).off(conf.errorInputEvent + '.v' || false);\n        return self;\n      },\n      destroy: function () {\n        form.off(conf.formEvent + '.V reset.V');\n        inputs.off(conf.inputEvent + '.V change.V');\n        return self.reset();\n      },\n\n      /* @returns boolean */\n      checkValidity: function (els, e, payPalBtnSubmit) {\n        els = els || inputs;\n        els = els.filter(function (el) {\n          return $(el).hasClass('opt-date-time-field') || $(el).not(':disabled');\n        }); // Filter duplicate elements by name\n\n        var names = {};\n        els = els.filter(function () {\n          var name = $(this).attr('name');\n\n          if (!names[name]) {\n            names[name] = true;\n            return $(this);\n          }\n        });\n\n        if (!els.length) {\n          return true;\n        }\n\n        e = e || $.Event(); // OnBeforeValidate\n\n        e.type = 'onBeforeValidate';\n        fire.trigger(e, [els]);\n\n        if (e.isDefaultPrevented()) {\n          return e.result;\n        } // Container for errors\n\n\n        var errs = []; // Loop trough the inputs\n\n        els.each(function () {\n          // Field and it's error message container\n          var msgs = [],\n              el = $(this).data('messages', msgs),\n              nameAttr = el.attr('name'),\n              event = dateInput && el.is(':date') ? 'onHide.v' : conf.errorInputEvent + '.v'; // If the input hold the value for the MaterializeCSS picker then listen for lib events\n\n          if (el.hasClass('opt-date-time-field')) {\n            event = 'dateTimePickerSave.v';\n          } // Cleanup previous validation event\n\n\n          el.off(event); // Loop all validator functions\n\n          $.each(fns, function () {\n            var fn = this,\n                match = fn[0]; // Match found\n\n            if (el.filter(match).length) {\n              // Execute a validator function\n              var msgCustomization = false,\n                  returnValue; // If field is a payment field and we submitted via paypal, always return true for validation\n\n              if (payPalBtnSubmit && nameAttr && nameAttr.includes('payment_')) {\n                returnValue = true;\n              } else if (event === 'dateTimePickerSave.v' && e && e.detail && e.detail.dateTimeString) {\n                // The `checkValidity` can be invoked multiple ways. If invoked by the event listener we'll\n                // have the data that's about to be saved by the lib and we'll check against that value\n                // because the actual DOM input hasn't been updated yet\n                returnValue = fn[1].call(self, el, e.detail.dateTimeString);\n              } else {\n                returnValue = fn[1].call(self, el, el.val());\n              } // If the validation function returned an object it is dynamically customizing the message\n\n\n              if (typeof returnValue === 'object' && !Array.isArray(returnValue)) {\n                msgCustomization = returnValue.messageData;\n                returnValue = returnValue.validation;\n              } // Validation failed. multiple substitutions can be returned with an array\n\n\n              if (returnValue !== true) {\n                // OnBeforeFail\n                e.type = 'onBeforeFail';\n                fire.trigger(e, [el, match]);\n\n                if (e.isDefaultPrevented()) {\n                  return false;\n                } // Overridden custom message\n\n\n                var msg = el.attr(conf.messageAttr);\n\n                if (msg) {\n                  msgs = [msg];\n                  return false;\n                } else {\n                  pushMessage(msgs, match, returnValue, msgCustomization);\n                }\n              }\n            }\n          });\n\n          if (msgs.length) {\n            errs.push({\n              input: el,\n              messages: msgs\n            }); // Trigger HTML5 ininvalid event\n\n            el.trigger('OI', [msgs]); // Begin validating upon error event type (such as keyup)\n\n            if (conf.errorInputEvent) {\n              el.on(event, function (e) {\n                self.checkValidity(el, e);\n              });\n            }\n          }\n\n          if (conf.singleError && errs.length) {\n            return false;\n          }\n        }); // Validation done. now check that we have a proper effect at hand\n\n        var eff = effects[conf.effect];\n\n        if (!eff) {\n          throw 'Validator: cannot find effect \"' + conf.effect + '\"';\n        } // Errors found\n\n\n        if (errs.length) {\n          self.invalidate(errs, e);\n          return false; // No errors\n        } else {\n          // Call the effect\n          eff[1].call(self, els, e); // OnSuccess callback\n\n          e.type = 'onSuccess';\n          fire.trigger(e, [els]);\n          els.off(conf.errorInputEvent + '.v');\n        }\n\n        return true;\n      }\n    }); // Callbacks\n\n    $.each('onBeforeValidate,onBeforeFail,onFail,onSuccess'.split(','), function (i, name) {\n      // Configuration\n      if ($.isFunction(conf[name])) {\n        $(self).on(name, conf[name]);\n      } // API methods\n\n\n      self[name] = function (fn) {\n        if (fn) {\n          $(self).on(name, fn);\n        }\n\n        return self;\n      };\n    }); // Form validation\n\n    if (conf.formEvent) {\n      form.on(conf.formEvent + '.V', function (e) {\n        if (!self.checkValidity(null, e)) {\n          return e.preventDefault();\n        } // Reset event type and target\n\n\n        e.target = form;\n        e.type = conf.formEvent;\n      });\n    } // Form reset\n\n\n    form.on('reset.V', function () {\n      self.reset();\n    }); // Disable browser's default validation mechanism\n\n    if (inputs[0] && inputs[0].validity) {\n      inputs.each(function () {\n        this.oninvalid = function () {\n          return false;\n        };\n      });\n    } // Web Forms 2.0 compatibility\n\n\n    if (form[0]) {\n      form[0].checkValidity = self.checkValidity;\n    } // Input validation\n\n\n    if (conf.inputEvent) {\n      inputs.on(conf.inputEvent + '.V', function (e) {\n        var delay = this.type === 'checkbox' ? 750 : 0,\n            el = this;\n        setTimeout(function (el) {\n          this.checkValidity($(el), e);\n          el = null;\n        }.bind(self, el), delay);\n      });\n    } // Checkboxes and selects are checked separately\n\n\n    inputs.filter(':checkbox, select').filter('[required]').on('change.V', function (e) {\n      var el = $(this);\n\n      if (this.checked || el.is('select') && $(this).val()) {\n        effects[conf.effect][1].call(self, el, e);\n      }\n    }); // DateTime component\n\n    const dateTimeInputs = inputs.filter('.opt-date-time-field');\n    dateTimeInputs.filter('.opt-date-time-field').on('dateTimePickerSave.V', function (e) {\n      var el = $(this);\n\n      if (e.detail && e.detail.dateTimeString) {\n        effects[conf.effect][1].call(self, el, e);\n      }\n    }); // If the clear input button is clicked run validition against this input in case\n\n    dateTimeInputs.each(function (_index, input) {\n      $(input).siblings().filter('.opt-date-time__icon--x').on('click', function (e) {\n        const el = $(input);\n\n        if (el) {\n          // We need to wait for an event loop cycle in order for the input to be updated\n          setTimeout(function () {\n            self.checkValidity(el, e);\n          }, 0);\n        }\n      });\n    }); // Get radio groups by name\n\n    inputs.filter(':radio[required]').on('change.V', function (e) {\n      var els = $('[name=\\'' + $(e.srcElement).attr('name') + '\\']');\n\n      if (els !== null && els.length !== 0) {\n        self.checkValidity(els, e);\n      }\n    }); // Reposition tooltips when window is resized\n    // Deboucing reflow call is good for perf & fixes issue with\n    // Mobile browsers that trigger window resize when the nav bar is visible, the position tends be off because of the\n    // Scroll inertia\n\n    var reflowTimer = null;\n    $(window).on('resize.V', function () {\n      clearTimeout(reflowTimer);\n      reflowTimer = setTimeout(function () {\n        self.reflow();\n      }, 300);\n    });\n  } // JQuery plugin initialization\n\n\n  $.fn.validator = function (conf) {\n    var instance = this.data('validator'); // Destroy existing instance\n\n    if (instance) {\n      instance.destroy();\n      this.removeData('validator');\n    } // Configuration\n\n\n    conf = $.extend(true, {}, v.conf, conf); // Selector is a form\n\n    if (this.is('form')) {\n      return this.each(function () {\n        var form = $(this);\n        instance = new Validator(form.find(':input'), form, conf);\n        form.data('validator', instance);\n      });\n    } else {\n      instance = new Validator(this, this.eq(0).closest('form'), conf);\n      return this.data('validator', instance);\n    }\n  };\n\n  var validationElems = [];\n  $.tools.validator.addEffect('opt-v3', function (errs) {\n    var conf = this.getConf(),\n        validationElems = [],\n        $input,\n        $inputParent,\n        $optEl,\n        inputType,\n        inputHeight,\n        inputPosition,\n        customErrorMsg,\n        messageText,\n        errorGUID,\n        $errorMessage,\n        $msgSpan,\n        errorHeight,\n        $errorIcon,\n        errorIconTop,\n        errorIconMargin; // Loop errors\n\n    $.each(errs, function (i, err) {\n      $.guid || ($.guid = 0); // Add error class\n\n      $input = err.input, $inputParent = $input.parent(), $optEl = $input.closest('.opt-element'), inputType = $input.attr('type'), inputHeight = $input.outerHeight(), inputPosition = $input.position(), customErrorMsg = $optEl.attr('opt-error-msg'), messageText = customErrorMsg ? customErrorMsg : err.messages.map(function (el) {\n        return '<div>' + el + '</div>';\n      }).join(''), errorGUID = 'opf-error--' + $.guid++, $errorMessage = $('<span id=\"' + errorGUID + '\" class=\"opf-error\" ><span class=\"opf-error__message\"><span class=\"opf-error__message-padding\">' + messageText + '</span></span>' + '<i class=\"material-icons\">error</i></span>'), $msgSpan = $errorMessage.find('.opf-error__message'), errorHeight = 0; // Add error class to the parent wrapper in order to namespace it\n\n      $inputParent.addClass('opf-error__input-wrapper--error'); // Remove any existing errors\n\n      if (!$inputParent.find('.opf-error').length) {\n        $inputParent.find('.opf-error').remove();\n        $inputParent.find('style').remove();\n        $inputParent.append($errorMessage);\n      } else {\n        $inputParent.find('.opf-error').attr('id', errorGUID);\n      }\n\n      $input.addClass(conf.errorClass).data('opf-error-selector', '#' + errorGUID);\n      errorHeight = Math.ceil($msgSpan.css({\n        'min-height': 'initial',\n        'max-height': 'initial'\n      }).outerHeight());\n      $msgSpan.css({\n        'min-height': '',\n        'max-height': ''\n      });\n\n      if ($optEl.attr('opt-input-style') === 'default') {\n        // Materialize icon\n        // If the message is smaller than the input wrapper we make the message grow to to full height of the input wrapper.\n        if (errorHeight < inputHeight) {\n          $errorMessage.addClass('opf-error--no-max-height');\n        } else {\n          $inputParent.append($('<style>#' + errorGUID + ':hover .opf-error__message{ max-height: ' + errorHeight + 'px; }</style>'));\n        }\n      } else {\n        // Custom icon special stuff, postiong the error icon and message over the input\n        $errorIcon = $optEl.find('.opf-error i');\n        errorIconTop = inputPosition.top; // This checks if the input is small and we can't use the default error icon margin. If it is small\n        // We calculate the margin based on the size available, or we add 8 px to match the default we user materialize inputs.\n\n        errorIconMargin = inputHeight < 40 ? (inputHeight - 24) / 2 : 8;\n        $errorIcon.css({\n          top: errorIconMargin > 0 ? errorIconTop + errorIconMargin : errorIconTop\n        });\n        $msgSpan.css({\n          top: errorIconTop\n        });\n\n        if (errorHeight < inputHeight) {\n          errorHeight = inputHeight;\n        }\n\n        $inputParent.append($('<style>#' + errorGUID + ':hover .opf-error__message{ min-height: ' + errorHeight + 'px; }</style>'));\n      }\n\n      validationElems.push({\n        inputElem: $input,\n        errorElem: $errorMessage\n      });\n      setTimeout(function ($input, $errorMessage) {\n        return function () {\n          if ($input.hasClass('opt-date-field')) {\n            var newLeft = $errorMessage.css('left');\n            /**\n             * The error icon blocks the small button that pops out the\n             * date time picker, preventing the user from clicking it,\n             * so move it over.\n             */\n\n            newLeft = +newLeft.replace('px', '') + 36;\n            $errorMessage.css({\n              left: newLeft\n            });\n          }\n\n          $errorMessage.css('opacity', 1);\n          $input = $errorMessage = null;\n        };\n      }($input, $errorMessage), 1);\n    });\n    $inputParent = $msgSpan = $optEl = null; // Hide errors function\n  }, function (inputs) {\n    var conf = this.getConf();\n    inputs.removeClass(conf.errorClass).each(function () {\n      var $this = $(this),\n          $parent = $this.parent(),\n          errorTargetClass = $this.data('opf-error-selector');\n\n      if (errorTargetClass) {\n        $(errorTargetClass).remove();\n      } // Remove the error namespace class iff exists\n\n\n      if ($parent.hasClass('opf-error__input-wrapper--error')) {\n        $parent.removeClass('opf-error__input-wrapper--error');\n      }\n    });\n    validationElems = [];\n  });\n  var reflowTimer = null;\n  $(window).on('resize.V', function () {\n    clearTimeout(reflowTimer);\n    reflowTimer = setTimeout(function () {\n      if (validationElems && validationElems.length) {\n        for (var i = 0; i < validationElems.length; i++) {\n          // Re-position the error message.\n          validationElems[i].errorElem.position({\n            of: validationElems[i].inputElem,\n            at: 'right center',\n            my: 'right-8 center'\n          });\n        }\n      }\n    }, 300);\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./www/js-3.2.2/ontraport/opt_assets/opt_boilerplates/v3/validator.js\n");

/***/ })

/******/ });